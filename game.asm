##################################################################### 
# 
# CSCB58 Winter 2022 Assembly Final Project 
# University of Toronto, Scarborough 
# 
# Student: Kate Nickoriuk	k.nickoriuk@mail.utoronto.ca 
# Student #: 1003893691		Student ID: nickoriu
# 
# Bitmap Display Configuration: 
# - Unit width in pixels: 4
# - Unit height in pixels: 4
# - Display width in pixels: 256
# - Display height in pixels: 512
# - Base Address for Display: 0x10008000 ($gp) 
# 
# Which milestones have been reached in this submission? 
# (See the assignment handout for descriptions of the milestones) 
# - Milestone 2
# 
# Which approved features have been implemented for milestone 3? 
# (See the assignment handout for the list of additional features) 
# 1. Moving Objects (Piranhas, Pufferfish) 
# 2. Disappearing Platforms (Bubbles)
# 3. Different Levels
# 4. Fail Condition
# 5. Win Condition
# 6. Score
# 7. Animated Sprites (Crab, Clam, Bubble)
# 8. (Bonus) Varying light levels, sprites get brighter as you progress upwards
# 
# Link to video demonstration for final submission: 
# - (insert YouTube / MyMedia / other URL here). Make sure we can view it! 
# 
# Are you OK with us sharing the video with people outside course staff? 
# - yes / no / yes, and please share this project github link as well! 
# - GitHub Link: https://github.com/knickoriuk/Crab-Game
# 
# Any additional information that the TA needs to know: 
# - Playing this game on different devices, I noticed a serious difference in 
#   difficulty. My desktop was a lot harder to play on than my laptop. This could
#   be either because it has a faster processor or because there is more of an input 
#   delay on my keyboard. Anyway, increase SLEEP_DUR a bit if it seems hard. 
# - Also noticed that MARS gets slow after running for a while, until restarted.
# 
#####################################################################

.eqv	WIDTH		256		# Width of display
.eqv	SLEEP_DUR	45		# Sleep duration between loops
.eqv	DEATH_PAUSE	1024		# Sleep duration after death
.eqv	INIT_POS	31640		# Initial position of the crab (offset from $gp)
.eqv	KEYSTROKE	0xffff0000	# Address storing keystrokes & values
.eqv	SEA_COL_9	0x00004390	# Sea colour, darkest
.eqv	SEA_COL_8	0x00004b95	#	:
.eqv	SEA_COL_7	0x0000539a	#	:
.eqv	SEA_COL_6	0x00005a9e	#	:
.eqv	SEA_COL_5	0x000062a3	#	:
.eqv	SEA_COL_4	0x00006aa8	#	:
.eqv	SEA_COL_3	0x000072ad	#	:
.eqv	SEA_COL_2	0x000079b1	#	:
.eqv	SEA_COL_1	0x000081b6	# 	:
.eqv	SEA_COL_0	0x000089bb	# Sea colour, lightest
.eqv	DARKNESS	0x00070300	# amount to darken colours by, per level
.eqv	GLOW_AMT	0x002c1b00	# amount to brighten bg color by, around seahorse and sea stars
.eqv	NUM_STARS	8		# Maximum number of sea stars		
.eqv	NUM_PLATFORMS	7		# Maximum number of platforms
.eqv	TERMINAL_VEL	-6		# Maximum downward speed of crab
.eqv	CRAB_UP_DIST	7		# Duration of crab jump ascension
.eqv	BUBBLE_UP_DIST	6		# Duration of crab jump ascension after bouncing on a bubble
.eqv	HORIZ_DIST	8		# Distance moved left/right per screen refresh
.eqv	UPPER_LIMIT	0x10009000	# Height that, if surpassed, moves to next level 
.eqv	POP_TIME	8		# Number of screen refreshes before a popped bubble dissipates
.eqv	BUBBLE_REGEN	100		# Number of screen refreshes before bubble regenerates. BUBBLE_REGEN > POP_TIME
.eqv	MAX_TIME	512		# Max time to complete level and still get time bonus
.eqv	STAR_PTS	10		# Number of points earned per sea star collected
.eqv	CLAM_PTS	200		# Number of points earned per clam collected
.eqv	SEAHORSE_PTS	100		# Number of points earned per seahorse collected	

.data
frame_buffer: 	.space		4096
crab:		.space		12
# struct crab {
#	int position; 	# holds address of pixel it is at
#	int state; 	# 0-walk_0, 1-walk_1, 2-jump/fall, 3-dead
#	int jump_timer; # counts down frames of rising, before falling down
# } crab;
clam:		.space		8
# struct clam {
#	int state;	# 0 if invisible, 1 if open, 2 if closed
#	int position;	# Pixel address of position of clam
# }
piranha1:	.space		8
piranha2:	.space		8
# struct piranhaX {
#	int state;	# 0 if invisible, 1 if left-facing, 2 if right-facing
#	int position;	# Pixel address of position of piranha
#	int platform;	# Memory offset from `platforms` that has the platform the piranha is on
# }
pufferfish:	.space		8
# struct pufferfish {
#	int state;	# 0 if invisible, 1 if ascending, 2 if descending
#	int position;	# Pixel address of position of pufferfish
# }
seahorse:	.space		8
# struct seahorse {
#	int state;	# 0 if invisible, 1 if visible
#	int position;	# Pixel address of position of seahorse
# }
bubble1:	.space		8
bubble2:	.space		8
# struct bubbleX {
#	int state;	# 0 if invisible/disabled, 1 if visible, X if popped (set X to time of pop)
#	int position;	# Pixel address of position of bubble
# }
stars:		.space		64	# Stores pairs of (state, position) for sea stars
					# States: 0 if invisible, 1 if visible
					# Set = to NUM_STARS * 8
platforms:	.space		56	# Stores pairs of (position, length) for platforms
					# length==0 implies the platform does not exist
					# Set = to NUM_PLATFORMS * 8

.text
.globl main

########## Register Assignment for main() ##########
# $s0 - Current level (starting at 9, working towards 0)
# $s1 - `crab` data pointer
# $s2 - Last crab location
# $s3 - Score
# $s4 -
# $s5 - background colour
# $s6 - timer: number of screen refreshes since level start
# $s7 - dead/alive flag: 0=alive, 1=dead
# $t0 - temporary values

########## Initialize Game Values ##########
main:	li   $s0, 9	# $s0 = Level
	la   $s1, crab	# $s1 = *crab
	li   $s3, 0	# $s3 = Score
	li   $s6, 0	# $s6 = Timer
	li   $s7, 0	# $s7 = Dead/alive
	
	# Setup data for Level 0
	jal  gen_level_0
	
	# Display inital level
	jal  generate_background
	jal  stamp_platforms
	jal  stamp_crab
	
########## Get Keyboard Input ##########

main_loop:
	lw   $s2, 0($s1)		# Store old crab location in $s2
	
	# If top of level was reached, build next level
	lw   $t0, 0($s1)			# $t0 = new crab.position
	bgt  $t0, UPPER_LIMIT, get_keystroke	# If height not yet reached
	lw   $t0, 4($s1)			# $t0 = crab.state
	bge  $t0, 2, get_keystroke		# If crab is not yet on land
	j    next_level

get_keystroke:		
	li   $t0, KEYSTROKE
	lw   $t0, 0($t0) 		# $t0 = 1 if key hit, 0 otherwise
	bne  $t0, 1, update_display	# if no key was hit, branch to `update_display` 
	jal  key_pressed		# Update position in `crab` struct
	j    update_display
	
########## Construct Next Level ##########

next_level: # Modify level in $s0
	addi $s0, $s0, -1	# level = level - 1
	
	# Setup data for next level
	jal  gen_next_level
	li   $s6, 0		# Reset timer to 0
	
	# Display new level
	jal  generate_background
	jal  stamp_platforms
	
########## Update Display ##########

update_display:
	jal  do_jumps		# Move crab up or down
	
	# Flicker prevention: only unstamp crab if it moved
	lw   $t9, 0($s1)		# $t9 = crab.position
	beq  $s2, $t9, update_display2	# if new pos == old pos, skip next line
	jal  unstamp_crab		# remove old crab from display

update_display2:
	# Entities, if they move, are removed from display in update_positions() or detect_collisions()
	jal  detect_collisions
	jal  update_positions

	jal  stamp_seahorse
	jal  stamp_stars
	jal  stamp_bubble
	jal  stamp_pufferfish
	jal  stamp_piranha
	jal  stamp_platforms
	jal  stamp_clam
	jal  stamp_crab

	addi $a0, $gp, 940	# $a0 = *position for scoreboard
	jal  display_score
	
	bne  $s7, 1, sleep	# If alive, skip to `sleep`
	
########## Game Over? ##########

	li   $a0, DEATH_PAUSE	# Sleep a while
	li   $v0, 32
	syscall

	li   $s5, 0		# set bg color to black
	jal  generate_background
	jal  display_gameover
	
game_over_loop:	
	li   $a0, SLEEP_DUR	# Sleep a bit
	li   $v0, 32
	syscall
	
	li   $t9, KEYSTROKE
	lw   $t9, 0($t9) 	# $t0 = 1 if key hit, 0 otherwise
	
	beqz $t9, game_over_loop # loop until a key is pressed
	li   $t9, KEYSTROKE
	lw   $t9, 4($t9)  	 # $t9 = last key hit 
	beq  $t9, 0x71, exit	 # exit program if `q` pressed
	bne  $t9, 0x70, game_over_loop # if `p` was not pressed, loop again
	j    main

########## You Won! ##########

win:	jal  display_win_screen
	li   $s5, 0x00090921	# set bg color to dark blue
	li   $t9, 0
	sw   $t9, 4($s1)	# crab.state = 0 (walk_0)
	addi $t9, $gp, 21852	
	sw   $t9, 0($s1)	# set positon for display
	li   $s0, 5		# to darken crab stamp
	jal  stamp_crab
	li   $s6, 0		# set timer to 0
	addi $s3, $s3, 10000	# Add win bonus to score
win_loop:
	jal  stamp_fireworks
	jal  display_you_win
	addi $a0, $gp, 904	# $a0 = position for score
	jal  display_score

	addi $s6, $s6, 1	# add 1 to timer
	li   $a0, 60	
	li   $v0, 32
	syscall			# Sleep ~60 ms

	# Only exit if 'p' was pressed, otherwise loop
	li   $t9, KEYSTROKE
	lw   $t9, 0($t9) 	# $t0 = 1 if key hit, 0 otherwise
	
	beqz $t9, win_loop # loop until a key is pressed
	li   $t9, KEYSTROKE
	lw   $t9, 4($t9)  	 # $t9 = last key hit 
	beq  $t9, 0x71, exit	 # exit program if `q` pressed
	bne  $t9, 0x70, win_loop # if `p` was not pressed, loop again
	j    main
	
########## Sleep and Repeat ##########

sleep:	addi $s6, $s6, 1	# add 1 to timer
	# Sleep for `SLEEP_DUR` milliseconds
	li   $a0, SLEEP_DUR
	li   $v0, 32
	syscall
	
	j    main_loop	# Jump back to main loop, checking for next key press

########## Exit Program ##########
	
exit:	li   $v0, 10
	syscall
	
#########################################################################
#	KEYBOARD INPUT and MOVEMENT FUNCTIONS				#
#########################################################################

# key_pressed():
#	Determines and updates new states and positions for the crab,
#	given the current key that is pressed.
#	$t2: crab_pos, $t3: crab_state, $t6: distance, $t7: modulo comparison, $t9: key_input
key_pressed:
	li   $t9, KEYSTROKE  	# $t9 
	lw   $t9, 4($t9) 	# $t9 = last key hit 
	
	# Get crab data
	lw   $t2, 0($s1)	# $t2 = crab.position
	lw   $t3, 4($s1)	# $t3 = crab.state
	
	# If dead (state 3), don't change anything.
	beq  $t3, 3, key_input_done
	
	# Check which key pressed
	beq  $t9, 0x61, key_a  	# If $t9 == 'a', branch to `key_a`
	beq  $t9, 0x64, key_d  	# If $t9 == 'd', branch to `key_d`
	beq  $t9, 0x77, key_w  	# If $t9 == 'w', branch to `key_w`
	beq  $t9, 0x70, key_p  	# If $t9 == 'p', branch to `key_p`
	j    key_input_done	# Otherwise, treat like no key pressed

key_a:	##### MOVE LEFT #####
	li   $t6, HORIZ_DIST	# $t6 = HORIZ_DIST
	
	bne  $t3, 2, key_a_walk
key_a_jump: 	# If crab is jumping, move left twice as far
	sll  $t6, $t6, 1	# $t6 = HORIZ_DIST * 2
	addi $t7, $t6, -4	# $t7 = HORIZ_DIST*2 - 4
	j    key_a_checkwall
	
key_a_walk:	# Otherwise, crab is walking
	addi $t7, $t6, -4	# $t7 = HORIZ_DIST - 4
	
key_a_checkwall: # Check if it is at the left wall
	addi $t4, $t2, -32	# $t4 = position of left-most edge of crab
	sub  $t4, $t4, $gp	# $t4 = left-most pixel - $gp
	li   $t5, WIDTH		# $t5 = WIDTH (probably 256)
	div  $t4, $t5		# hi = $t4 % $t5
	mfhi $t5
	ble  $t5, $t7, key_a_noroom	# if remainder is <= $t7, it cannot move that far
	
	# Update position stored in `crab`
	sub $t2, $t2, $t6		# $t2 = crab.position - distance travelled
	sw   $t2, 0($s1)		# crab.position = crab.position - distance travelled

	bne  $t3, 2, key_toggle_check	# If not currently jumping (state 2), toggle walk state
	j    key_input_done
	
key_a_noroom: # If there's not room to move that much space, reduce distance by 4 and retry
	beq  $t6, 0, key_input_done	# Break if distance == 0
	addi $t6, $t6, -4	# decrease distance moved by 4
	addi $t7, $t7, -4	# decrease modulo comparison by 4
	j    key_a_checkwall

key_d:	##### MOVE RIGHT #####
	li   $t6, HORIZ_DIST	# $t6 = HORIZ_DIST
	li   $t7, WIDTH		# $t7 = WIDTH
	
	bne  $t3, 2, key_d_walk
key_d_jump: 	# If crab is jumping, move right twice as far
	sll  $t6, $t6, 1	# $t6 = HORIZ_DIST * 2
	sub  $t7, $t7, $t6	# $t7 = WIDTH - HORIZ_DIST*2
	j    key_d_checkwall
	
key_d_walk:	# Otherwise, crab is walking
	sub  $t7, $t7, $t6	# $t7 = WIDTH - HORIZ_DIST
	
key_d_checkwall: # Check if it is at the right wall
	addi $t4, $t2, 28	# $t4 = position of right-most edge of crab
	sub  $t4, $t4, $gp	# $t4 = right-most pixel - $gp
	li   $t5, WIDTH		# $t5 = WIDTH (probably 256)
	div  $t4, $t5		# hi = $t4 % $t5
	addi $t4, $t5, -8	# $t4 = WIDTH - 8
	mfhi $t5		# $t5 = modulo(position, WIDTH)
	bge  $t5, $t7, key_d_noroom	# if remainder is >= $t7, it cannot move that far
	
	# Update position stored in `crab`
	add  $t2, $t2, $t6		# $t2 = crab.position + distance travelled
	sw   $t2, 0($s1)		# crab.position = crab.position + distance travelled

	bne  $t3, 2, key_toggle_check	# If not currently jumping (state 2), toggle walk state
	j    key_input_done
	
key_d_noroom: # If there's not room to move that much space, reduce distance by 4 and retry
	beq  $t6, 0, key_input_done	# Break if distance == 0
	addi $t6, $t6, -4	# decrease distance moved by 4
	addi $t7, $t7, -4	# decrease modulo comparison by 4
	j    key_d_checkwall


key_w:	##### JUMP #####

	# Check if crab is already jumping
	beq  $t3, 2, key_input_done
	
	# Set state to `jumping` (2)
	li   $t3, 2		# $t3 = 2
	sw   $t3, 4($s1)	# crab.state = 2
	li   $t3, CRAB_UP_DIST	# $t3 = CRAB_UP_DIST
	sw   $t3, 8($s1)	# crab.jump_timer = CRAB_UP_DIST
	j    key_input_done
	
key_p:	##### RESET #####
	# TODO: some kind of display/notification
	j    main
	
key_toggle_check: # If walking, toggle walk states from 0 <-> 1
	beq  $t2, $s2, key_input_done # If position hasn't changed, don't toggle.
	beq  $t3, 0, key_toggle_1	
	
	# Toggle crab.state from 1 to 0
	li   $t3, 0
	sw   $t3, 4($s1)	# crab.state = 0
	j    key_input_done
	
key_toggle_1: # Toggle crab.state from 0 to 1
	li   $t3, 1
	sw   $t3, 4($s1)	# crab.state = 1

key_input_done:
	jr   $ra
# ---------------------------------------------------------------------------------------


# do_jumps():
#	moves the crab's stored position up or down, depending on its state
#	$t0: outer index, $t1: inner index, $t2: crab.position, $t3 = crab.jump_timer, 
#	$t4: temp, $t5: platform pos, $t6: platform length, $t7: *platforms
do_jumps:	
	# Get crab data
	lw   $t2, 0($s1)	# $t2 = crab.position
	lw   $t3, 8($s1)	# $t3 = crab.jump_timer
	
	# if crab.jump_timer < TERMINAL_VEL, replace it with TERMINAL_VEL
	bgt  $t3, TERMINAL_VEL, dj_direction_check
	li   $t3, TERMINAL_VEL

dj_direction_check:	
	# Check jump timer	
	bgtz $t3, dj_up		# if jump_timer > 0, move up that amount and decrease jump_timer
	blez $t3, dj_down	# if jump_timer <= 0, move down that amount and decrease jump_timer
	
dj_up:	# Move crab up
	li   $t4, -WIDTH	
	mul  $t4, $t4, $t3	# $t4 = -WIDTH * crab.jump_timer
	add  $t2, $t2, $t4	# $t2 = new crab.position
	sw   $t2, 0($s1)	# crab.position = new crab.position
	
	# Decrease timer on crab.jump_timer
	addi $t3, $t3, -1	# $t3 = crab.jump_timer - 1
	sw   $t3, 8($s1)	# crab.jump_timer = crab.jump_timer - 1
	j dj_exit
	
dj_down: # Move crab down
	# if crab.pos > bottom row of display, trigger game over
	addi $t4, $gp, 32512
	blt  $t2, $t4, dj_down_check 
	li   $s7, 1		# Set dead/alive flag to 1, for dead
	li   $t4, 3
	sw   $t4, 4($s1)	# crab.state = 3 (dead)
	lw   $a0, 0($s1) 	# $a0 = crab.pos
	addi $sp, $sp, -4
	sw   $ra, 0($sp)	# Push $ra on stack
	jal  unstamp_crab
	lw   $ra, 0($sp)	# Restore $ra from stack
	addi $sp, $sp, 4
	j    dj_exit

dj_down_check: # Must determine if we are on/would fall through a platform
	li   $t0, 0		# $t0 = i; outer loop index
	la   $t7, platforms	# $t7 = *platforms
	
	addi $t4, $t2, WIDTH	# $t4 = pixel 1 row below crab pos
	
	dj_outer_loop: # Iterate over all platforms
		beq  $t0, NUM_PLATFORMS, dj_no_platform
	
		# Get platform start point and length
		lw  $t5, 0($t7)		# $t5 = platform[i] position
		lw  $t6, 4($t7)		# $t6 = platform[i] length
	
		# Convert length to number of pixels
		sll  $t6, $t6, 2	# $t6 = length*4
		addi $t6, $t6, 1	# $t6 = length*4 + 1
	
		# Calculate end point of platform
		sll  $t6, $t6, 2	# $t6 = (# pixels)*(sizeof int)
		add  $t6, $t5, $t6	# $t6 = start_point + (# pixels)*(sizeof int)
		
		# Inner loop: check once for each row upwards
		li   $t1, 0	# j = 0; inner loop index, counts down
		dj_inner_loop: # Iterate over the next n=`crab.jump_timer` rows
			blt  $t1, $t3, dj_outer_update	# if j < crab.jump_timer, break loop
			
			# Check if pixel address $t4 is between the start/end points of the platform
			blt  $t4, $t5, dj_inner_update	# if $t4 < start point, branch to `dp_update`
			bgt  $t4, $t6, dj_inner_update	# if $t4 > end point, branch to `dp_update`
			j    dj_on_plat
			
		dj_inner_update: # Update indices and row we are looking at
			addi $t1, $t1, -1	# j = j - 1
			addi $t5, $t5, -WIDTH	# $t4 = one row higher
			addi $t6, $t6, -WIDTH	# $t5 = one row higher
			j    dj_inner_loop
		
	dj_outer_update: # Update index and pointer
		addi $t0, $t0, 1	# i = i + 1
		addi $t7, $t7, 8	# $t7 = *platforms[i+1]
		j    dj_outer_loop
	
dj_no_platform:
	beq  $t4, 1, dj_on_plat	# branch to `dj_on_plat` if crab is on a platform
	
	# Move crab down
	li   $t4, -WIDTH	
	mul  $t4, $t4, $t3	# $t4 = -WIDTH * crab.jump_timer
	add  $t2, $t2, $t4	# $t2 = new crab.position
	sw   $t2, 0($s1)	# crab.position = new crab.position

	# Subtract from crab.jump_timer
	addi $t3, $t3, -1	# $t3 = crab.jump_timer - 1
	sw   $t3, 8($s1)	# crab.jump_timer = crab.jump_timer - 1
	
	# Set crab.state to `jumping` (2)
	li   $t4, 2		# $t4 = 2
	sw   $t4, 4($s1)	# crab.state = 2
	j dj_exit
	
dj_on_plat: # if crab is above a platform, move it down just to the platform:
	# Move crab down j pixels
	li   $t4, -WIDTH	
	mul  $t4, $t4, $t1	# $t4 = -WIDTH * j
	add  $t2, $t2, $t4	# $t2 = new crab.position
	sw   $t2, 0($s1)	# crab.position = new crab.position
	
	# Set jump_timer to 0
	li   $t3, 0		# $t3 = 0
	sw   $t3, 8($s1)	# crab.jump_timer = 0 
	
	# Set crab.state to 0 IFF it was already set to 2 (jumping)
	lw   $t4, 4($s1)	# $t4 = crab.state
	bne  $t4, 2, dj_exit
	sw   $t3, 4($s1)	# crab.state = 0
		
dj_exit:	
	jr   $ra	
# ---------------------------------------------------------------------------------------


# update_positions():
#	Updates the stored position value in all entity structs
#	Will also unstamp any entities that have moved
#	$t0: entity pointer, $t1: entity state, $t2: entity position, $t7: temp, $t8: temp2
update_positions:
	# Store $ra
	addi $sp, $sp, -4
	sw   $ra, 0($sp)

	# Update puffer
	la   $t0, pufferfish	# $t0 = *puffer
	lw   $t1, 0($t0)	# $t1 = puffer.state
	lw   $t2, 4($t0)	# $t2 = puffer.pos
	
	beq  $t1, 0 update_piranha1	# if puffer.state == 0, is invisible; skip it
	beq  $t1, 1, move_puff_up	# If puffer.state == 1, move it up
					# Otherwise, move it down
	# Move Puffer Down
	addi $t2, $t2, WIDTH
	sw   $t2, 4($t0)	# puffer.pos = 1 pixel below old puffer.pos
	addi $t7, $gp, 32512	# If new pos is at bottom of display, change its direction
	blt  $t2, $t7, update_piranha1
	li   $t7, 1
	sw   $t7, 0($t0) # Change state to 1 (ascending)
	j    update_piranha1
	
move_puff_up: # Move Puffer Up
	addi $t2, $t2, -WIDTH
	sw   $t2, 4($t0)	# puffer.pos = 1 pixel above old puffer.pos
	addi $t7, $gp, 256	# If new pos is at top of display, change its direction
	bgt  $t2, $t7, update_piranha1
	li   $t7, 2
	sw   $t7, 0($t0) # Change state to 2 (descending)

update_piranha1: # Update piranha1
	la   $t0, piranha1	# $t0 = *piranha1
	lw   $t1, 0($t0)	# $t1 = piranha1.state
	lw   $t2, 4($t0)	# $t2 = piranha1.pos
	move $a0, $t2		# $a0 = original piranha.pos
	
	beq  $t1, 0 update_piranha2	# if piranha.state == 0, is invisible; skip it
	beq  $t1, 1, move_piran1_left	# If piranha.state == 1, move it left
					# Otherwise, move it right
					
	# Move Piranha1 Right
	addi $t2, $t2, 4
	sw   $t2, 4($t0)	# piranha1.pos = 1 pixel right of old piranh1.pos
	
	# If new pos is at right of display, change its direction
	addi $t7, $t2, 28	# $t7 = right-most pixel of piranha
	sub  $t7, $t7, $gp	# $t7 = right-most pixel as an offset from $gp
	li   $t8, WIDTH		# $t8 = number of bytes in 1 row of pixels
	div  $t7, $t8		# hi = $t7 % $t8
	addi $t7, $t8, -4	# $t7 = WIDTH - 4
	mfhi $t8		# $t8 = modulo(position, WIDTH)
	blt  $t8, $t7, update_piranha2 # if remainder is < WIDTH-4, don't change its direction
	li   $t7, 1
	sw   $t7, 0($t0) # Change state to 1 (left-facing)
	jal  unstamp_piranha
	j    update_piranha2
	
move_piran1_left: # Move Piranha1 Left
	addi $t2, $t2, -4
	sw   $t2, 4($t0)	# piranha1.pos = 1 pixel left of old piranh1.pos
	
	# If new pos is at right of display, change its direction
	addi $t7, $t2, -28	# $t7 = left-most pixel of piranha
	sub  $t7, $t7, $gp	# $t7 = left-most pixel as an offset from $gp
	li   $t8, WIDTH		# $t8 = number of bytes in 1 row of pixels
	div  $t7, $t8		# hi = $t7 % $t8
	mfhi $t8		# $t8 = modulo(position, WIDTH)
	bgtz  $t8, update_piranha2 # if remainder is > 0, don't change its direction
	li   $t7, 2
	sw   $t7, 0($t0) # Change state to 2 (right-facing)
	jal  unstamp_piranha
	
update_piranha2: # Update piranha2
	la   $t0, piranha2	# $t0 = *piranha2
	lw   $t1, 0($t0)	# $t1 = piranha2.state
	lw   $t2, 4($t0)	# $t2 = piranha2.pos
	move $a0, $t2		# $a0 = original piranha2.pos
	
	beq  $t1, 0 update_bubble1	# if piranha.state == 0, is invisible; skip it
	beq  $t1, 1, move_piran2_left	# If piranha.state == 1, move it left
					# Otherwise, move it right
					
	# Move Piranha2 Right
	addi $t2, $t2, 4
	sw   $t2, 4($t0)	# piranha2.pos = 1 pixel right of old piranha.pos
	
	# If new pos is at right of display, change its direction
	addi $t7, $t2, 28	# $t7 = right-most pixel of piranha
	sub  $t7, $t7, $gp	# $t7 = right-most pixel as an offset from $gp
	li   $t8, WIDTH		# $t8 = number of bytes in 1 row of pixels
	div  $t7, $t8		# hi = $t7 % $t8
	addi $t7, $t8, -4	# $t7 = WIDTH - 4
	mfhi $t8		# $t8 = modulo(position, WIDTH)
	blt  $t8, $t7, update_bubble1 # if remainder is < WIDTH-4, don't change its direction
	li   $t7, 1
	sw   $t7, 0($t0) # Change state to 1 (left-facing)
	jal  unstamp_piranha
	j    update_bubble1
	
move_piran2_left: # Move Piranha2 Left
	addi $t2, $t2, -4
	sw   $t2, 4($t0)	# piranha2.pos = 1 pixel left of old piranha2.pos
	
	# If new pos is at right of display, change its direction
	addi $t7, $t2, -28	# $t7 = left-most pixel of piranha
	sub  $t7, $t7, $gp	# $t7 = left-most pixel as an offset from $gp
	li   $t8, WIDTH		# $t8 = number of bytes in 1 row of pixels
	div  $t7, $t8		# hi = $t7 % $t8
	mfhi $t8		# $t8 = modulo(position, WIDTH)
	bgtz $t8, update_bubble1 # if remainder is > 0, don't change its direction
	li   $t7, 2
	sw   $t7, 0($t0) # Change state to 2 (right-facing)
	jal  unstamp_piranha

update_bubble1:	# Update State of Bubble1
	la   $t0, bubble1	# $t0 = *bubble1
	lw   $t1, 0($t0)	# $t1 = bubble1.state
	
	ble  $t1, 1, update_bubble2 # If state <= 1, skip it
	
	addi $t1, $t1, POP_TIME
	blt  $s6, $t1, update_bubble2 # if current time < time of dissipation, dont do anything
				      # otherwise, unstamp bubble and check state

	lw   $a0, 4($t0)	# $a0 = bubble1.pos
	jal  unstamp_bubble
	
	la   $t0, bubble1	# $t0 = *bubble1
	lw   $t1, 0($t0)	# $t1 = bubble1.state
	addi $t1, $t1, BUBBLE_REGEN
	blt  $s6, $t1, update_bubble2   # if current time < time of regen, don't reset state
					# Otherwise, reset state to 1 (intact)
	li   $t1, 1
	sw   $t1, 0($t0)	# bubble1.state = 1

update_bubble2: # Update State of Bubble2
	la   $t0, bubble2	# $t0 = *bubble2
	lw   $t1, 0($t0)	# $t1 = bubble2.state
	
	ble  $t1, 1, update_seahorse # If state <= 1, skip it
	
	addi $t1, $t1, POP_TIME
	blt  $s6, $t1, update_seahorse # if current time < time of dissipation, dont do anything
				      # otherwise, unstamp bubble and check state

	lw   $a0, 4($t0)	# $a0 = bubble2.pos
	jal  unstamp_bubble
	
	la   $t0, bubble2	# $t0 = *bubble2
	lw   $t1, 0($t0)	# $t1 = bubble2.state
	addi $t1, $t1, BUBBLE_REGEN
	blt  $s6, $t1, update_seahorse   # if current time < time of regen, don't reset state
					# Otherwise, reset state to 1 (intact)
	li   $t1, 1
	sw   $t1, 0($t0)	# bubble2.state = 1
	
update_seahorse: # Update position of seahorse
	la   $t0, seahorse	# $t0 = *seahorse
	lw   $t1, 0($t0)	# $t1 = seahorse.state
	beq  $t1, 0, update_done # If state == 0, skip it

	# Move seahorse up 1 if (time % 8) == 0
	li   $t7, 8
	div  $s6, $t7
	mfhi $t7	# $t7 = time % 8
	beqz $t7, move_sh_up
	
	# Else, move seahorse down 1 if (time % 4) == 0
	li   $t7, 4
	div  $s6, $t7
	mfhi $t7	# $t7 = time % 4
	beqz $t7, move_sh_down
	j    update_done

move_sh_up:
	lw   $a0, 4($t0)	# $a0 = old seahorse.pos
	addi $t2, $a0, -WIDTH	# $t2 = 1 pixel above old pos
	sw   $t2, 4($t0)	# seahorse.pos = 1 pixel above old position
	jal  unstamp_seahorse
	j    update_done
	
move_sh_down:
	lw   $a0, 4($t0)	# $a0 = old seahorse.pos
	addi $t2, $a0, WIDTH	# $t2 = 1 pixel below old pos
	sw   $t2, 4($t0)	# seahorse.pos = 1 pixel below old position
	jal  unstamp_seahorse

update_done:
	# Restore $ra
	lw   $ra, 0($sp)
	addi $sp, $sp, 4
	
	# Return to caller
	jr   $ra
# ---------------------------------------------------------------------------------------


# detect_collisions():
#	Detects if the crab is touching any entities, based on positions stored in data structs
#	$t0: crab.pos, $t1: temp, $t2: index i, $t3: index j, 
#	$t6-$t7: temp hitboxes, $t8-$t9: crab hitbox
detect_collisions:
	lw   $t0, 0($s1)	# $t0 = crab.pos
	# Checking 6 hot spots around the crab so we don't have to check everything every time
	lw   $t1, 0($t0)		# $t1 = color under crab belly
	bne  $t1, $s5, dc_check		# if color is not bg_color, check for collisions
	lw   $t1, -276($t0)		# $t1 = color under left claw
	bne  $t1, $s5, dc_check		# :
	lw   $t1, -236($t0)		# $t1 = color under right claw
	bne  $t1, $s5, dc_check		# :
	lw   $t1, -1280($t0)		# $t1 = color above crab head
	bne  $t1, $s5, dc_check		# :
	lw   $t1, -1296($t0)		# $t1 = color above left claw
	bne  $t1, $s5, dc_check		# :
	lw   $t1, -1264($t0)		# $t1 = color above right claw
	bne  $t1, $s5, dc_check		# :
	jr   $ra			# Otherwise, (probably) no collisions
	
dc_check: # Check collisions with all entities
	# Store $ra
	addi $sp, $sp, -4
	sw   $ra, 0($sp)
	# Set up crab hitbox registers
	addi $t8, $t0, -28	# $t8 = bottom left
	addi $t9, $t0, 28	# $t9 = bottom right

dc_check_puff: # Check collisions with pufferfish
	la   $t0, pufferfish	# $t0 = *pufferfish

	lw   $t1, 0($t0)	# $t1 = puffer.state
	beqz $t1, dc_check_piranhas # if state==0, invisible; skip it
	lw   $t1, 4($t0)	# $t1 = puffer.pos
		
	addi $t6, $t8, 988	# $t6 = lower left hitbox
	addi $t7, $t9, 1060	# $t7 = lower right hitbox
	li   $t3, 0		# $t3 = j =0
	dccpu_hitbox_check:
		beq  $t3, 16, dc_check_piranhas	# Exit loop after 16 rows checked
		# if clam.pos not within $t6 - $t7, check next row up
		bgt  $t1, $t7, dccpu_hitbox_update
		blt  $t1, $t6, dccpu_hitbox_update
		
		# Otherwise, crab has collided with puffer.
		li   $s7, 1	# set alive/dead flag to dead
		li   $t1, 3
		sw   $t1, 4($s1) # crab.state = 3 (dead)
		lw   $a0, 0($s1) # $a0 = crab.pos
		jal  unstamp_crab
		
		# Don't check anything else, you're dead
		j    dc_done
		
	dccpu_hitbox_update:
		addi $t3, $t3, 1	# $t3 = j + 1
		addi $t6, $t6, -WIDTH	# iterate over next row up
		addi $t7, $t7, -WIDTH
		j    dccpu_hitbox_check
		
dc_check_piranhas: # Check collisions with piranhas
	la   $t0, piranha1	# $t0 = *piranha1
	li   $t2, 0		# $t2 = i = 0
	dccpi_loop:
		beq  $t2, 2, dc_check_star
		lw   $t1, 0($t0)	# $t1 = piranha.state
		beqz $t1, dccpi_update	# if state==0, invisible; skip this piranha
		lw   $t1, 4($t0)	# $t1 = piranha.pos
		
		addi $t6, $t8, 2540	# $t6 = lower left hitbox
		addi $t7, $t9, 2580	# $t7 = lower right hitbox
		li   $t3, 0		# $t3 = j =0
		dccpi_hitbox_check:
			beq  $t3, 16, dccpi_update	# Exit loop after 16 rows checked
			# if piranha.pos not within $t6 - $t7, check next row up
			bgt  $t1, $t7, dccpi_hitbox_update
			blt  $t1, $t6, dccpi_hitbox_update
			
			# Otherwise, crab has collided with piranha.
			li   $s7, 1	# set alive/dead flag to dead
			li   $t1, 3
			sw   $t1, 4($s1) # crab.state = 3 (dead)
			lw   $a0, 0($s1) # $a0 = crab.pos
			jal  unstamp_crab
			
			# Don't check anything else, you are dead
			j    dc_done
			
		dccpi_hitbox_update:
			addi $t3, $t3, 1	# $t3 = j + 1
			addi $t6, $t6, -WIDTH	# iterate over next row up
			addi $t7, $t7, -WIDTH
			j    dccpi_hitbox_check

	dccpi_update:
		addi $t2, $t2, 1	# $t2 = i + 1
		addi $t0, $t0, 8	# $t0 = *piranha2
		j    dccpi_loop
	
dc_check_star: # Check collisions with sea stars
	la   $t0, stars		# $t0 = *stars
	li   $t2, 0		# $t2 = i = 0
	dccss_loop:
		beq  $t2, NUM_STARS, dc_check_clam
		lw   $t1, 0($t0)	# $t1 = star.state
		beqz $t1, dccss_update	# if state==0, invisible; skip this star
		lw   $t1, 4($t0)	# $t1 = star.pos
		
		move $t6, $t8		# $t6 = lower left hitbox
		move $t7, $t9		# $t7 = lower right hitbox
		li   $t3, 0		# $t3 = j =0
		dccss_hitbox_check:
			beq  $t3, 7, dccss_update	# Exit loop after 7 rows checked
			# if star.pos not within $t6 - $t7, check next row up
			bgt  $t1, $t7, dccss_hitbox_update
			blt  $t1, $t6, dccss_hitbox_update
			
			# Otherwise, crab has collided with star.
			addi $s3, $s3, STAR_PTS	# add STAR_PTS to score
			li   $t1, 0
			sw   $t1, 0($t0)	# Set star.state to 0 (invisible)
			lw   $a0, 4($t0)
			jal  unstamp_star	# Remove star from display
			
			# Don't check other stars
			j    dc_check_clam
			
		dccss_hitbox_update:
			addi $t3, $t3, 1	# $t3 = j + 1
			addi $t6, $t6, -WIDTH	# iterate over next row up
			addi $t7, $t7, -WIDTH
			j    dccss_hitbox_check

	dccss_update:
		addi $t2, $t2, 1	# $t2 = i + 1
		addi $t0, $t0, 8	# $t0 = *stars[i+1]
		j    dccss_loop
		
dc_check_clam: # Check collisions with clam
	la   $t0, clam		# $t0 = *clam

	lw   $t1, 0($t0)	# $t1 = clam.state
	bne  $t1, 1, dc_check_seahorse # if state!=1, invisible or closed; skip it
	lw   $t1, 4($t0)	# $t1 = clam.pos
		
	addi $t6, $t8, -24	# $t6 = lower left hitbox
	addi $t7, $t9, 24	# $t7 = lower right hitbox
	li   $t3, 0		# $t3 = j =0
	dccc_hitbox_check:
		beq  $t3, 3, dc_check_seahorse	# Exit loop after 3 rows checked
		# if clam.pos not within $t6 - $t7, check next row up
		bgt  $t1, $t7, dccc_hitbox_update
		blt  $t1, $t6, dccc_hitbox_update
		
		# Otherwise, crab has collided with clam.
		addi $s3, $s3, CLAM_PTS	# add CLAM_PTS to score
		li   $t1, 2
		sw   $t1, 0($t0)	# Set clam.state to 2 (closed)
		lw   $a0, 4($t0)
		jal  unstamp_clam	# Remove clam from display
		
		# Don't check other rows
		j    dc_check_seahorse
		
	dccc_hitbox_update:
		addi $t3, $t3, 1	# $t3 = j + 1
		addi $t6, $t6, -WIDTH	# iterate over next row up
		addi $t7, $t7, -WIDTH
		j    dccc_hitbox_check
	
dc_check_seahorse: # Check collisions with seahorse
	la   $t0, seahorse	# $t0 = *seahorse

	lw   $t1, 0($t0)	# $t1 = seahorse.state
	beq  $t1, 0, dc_check_bubbles # if state==0, invisible; skip it
	lw   $t1, 4($t0)	# $t1 = seahorse.pos
		
	addi $t6, $t8, 1024	# $t6 = lower left hitbox
	addi $t7, $t9, 1024	# $t7 = lower right hitbox
	li   $t3, 0		# $t3 = j =0
	dccsh_hitbox_check:
		beq  $t3, 6, dc_check_bubbles	# Exit loop after 6 rows checked
		# if seahorse.pos not within $t6 - $t7, check next row up
		bgt  $t1, $t7, dccsh_hitbox_update
		blt  $t1, $t6, dccsh_hitbox_update
		
		# Otherwise, crab has collided with seahorse.
		addi $s3, $s3, SEAHORSE_PTS	# add SEAHORSE_PTS to score
		li   $t1, 0
		sw   $t1, 0($t0)	# Set seahorse.state to 0 (invisible)
		lw   $a0, 4($t0)
		jal  unstamp_seahorse	# Remove seahorse from display
		
		# Don't check other rows
		j    dc_check_bubbles
		
	dccsh_hitbox_update:
		addi $t3, $t3, 1	# $t3 = j + 1
		addi $t6, $t6, -WIDTH	# iterate over next row up
		addi $t7, $t7, -WIDTH
		j    dccsh_hitbox_check
		
dc_check_bubbles:
	la   $t0, bubble1	# $t0 = *bubble1
	li   $t2, 0		# $t2 = i = 0
	dccb_loop:
		beq  $t2, 2, dc_done
		lw   $t1, 0($t0)	# $t1 = bubble.state
		bne  $t1, 1, dccb_update # if state!=1, invisible/popped; skip it
		
		# Only pop bubble and bounce crab if crab was falling
		lw   $t1, 8($s1)	# $t1 = crab.jump_timer
		bgtz $t1, dc_done	# if jump_timer > 0, dont do bubble collisions
					# Otherwise, crab is falling down
						
		lw   $t1, 4($t0)	# $t1 = bubble.pos
		
		addi $t6, $t8, 2288	# $t6 = lower left hitbox
		addi $t7, $t9, 2320	# $t7 = lower right hitbox
		li   $t3, 0		# $t3 = j =0
		dccb_hitbox_check:
			beq  $t3, 10, dccb_update	# Exit loop after 10 rows checked
			# if bubble.pos not within $t6 - $t7, check next row up
			bgt  $t1, $t7, dccb_hitbox_update
			blt  $t1, $t6, dccb_hitbox_update
			
			# Otherwise, crab has collided with a bubble.
			sw   $s6, 0($t0)	# set bubble.state to level timer
			lw   $a0, 4($t0)	# $a0 = bubble.pos
			jal  unstamp_bubble
			li   $t1, BUBBLE_UP_DIST
			sw   $t1, 8($s1)	# set crab.jump_timer to BUBBLE_UP_DIST
			li   $t1, 2
			sw   $t1, 4($s1)	# set crab.state to 2 (jumping)
			
			# Don't check other bubble
			j    dc_done
			
		dccb_hitbox_update:
			addi $t3, $t3, 1	# $t3 = j + 1
			addi $t6, $t6, -WIDTH	# iterate over next row up
			addi $t7, $t7, -WIDTH
			j    dccb_hitbox_check

	dccb_update:
		addi $t2, $t2, 1	# $t2 = i + 1
		addi $t0, $t0, 8	# $t0 = *bubble2
		j    dccb_loop

dc_done:
	# Restore $ra
	lw   $ra, 0($sp)
	addi $sp, $sp, 4
	
	# Return to caller
	jr   $ra
# ---------------------------------------------------------------------------------------


#########################################################################
#	INITIALIZE LEVEL FUNCTIONS					#
#########################################################################


# gen_level_0():
# 	Sets up level 0 details in global structs
gen_level_0:
	li   $s5, SEA_COL_9	# Store current BG color
	
	# crab data
	addi $t0, $gp, INIT_POS
	sw   $t0, 0($s1)	# crab.pos = addr($gp) + INIT_POS
	li   $t0, 0
	sw   $t0, 4($s1)	# crab.state = walk_0
	sw   $t0, 8($s1)	# crab.jump_timer = 0
	
	# piranha data
	la   $t1, piranha1	# $t1 = piranha1
	li   $t0, 0
	sw   $t0, 0($t1)	# piranha1.state = invisible
	la   $t1, piranha2	# $t1 = piranha2
	li   $t0, 0
	sw   $t0, 0($t1)	# piranha2.state = invisible
	
	# pufferfish data
	la   $t1, pufferfish
	li   $t0, 0
	sw   $t0, 0($t1)	# pufferfish.state = invisible
	
	# clam data
	la   $t1, clam
	li   $t0, 0
	sw   $t0, 0($t1)	# clam.state = invisible
	
	# seahorse data
	la   $t1, seahorse
	li   $t0, 0
	sw   $t0, 0($t1)	# seahorse.state = invisible
	
	# bubble data
	la   $t1, bubble1
	li   $t0, 0
	sw   $t0, 0($t1)	# bubble1.state = invisible
	la   $t1, bubble2
	li   $t0, 0
	sw   $t0, 0($t1)	# bubble2.state = invisible
	
	# Platforms
	la   $t1, platforms
	addi $t0, $gp, 25600 # = platform_1.pos
	sw   $t0, 0($t1)
	li   $t0, 7 # = platform_1.len
	sw   $t0, 4($t1)
	addi $t0, $gp, 21660 # = platform_2.pos
	sw   $t0, 8($t1)
	li   $t0, 6 # = platform_2.len
	sw   $t0, 12($t1)
	addi $t0, $gp, 15104 # = platform_3.pos
	sw   $t0, 16($t1)
	li   $t0, 10 # = platform_3.len
	sw   $t0, 20($t1)	
	addi $t0, $gp, 7976 # = platform_4.pos
	sw   $t0, 24($t1)	
	li   $t0, 4 # = platform_4.len
	sw   $t0, 28($t1)	
	addi $t0, $gp, 2908 # = platform_5.pos
	sw   $t0, 32($t1)	
	li   $t0, 5 # = platform_5.len
	sw   $t0, 36($t1)	
	addi $t0, $gp, 31744 # = platform_6.pos
	sw   $t0, 40($t1)
	li   $t0, 16 # = platform_6.len
	sw   $t0, 44($t1)
	li   $t0, 0 # = platform_7.len
	sw   $t0, 52($t1)
	
	# Sea Stars
	la   $t1, stars
	li   $t0, 1 # = star_1.state = visible
	sw   $t0, 0($t1)
	add  $t0, $gp, 24408 # = star_1.pos
	sw   $t0, 4($t1)
	li   $t0, 1 # = star_2.state = visible
	sw   $t0, 8($t1)
	add  $t0, $gp, 21108 # = star_2.pos
	sw   $t0, 12($t1)
	li   $t0, 1 # = star_3.state = visible
	sw   $t0, 16($t1)
	add  $t0, $gp, 19872 # = star_3.pos
	sw   $t0, 20($t1)
	li   $t0, 1 # = star_4.state = visible
	sw   $t0, 24($t1)
	add  $t0, $gp, 7240 # = star_4.pos
	sw   $t0, 28($t1)
	li   $t0, 0 # = star_5.state = invisible
	sw   $t0, 32($t1)
	li   $t0, 0 # = star_6.state = invisible
	sw   $t0, 40($t1)
	li   $t0, 0 # = star_7.state = invisible
	sw   $t0, 48($t1)
	li   $t0, 0 # = star_8.state = invisible
	sw   $t0, 56($t1)
	
	# Return to caller
	jr   $ra
# ---------------------------------------------------------------------------------------


#  gen_next_level():
#	Sets up the structs according to the level specified in $s0
#	Assumes $s0 is positive (eg. we have branched out of main loop if reached end level)
gen_next_level:	
	# Calculate time bonus for level
	li   $t1, MAX_TIME
	sub  $t1, $t1, $s6	# $t1 = MAX_TIME - (time to complete level)
	blez $t1, gen_level_select # Skip if negative
	sra  $t1, $t1, 2	# $t1 = $t1/4
	add  $s3, $s3, $t1	# Add time bonus to score

	# if $s0 has reached -1, trigger Win screen
	# bltz $s0, win
	beq  $s0, 4, win # for testing

gen_level_select:
	# Branch to correct level setup:
	beq  $s0, 8, gen_level_1
	beq  $s0, 7, gen_level_2
	beq  $s0, 6, gen_level_3
	beq  $s0, 5, gen_level_4
	beq  $s0, 4, gen_level_5
	beq  $s0, 3, gen_level_6
	beq  $s0, 2, gen_level_7
	beq  $s0, 1, gen_level_8
	beq  $s0, 0, gen_level_9

gen_level_1: ##### LEVEL ONE #####
	li   $s5, SEA_COL_8	# Store current BG color
	
	# crab data
	lw   $t0, 0($s1)
	add  $t0, $t0, 28928	# Move crab down to bottom of display
	sw   $t0, 0($s1)
	
	# seahorse data
	la   $t1, seahorse
	li   $t0, 1 # = seahorse.state = visible
	sw   $t0, 0($t1) 
	addi $t0, $gp, 13360 # = seahorse.position
	sw   $t0, 4($t1)
	
	# Bubbles
	la   $t1, bubble1
	li   $t0, 1 # = bubble1.state
	sw   $t0, 0($t1)
	addi $t0, $gp, 27604 # = bubble1.pos
	sw   $t0, 4($t1)
	la   $t1, bubble2
	li   $t0, 1 # = bubble2.state
	sw   $t0, 0($t1)
	addi $t0, $gp, 27436 # = bubble2.pos
	sw   $t0, 4($t1)

	# Platforms
	la   $t1, platforms
	addi $t0, $gp, 31836 # = platform_1.pos <-- Bottom Platform
	sw   $t0, 0($t1)
	li   $t0, 5 # = platform_1.len
	sw   $t0, 4($t1)
	addi $t0, $gp, 20572 # = platform_2.pos
	sw   $t0, 8($t1)
	li   $t0, 5 # = platform_2.len
	sw   $t0, 12($t1)
	addi $t0, $gp, 13692 # = platform_3.pos
	sw   $t0, 16($t1)
	li   $t0, 8 # = platform_3.len
	sw   $t0, 20($t1)	
	addi $t0, $gp, 6912 # = platform_4.pos
	sw   $t0, 24($t1)	
	li   $t0, 7 # = platform_4.len
	sw   $t0, 28($t1)	
	addi $t0, $gp, 3740 # = platform_5.pos <-- Top Platform
	sw   $t0, 32($t1)	
	li   $t0, 4 # = platform_5.len
	sw   $t0, 36($t1)	
	li   $t0, 0 # = platform_6.len
	sw   $t0, 44($t1)	
	
	# Sea Stars
	la   $t1, stars
	li   $t0, 1 # = star_1.state = visible
	sw   $t0, 0($t1)
	addi $t0, $gp, 19756 # = star_1.pos
	sw   $t0, 4($t1)
	li   $t0, 1 # = star_2.state = visible
	sw   $t0, 8($t1)
	addi $t0, $gp, 19924 # = star_2.pos
	sw   $t0, 12($t1)
	li   $t0, 1 # = star_3.state = visible
	sw   $t0, 16($t1)
	addi $t0, $gp, 27776 # = star_3.pos
	sw   $t0, 20($t1)
	li   $t0, 1 # = star_4.state = visible
	sw   $t0, 24($t1)
	addi $t0, $gp, 11176 # = star_4.pos
	sw   $t0, 28($t1)
	li   $t0, 1 # = star_5.state = visible
	sw   $t0, 32($t1)
	addi $t0, $gp, 8344 # = star_5.pos
	sw   $t0, 36($t1)
	li   $t0, 1 # = star_6.state = visible
	sw   $t0, 40($t1)
	addi $t0, $gp, 6008 # = star_6.pos
	sw   $t0, 44($t1)

	jr   $ra
	
gen_level_2: ##### LEVEL TWO #####
	li   $s5, SEA_COL_7	# Store current BG color

	# crab data
	lw   $t0, 0($s1)
	add  $t0, $t0, 28160	# Move crab down to bottom of display
	sw   $t0, 0($s1)
	
	# seahorse data
	la   $t1, seahorse
	li   $t0, 0 # = seahorse.state = invisible
	sw   $t0, 0($t1) 
		
	# clam data
	la   $t1, clam
	li   $t0, 1 # = clam.state = open
	sw   $t0, 0($t1)
	addi $t0, $gp, 15152 # = clam.pos
	sw   $t0, 4($t1)
	
	# Bubbles
	la   $t1, bubble1
	li   $t0, 0 # = bubble1.state = invisible
	sw   $t0, 0($t1)
	la   $t1, bubble2
	li   $t0, 0 # = bubble2.state = invisible
	sw   $t0, 0($t1)
	
	# pufferfish data
	la   $t1, pufferfish
	li   $t0, 1 # = pufferfish.state = ascending
	sw   $t0, 0($t1)	
	addi $t0, $gp, 13448
	sw   $t0, 4($t1)

	# Platforms
	la   $t1, platforms
	addi $t0, $gp, 3676 # = platform_1.pos <- Top Platform
	sw   $t0, 0($t1)
	li   $t0, 10 # = platform_1.len
	sw   $t0, 4($t1)
	addi $t0, $gp, 10956 # = platform_2.pos
	sw   $t0, 8($t1)
	li   $t0, 3 # = platform_2.len
	sw   $t0, 12($t1)
	addi $t0, $gp, 15360 # = platform_3.pos
	sw   $t0, 16($t1)
	li   $t0, 7 # = platform_3.len
	sw   $t0, 20($t1)	
	addi $t0, $gp, 18108 # = platform_4.pos
	sw   $t0, 24($t1)	
	li   $t0, 4 # = platform_4.len
	sw   $t0, 28($t1)	
	addi $t0, $gp, 25020 # = platform_5.pos
	sw   $t0, 32($t1)	
	li   $t0, 3 # = platform_5.len
	sw   $t0, 36($t1)
	addi $t0, $gp, 31900 # = platform_6.pos
	sw   $t0, 40($t1)	
	li   $t0, 4 # = platform_6.len
	sw   $t0, 44($t1)
	

	# Sea Stars
	la   $t1, stars
	li   $t0, 1 # = star_1.state = visible
	sw   $t0, 0($t1)
	addi $t0, $gp, 24276 # = star_1.pos
	sw   $t0, 4($t1)
	li   $t0, 1 # = star_2.state = visible
	sw   $t0, 8($t1)
	addi $t0, $gp, 17380 # = star_2.pos
	sw   $t0, 12($t1)
	li   $t0, 1 # = star_3.state = visible
	sw   $t0, 16($t1)
	addi $t0, $gp, 10212 # = star_3.pos
	sw   $t0, 20($t1)
	li   $t0, 1 # = star_4.state = visible
	sw   $t0, 24($t1)
	addi $t0, $gp, 14348 # = star_4.pos
	sw   $t0, 28($t1)
	li   $t0, 1 # = star_5.state = visible
	sw   $t0, 32($t1)
	addi $t0, $gp, 14420 # = star_5.pos
	sw   $t0, 36($t1)
	li   $t0, 0 # = star_6.state = invisible
	sw   $t0, 40($t1)

	jr   $ra
	
gen_level_3: ##### LEVEL THREE #####
	li   $s5, SEA_COL_6	# Store current BG color

	# crab data
	lw   $t0, 0($s1)
	add  $t0, $t0, 28160	# Move crab down to bottom of display
	sw   $t0, 0($s1)
	
	# pufferfish data
	la   $t1, pufferfish
	li   $t0, 0 # = pufferfish.state = invisible
	sw   $t0, 0($t1)
	
	# clam data
	la   $t1, clam
	li   $t0, 0 # = clam.state = invisible
	sw   $t0, 0($t1)
	
	# Bubbles
	la   $t1, bubble1
	li   $t0, 1 # = bubble1.state = visible
	sw   $t0, 0($t1)
	addi $t0, $gp, 8756 # = bubble1.position
	sw   $t0, 4($t1)
	
	# piranha data
	la   $t1, piranha1
	li   $t0, 1 # = piranha1.state = left-facing
	sw   $t0, 0($t1)
	addi $t0, $gp, 18224 # = piranha1.position
	sw   $t0, 4($t1)
	la   $t1, piranha2
	li   $t0, 2 # = piranha2.state = right-facing
	sw   $t0, 0($t1)
	addi $t0, $gp, 24904 # = piranha2.position
	sw   $t0, 4($t1)
	
	# seahorse data
	la   $t1, seahorse
	li   $t0, 1 # = seahorse.state = visible
	sw   $t0, 0($t1) 
	addi $t0, $gp, 9416 # = seahorse.position
	sw   $t0, 4($t1)
	
	# Platforms
	la   $t1, platforms
	addi $t0, $gp, 31836 # = platform_1.pos <- Bottom Platform
	sw   $t0, 0($t1)
	li   $t0, 10 # = platform_1.len
	sw   $t0, 4($t1)
	addi $t0, $gp, 25600 # = platform_2.pos
	sw   $t0, 8($t1)
	li   $t0, 7 # = platform_2.len
	sw   $t0, 12($t1)
	addi $t0, $gp, 18944 # = platform_3.pos
	sw   $t0, 16($t1)
	li   $t0, 8 # = platform_3.len
	sw   $t0, 20($t1)	
	addi $t0, $gp, 12328 # = platform_4.pos
	sw   $t0, 24($t1)	
	li   $t0, 6 # = platform_4.len
	sw   $t0, 28($t1)	
	addi $t0, $gp, 3180 # = platform_5.pos <-- Top Platform
	sw   $t0, 32($t1)	
	li   $t0, 9 # = platform_5.len
	sw   $t0, 36($t1)	
	li   $t0, 0 # = platform_6.len
	sw   $t0, 44($t1)
	
	# Sea Stars
	la   $t1, stars
	li   $t0, 1 # = star_1.state = visible
	sw   $t0, 0($t1)
	addi $t0, $gp, 12232 # = star_1.position
	sw   $t0, 4($t1)
	li   $t0, 1 # = star_2.state = visible
	sw   $t0, 8($t1)
	addi $t0, $gp, 14792 # = star_2.position
	sw   $t0, 12($t1)
	li   $t0, 1 # = star_3.state = visible
	sw   $t0, 16($t1)
	addi $t0, $gp, 17352 # = star_3.position
	sw   $t0, 20($t1)
	li   $t0, 1 # = star_4.state = visible
	sw   $t0, 24($t1)
	addi $t0, $gp, 19912 # = star_4.position
	sw   $t0, 28($t1)
	li   $t0, 1 # = star_5.state = visible
	sw   $t0, 32($t1)
	addi $t0, $gp, 22472 # = star_5.position
	sw   $t0, 36($t1)
	li   $t0, 0 # = star_6.state = invisible
	sw   $t0, 40($t1)
	li   $t0, 0 # = star_7.state = invisible
	sw   $t0, 48($t1)
	li   $t0, 0 # = star_8.state = invisible
	sw   $t0, 56($t1)
	
	jr   $ra
	
gen_level_4: ##### LEVEL FOUR #####
	li   $s5, SEA_COL_5	# Store current BG color

	# crab data
	lw   $t0, 0($s1)
	add  $t0, $t0, 28672	# Move crab down to bottom of display
	sw   $t0, 0($s1)
	
	# Bubbles
	la   $t1, bubble1
	li   $t0, 1 # = bubble1.state = visible
	sw   $t0, 0($t1)
	addi $t0, $gp, 20028 # = bubble1.position
	sw   $t0, 4($t1)
	la   $t1, bubble2
	li   $t0, 1 # = bubble2.state = visible
	sw   $t0, 0($t1)
	addi $t0, $gp, 14292 # = bubble2.position
	sw   $t0, 4($t1)
	
	# piranha data
	la   $t1, piranha1
	li   $t0, 1 # = piranha1.state = left-facing
	sw   $t0, 0($t1)
	addi $t0, $gp, 17780 # = piranha1.position
	sw   $t0, 4($t1)
	la   $t1, piranha2
	li   $t0, 0 # = piranha2.state = invisible
	sw   $t0, 0($t1)
	
	# pufferfish data
	la   $t1, pufferfish
	li   $t0, 2 # = pufferfish.state = descending
	sw   $t0, 0($t1)
	addi $t0, $gp, 8084 # = pufferfish.position
	sw   $t0, 4($t1)
	
	# seahorse data
	la   $t1, seahorse
	li   $t0, 0 # = seahorse.state = invisible
	sw   $t0, 0($t1) 
	
	# clam data
	la   $t1, clam
	li   $t0, 1 # = clam.state = open
	sw   $t0, 0($t1)
	addi $t0, $gp, 6860 # = clam.pos
	sw   $t0, 4($t1)

	# Platforms
	la   $t1, platforms
	addi $t0, $gp, 31852 # = platform_1.pos <-- Bottom Platform
	sw   $t0, 0($t1)
	li   $t0, 9 # = platform_1.len
	sw   $t0, 4($t1)
	addi $t0, $gp, 24576 # = platform_2.pos
	sw   $t0, 8($t1)
	li   $t0, 10 # = platform_2.len
	sw   $t0, 12($t1)
	addi $t0, $gp, 18588 # = platform_3.pos
	sw   $t0, 16($t1)
	li   $t0, 4 # = platform_3.len
	sw   $t0, 20($t1)	
	addi $t0, $gp, 12800 # = platform_4.pos
	sw   $t0, 24($t1)	
	li   $t0, 6 # = platform_4.len
	sw   $t0, 28($t1)	
	addi $t0, $gp, 7084 # = platform_5.pos
	sw   $t0, 32($t1)	
	li   $t0, 5 # = platform_5.len
	sw   $t0, 36($t1)
	addi $t0, $gp, 7696 # = platform_6.pos
	sw   $t0, 40($t1)
	li   $t0, 2 # = platform_6.len
	sw   $t0, 44($t1)
	addi $t0, $gp, 2048 # = platform_7.pos <-- Top Platform
	sw   $t0, 48($t1)
	li   $t0, 4 # = platform_7.len
	sw   $t0, 52($t1)		

	# Sea Stars
	la   $t1, stars
	li   $t0, 1 # = star_1.state = visible
	sw   $t0, 0($t1)
	addi $t0, $gp, 6944 # = star_1.position
	sw   $t0, 4($t1)
	li   $t0, 1 # = star_2.state = visible
	sw   $t0, 8($t1)
	addi $t0, $gp, 17852 # = star_2.position
	sw   $t0, 12($t1)
	li   $t0, 1 # = star_3.state = visible
	sw   $t0, 16($t1)
	addi $t0, $gp, 30620 # = star_3.position
	sw   $t0, 20($t1)
	li   $t0, 1 # = star_4.state = visible
	sw   $t0, 24($t1)
	addi $t0, $gp, 30660 # = star_4.position
	sw   $t0, 28($t1)
	li   $t0, 1 # = star_5.state = visible
	sw   $t0, 32($t1)
	addi $t0, $gp, 30700 # = star_5.position
	sw   $t0, 36($t1)
	li   $t0, 0 # = star_6.state = invisible
	sw   $t0, 40($t1)
	li   $t0, 0 # = star_7.state = invisible
	sw   $t0, 48($t1)
	li   $t0, 0 # = star_8.state = invisible
	sw   $t0, 56($t1)
	
	jr   $ra
	
gen_level_5: ##### LEVEL FIVE #####

	# Sea Stars
	la   $t1, stars
	li   $t0, 0 # = star_1.state = invisible
	sw   $t0, 0($t1)
	li   $t0, 0 # = star_2.state = invisible
	sw   $t0, 8($t1)
	li   $t0, 0 # = star_3.state = invisible
	sw   $t0, 16($t1)
	li   $t0, 0 # = star_4.state = invisible
	sw   $t0, 24($t1)
	li   $t0, 0 # = star_5.state = invisible
	sw   $t0, 32($t1)
	li   $t0, 0 # = star_6.state = invisible
	sw   $t0, 40($t1)
	li   $t0, 0 # = star_7.state = invisible
	sw   $t0, 48($t1)
	li   $t0, 0 # = star_8.state = invisible
	sw   $t0, 56($t1)
	
	jr   $ra
	
gen_level_6: ##### LEVEL SIX #####

	# Sea Stars
	la   $t1, stars
	li   $t0, 0 # = star_1.state = invisible
	sw   $t0, 0($t1)
	li   $t0, 0 # = star_2.state = invisible
	sw   $t0, 8($t1)
	li   $t0, 0 # = star_3.state = invisible
	sw   $t0, 16($t1)
	li   $t0, 0 # = star_4.state = invisible
	sw   $t0, 24($t1)
	li   $t0, 0 # = star_5.state = invisible
	sw   $t0, 32($t1)
	li   $t0, 0 # = star_6.state = invisible
	sw   $t0, 40($t1)
	li   $t0, 0 # = star_7.state = invisible
	sw   $t0, 48($t1)
	li   $t0, 0 # = star_8.state = invisible
	sw   $t0, 56($t1)
	
	jr   $ra
	
gen_level_7: ##### LEVEL SEVEN #####

	# Sea Stars
	la   $t1, stars
	li   $t0, 0 # = star_1.state = invisible
	sw   $t0, 0($t1)
	li   $t0, 0 # = star_2.state = invisible
	sw   $t0, 8($t1)
	li   $t0, 0 # = star_3.state = invisible
	sw   $t0, 16($t1)
	li   $t0, 0 # = star_4.state = invisible
	sw   $t0, 24($t1)
	li   $t0, 0 # = star_5.state = invisible
	sw   $t0, 32($t1)
	li   $t0, 0 # = star_6.state = invisible
	sw   $t0, 40($t1)
	li   $t0, 0 # = star_7.state = invisible
	sw   $t0, 48($t1)
	li   $t0, 0 # = star_8.state = invisible
	sw   $t0, 56($t1)

	jr   $ra
	
gen_level_8: ##### LEVEL EIGHT #####

	# Sea Stars
	la   $t1, stars
	li   $t0, 0 # = star_1.state = invisible
	sw   $t0, 0($t1)
	li   $t0, 0 # = star_2.state = invisible
	sw   $t0, 8($t1)
	li   $t0, 0 # = star_3.state = invisible
	sw   $t0, 16($t1)
	li   $t0, 0 # = star_4.state = invisible
	sw   $t0, 24($t1)
	li   $t0, 0 # = star_5.state = invisible
	sw   $t0, 32($t1)
	li   $t0, 0 # = star_6.state = invisible
	sw   $t0, 40($t1)
	li   $t0, 0 # = star_7.state = invisible
	sw   $t0, 48($t1)
	li   $t0, 0 # = star_8.state = invisible
	sw   $t0, 56($t1)
	
	jr   $ra
	
gen_level_9: ##### LEVEL NINE #####

	# Sea Stars
	la   $t1, stars
	li   $t0, 0 # = star_1.state = invisible
	sw   $t0, 0($t1)
	li   $t0, 0 # = star_2.state = invisible
	sw   $t0, 8($t1)
	li   $t0, 0 # = star_3.state = invisible
	sw   $t0, 16($t1)
	li   $t0, 0 # = star_4.state = invisible
	sw   $t0, 24($t1)
	li   $t0, 0 # = star_5.state = invisible
	sw   $t0, 32($t1)
	li   $t0, 0 # = star_6.state = invisible
	sw   $t0, 40($t1)
	li   $t0, 0 # = star_7.state = invisible
	sw   $t0, 48($t1)
	li   $t0, 0 # = star_8.state = invisible
	sw   $t0, 56($t1)
	
	jr   $ra
# ---------------------------------------------------------------------------------------


#########################################################################
#	UN-PAINTING FUNCTIONS						#
#########################################################################


# unstamp_crab():
# 	Removes the crab from the display at the position in $s2
#	$t0: crab_position, $t1: bg_color
unstamp_crab:
	move $t0, $s2		# Put last crab.pos into $t0
	move $t1, $s5		# Put bg colour into $t1
	
	# Color the pixels appropriately
	sw   $t1, -16($t0)
	sw   $t1, -12($t0)
	sw   $t1, 12($t0)
	sw   $t1, 16($t0)
	addi $t0, $t0, -WIDTH
	sw   $t1, -12($t0)
	sw   $t1, -8($t0)
	sw   $t1, -4($t0)
	sw   $t1, -0($t0)
	sw   $t1, 4($t0)
	sw   $t1, 8($t0)
	sw   $t1, 12($t0)
	addi $t0, $t0, -WIDTH
	sw   $t1, -28($t0)
	sw   $t1, -24($t0)
	sw   $t1, -20($t0)
	sw   $t1, -16($t0)
	sw   $t1, -12($t0)
	sw   $t1, -8($t0)
	sw   $t1, -4($t0)
	sw   $t1, 0($t0)
	sw   $t1, 4($t0)
	sw   $t1, 8($t0)
	sw   $t1, 12($t0)
	sw   $t1, 16($t0)
	sw   $t1, 20($t0)
	addi $t0, $t0, -WIDTH
	sw   $t1, -32($t0)
	sw   $t1, -28($t0)
	sw   $t1, -24($t0)
	sw   $t1, -20($t0)
	sw   $t1, -12($t0)
	sw   $t1, -8($t0)
	sw   $t1, -4($t0)
	sw   $t1, 0($t0)
	sw   $t1, 4($t0)
	sw   $t1, 8($t0)
	sw   $t1, 12($t0)
	sw   $t1, 20($t0)
	sw   $t1, 24($t0)
	addi $t0, $t0, -WIDTH
	sw   $t1, -32($t0)
	sw   $t1, -28($t0)
	sw   $t1, -24($t0)
	sw   $t1, -20($t0)
	sw   $t1, -12($t0)
	sw   $t1, -8($t0)
	sw   $t1, -4($t0)
	sw   $t1, 0($t0)
	sw   $t1, 4($t0)
	sw   $t1, 8($t0)
	sw   $t1, 12($t0)
	sw   $t1, 20($t0)
	sw   $t1, 24($t0)
	sw   $t1, 28($t0)
	addi $t0, $t0, -WIDTH
	sw   $t1, -32($t0)
	sw   $t1, -28($t0)
	sw   $t1, -24($t0)
	sw   $t1, -20($t0)
	sw   $t1, -8($t0)
	sw   $t1, 8($t0)
	sw   $t1, 16($t0)
	sw   $t1, 20($t0)
	sw   $t1, 24($t0)
	sw   $t1, 28($t0)
	addi $t0, $t0, -WIDTH
	sw   $t1, -32($t0)
	sw   $t1, -28($t0)
	sw   $t1, -20($t0)
	sw   $t1, -16($t0)
	sw   $t1, 16($t0)
	sw   $t1, 20($t0)
	sw   $t1, 24($t0)
	sw   $t1, 28($t0)
	addi $t0, $t0, -WIDTH
	sw   $t1, -32($t0)
	sw   $t1, -28($t0)
	sw   $t1, -24($t0)
	sw   $t1, 20($t0)
	sw   $t1, 24($t0)
	addi $t0, $t0, -WIDTH
	sw   $t1, -32($t0)
	sw   $t1, -28($t0)
	sw   $t1, -24($t0)
	sw   $t1, -20($t0)
	addi $t0, $t0, -WIDTH
	sw   $t1, -28($t0)
	sw   $t1, -24($t0)
	sw   $t1, -20($t0)

	# Return to caller			
	jr $ra
# ---------------------------------------------------------------------------------------


# unstamp_clam()
# 	Removes the clam from the display at the position in $s2
#	$t0: clam_position, $t1: bg_color
unstamp_clam:
	move $t0, $a0		# Put clam pos into $t0
	move $t1, $s5		# Put bg colour into $t1

	# Color pixels appropriately
	sw $t1, -16($t0)
	sw $t1, -12($t0)
	sw $t1, -8($t0)
	sw $t1, -4($t0)
	sw $t1, 0($t0)
	sw $t1, 4($t0)
	sw $t1, 8($t0)
	sw $t1, 12($t0)
	sw $t1, 16($t0)
	addi $t0, $t0, -WIDTH
	sw $t1, -20($t0)
	sw $t1, -16($t0)
	sw $t1, -12($t0)
	sw $t1, -8($t0)
	sw $t1, -4($t0)
	sw $t1, 0($t0)
	sw $t1, 4($t0)
	sw $t1, 8($t0)
	sw $t1, 12($t0)
	sw $t1, 16($t0)
	sw $t1, 20($t0)
	addi $t0, $t0, -WIDTH
	sw $t1, -20($t0)
	sw $t1, -16($t0)
	sw $t1, -12($t0)
	sw $t1, -8($t0)
	sw $t1, -4($t0)
	sw $t1, 0($t0)
	sw $t1, 4($t0)
	sw $t1, 8($t0)
	sw $t1, 12($t0)
	sw $t1, 16($t0)
	sw $t1, 20($t0)
	addi $t0, $t0, -WIDTH
	sw $t1, -20($t0)
	sw $t1, -16($t0)
	sw $t1, -12($t0)
	sw $t1, -8($t0)
	sw $t1, -4($t0)
	sw $t1, 0($t0)
	sw $t1, 4($t0)
	sw $t1, 8($t0)
	sw $t1, 12($t0)
	sw $t1, 16($t0)
	sw $t1, 20($t0)
	addi $t0, $t0, -WIDTH
	sw $t1, -20($t0)
	sw $t1, -16($t0)
	sw $t1, -12($t0)
	sw $t1, -8($t0)
	sw $t1, -4($t0)
	sw $t1, 0($t0)
	sw $t1, 4($t0)
	sw $t1, 8($t0)
	sw $t1, 12($t0)
	sw $t1, 16($t0)
	sw $t1, 20($t0)
	addi $t0, $t0, -WIDTH
	sw $t1, -16($t0)
	sw $t1, -12($t0)
	sw $t1, -8($t0)
	sw $t1, -4($t0)
	sw $t1, 0($t0)
	sw $t1, 4($t0)
	sw $t1, 8($t0)
	sw $t1, 12($t0)
	sw $t1, 16($t0)
	addi $t0, $t0, -WIDTH
	sw $t1, -16($t0)
	sw $t1, -12($t0)
	sw $t1, -8($t0)
	sw $t1, -4($t0)
	sw $t1, 0($t0)
	sw $t1, 4($t0)
	sw $t1, 8($t0)
	sw $t1, 12($t0)
	sw $t1, 16($t0)
	addi $t0, $t0, -WIDTH
	sw $t1, -20($t0)
	sw $t1, -16($t0)
	sw $t1, -12($t0)
	sw $t1, -8($t0)
	sw $t1, -4($t0)
	sw $t1, 0($t0)
	sw $t1, 4($t0)
	sw $t1, 8($t0)
	sw $t1, 12($t0)
	sw $t1, 16($t0)
	sw $t1, 20($t0)
	addi $t0, $t0, -WIDTH
	sw $t1, -20($t0)
	sw $t1, -16($t0)
	sw $t1, -12($t0)
	sw $t1, -8($t0)
	sw $t1, -4($t0)
	sw $t1, 0($t0)
	sw $t1, 4($t0)
	sw $t1, 8($t0)
	sw $t1, 12($t0)
	sw $t1, 16($t0)
	sw $t1, 20($t0)
	addi $t0, $t0, -WIDTH
	sw $t1, -20($t0)
	sw $t1, -16($t0)
	sw $t1, -12($t0)
	sw $t1, -8($t0)
	sw $t1, -4($t0)
	sw $t1, 0($t0)
	sw $t1, 4($t0)
	sw $t1, 8($t0)
	sw $t1, 12($t0)
	sw $t1, 16($t0)
	sw $t1, 20($t0)
	addi $t0, $t0, -WIDTH
	sw $t1, -16($t0)
	sw $t1, -12($t0)
	sw $t1, -4($t0)
	sw $t1, 0($t0)
	sw $t1, 4($t0)
	sw $t1, 12($t0)
	sw $t1, 16($t0)
	
	# Return to caller
	jr   $ra
# ---------------------------------------------------------------------------------------


# unstamp_piranha($a0 = *position)
# 	Removes piranha from the display at $a0
#	$t0: piranha_position, $t1: bg_color
unstamp_piranha:
	move $t0, $a0		# Put piranha pos into $t0
	move $t1, $s5		# Put bg colour into $t1
	
	# Color the pixels appropriately
	sw $t1, -12($t0)
	sw $t1, -8($t0)
	sw $t1, -4($t0)
	sw $t1, 4($t0)	
	sw $t1, 8($t0)
	sw $t1, 12($t0)
	addi $t0, $t0, -WIDTH
	sw $t1, -28($t0)
	sw $t1, -20($t0)
	sw $t1, -16($t0)
	sw $t1, -12($t0)
	sw $t1, -8($t0)
	sw $t1, -4($t0)
	sw $t1, 0($t0)
	sw $t1, 4($t0)
	sw $t1, 8($t0)
	sw $t1, 12($t0)
	sw $t1, 16($t0)
	sw $t1, 20($t0)
	sw $t1, 28($t0)
	addi $t0, $t0, -WIDTH
	sw $t1, -28($t0)
	sw $t1, -24($t0)
	sw $t1, -20($t0)
	sw $t1, -16($t0)
	sw $t1, -12($t0)
	sw $t1, -8($t0)
	sw $t1, -4($t0)
	sw $t1, 0($t0)
	sw $t1, 4($t0)
	sw $t1, 8($t0)
	sw $t1, 12($t0)
	sw $t1, 16($t0)
	sw $t1, 20($t0)
	sw $t1, 24($t0)
	sw $t1, 28($t0)
	addi $t0, $t0, -WIDTH
	sw $t1, -28($t0)
	sw $t1, -24($t0)
	sw $t1, -20($t0)
	sw $t1, -16($t0)
	sw $t1, -12($t0)
	sw $t1, -8($t0)
	sw $t1, -4($t0)
	sw $t1, 0($t0)
	sw $t1, 4($t0)
	sw $t1, 8($t0)
	sw $t1, 12($t0)
	sw $t1, 16($t0)
	sw $t1, 20($t0)
	sw $t1, 24($t0)
	sw $t1, 28($t0)
	addi $t0, $t0, -WIDTH
	sw $t1, -24($t0)
	sw $t1, -20($t0)
	sw $t1, -16($t0)
	sw $t1, -12($t0)
	sw $t1, -8($t0)
	sw $t1, -4($t0)
	sw $t1, 0($t0)
	sw $t1, 4($t0)
	sw $t1, 8($t0)
	sw $t1, 12($t0)
	sw $t1, 16($t0)
	sw $t1, 20($t0)
	sw $t1, 24($t0)
	addi $t0, $t0, -WIDTH
	sw $t1, -28($t0)
	sw $t1, -24($t0)
	sw $t1, -20($t0)
	sw $t1, -16($t0)
	sw $t1, -12($t0)
	sw $t1, -8($t0)
	sw $t1, -4($t0)
	sw $t1, 0($t0)
	sw $t1, 4($t0)
	sw $t1, 8($t0)
	sw $t1, 12($t0)
	sw $t1, 16($t0)
	sw $t1, 20($t0)
	sw $t1, 24($t0)
	sw $t1, 28($t0)
	addi $t0, $t0, -WIDTH
	sw $t1, -28($t0)
	sw $t1, -24($t0)
	sw $t1, -20($t0)
	sw $t1, -16($t0)
	sw $t1, -12($t0)
	sw $t1, -8($t0)
	sw $t1, -4($t0)
	sw $t1, 0($t0)
	sw $t1, 4($t0)
	sw $t1, 8($t0)
	sw $t1, 12($t0)
	sw $t1, 16($t0)
	sw $t1, 20($t0)
	sw $t1, 24($t0)
	sw $t1, 28($t0)
	addi $t0, $t0, -WIDTH
	sw $t1, -28($t0)
	sw $t1, -20($t0)
	sw $t1, -16($t0)
	sw $t1, -12($t0)
	sw $t1, -8($t0)
	sw $t1, -4($t0)
	sw $t1, 0($t0)
	sw $t1, 4($t0)
	sw $t1, 8($t0)
	sw $t1, 12($t0)
	sw $t1, 16($t0)
	sw $t1, 20($t0)
	sw $t1, 28($t0)
	addi $t0, $t0, -WIDTH
	sw $t1, -16($t0)
	sw $t1, -12($t0)
	sw $t1, -8($t0)
	sw $t1, -4($t0)
	sw $t1, 0($t0)
	sw $t1, 4($t0)
	sw $t1, 8($t0)
	sw $t1, 12($t0)
	sw $t1, 16($t0)
	addi $t0, $t0, -WIDTH
	sw $t1, -16($t0)
	sw $t1, -12($t0)
	sw $t1, -8($t0)
	sw $t1, -4($t0)
	sw $t1, 0($t0)
	sw $t1, 4($t0)
	sw $t1, 8($t0)
	sw $t1, 12($t0)
	sw $t1, 16($t0)
				
	# Return to caller
	jr   $ra
# ---------------------------------------------------------------------------------------


# unstamp_seahorse($a0=*position)
# 	Removes seahorse from the display at $a0
#	$t0: seahorse_position, $t1: bg_color
unstamp_seahorse:
	move $t0, $a0		# Put seahorse pos into $t0
	move $t1, $s5		# Put bg colour into $t1
	
	addi $t0, $t0, WIDTH
	sw $t1, -4($t0)
	sw $t1, 0($t0)
	sw $t1, 4($t0)
	sw $t1, 8($t0)
	addi $t0, $t0, -WIDTH
	sw $t1, -8($t0)
	sw $t1, -4($t0)
	sw $t1, 0($t0)
	sw $t1, 4($t0)
	sw $t1, 8($t0)
	sw $t1, 12($t0)
	addi $t0, $t0, -WIDTH
	sw $t1, -8($t0)
	sw $t1, -4($t0)
	sw $t1, 0($t0)
	sw $t1, 4($t0)
	sw $t1, 8($t0)
	sw $t1, 12($t0)
	addi $t0, $t0, -WIDTH
	sw $t1, -12($t0)
	sw $t1, -8($t0)
	sw $t1, -4($t0)
	sw $t1, 0($t0)
	sw $t1, 4($t0)
	sw $t1, 8($t0)
	sw $t1, 12($t0)
	addi $t0, $t0, -WIDTH
	sw $t1, -12($t0)
	sw $t1, -8($t0)
	sw $t1, -4($t0)
	sw $t1, 0($t0)
	sw $t1, 4($t0)
	sw $t1, 8($t0)
	addi $t0, $t0, -WIDTH
	sw $t1, -12($t0)
	sw $t1, -8($t0)
	sw $t1, -4($t0)
	sw $t1, 0($t0)
	sw $t1, 4($t0)
	sw $t1, 8($t0)
	sw $t1, 12($t0)
	sw $t1, 16($t0)
	addi $t0, $t0, -WIDTH
	sw $t1, -12($t0)
	sw $t1, -8($t0)
	sw $t1, -4($t0)
	sw $t1, 0($t0)
	sw $t1, 4($t0)
	sw $t1, 8($t0)
	sw $t1, 12($t0)
	sw $t1, 16($t0)
	addi $t0, $t0, -WIDTH
	sw $t1, -12($t0)
	sw $t1, -8($t0)
	sw $t1, -4($t0)
	sw $t1, 0($t0)
	sw $t1, 4($t0)
	sw $t1, 8($t0)
	sw $t1, 12($t0)
	sw $t1, 16($t0)
	addi $t0, $t0, -WIDTH
	sw $t1, -8($t0)
	sw $t1, -4($t0)
	sw $t1, 0($t0)
	sw $t1, 4($t0)
	sw $t1, 8($t0)
	addi $t0, $t0, -WIDTH
	sw $t1, -4($t0)
	sw $t1, 0($t0)
	sw $t1, 4($t0)
	
	# Return to caller
	jr   $ra
# ---------------------------------------------------------------------------------------


# unstamp_bubble($a0=*position)
# 	Removes bubble from the display at $a0
#	$t0: bubble_position, $t1: bg_color
unstamp_bubble:
	move $t0, $a0		# Put bubble pos into $t0
	move $t1, $s5		# Put bg colour into $t1
	
	addi $t0, $t0, WIDTH
	addi $t0, $t0, WIDTH
	sw   $t1, 0($t0)
	addi $t0, $t0, -WIDTH
	sw   $t1, -8($t0)
	addi $t0, $t0, -WIDTH
	sw   $t1, -20($t0)
	sw   $t1, -8($t0)
	sw   $t1, -4($t0)
	sw   $t1, 0($t0)
	sw   $t1, 4($t0)
	sw   $t1, 8($t0)
	sw   $t1, 16($t0) 
	addi $t0, $t0, -WIDTH
	sw   $t1, -16($t0)
	sw   $t1, -12($t0)
	sw   $t1, -8($t0)
	sw   $t1, -4($t0)
	sw   $t1, 0($t0)
	sw   $t1, 4($t0)
	sw   $t1, 8($t0)
	sw   $t1, 12($t0)
	sw   $t1, 16($t0)
	addi $t0, $t0, -WIDTH
	sw   $t1, -24($t0)
	sw   $t1, -20($t0)
	sw   $t1, -16($t0)
	sw   $t1, -12($t0)
	sw   $t1, -8($t0)
	sw   $t1, -4($t0)
	sw   $t1, 0($t0)
	sw   $t1, 4($t0)
	sw   $t1, 8($t0)
	sw   $t1, 12($t0)
	sw   $t1, 16($t0)
	sw   $t1, 20($t0)
	sw   $t1, 28($t0)
	addi $t0, $t0, -WIDTH
	sw   $t1, -24($t0)
	sw   $t1, -20($t0)
	sw   $t1, -16($t0)
	sw   $t1, -12($t0)
	sw   $t1, -8($t0)
	sw   $t1, -4($t0)
	sw   $t1, 0($t0)
	sw   $t1, 4($t0)
	sw   $t1, 8($t0)
	sw   $t1, 12($t0)
	sw   $t1, 16($t0)
	sw   $t1, 20($t0)
	sw   $t1, 24($t0)
	addi $t0, $t0, -WIDTH
	sw   $t1, -28($t0)
	sw   $t1, -24($t0)
	sw   $t1, -20($t0)
	sw   $t1, -16($t0)
	sw   $t1, -12($t0)
	sw   $t1, -8($t0)
	sw   $t1, -4($t0)
	sw   $t1, 0($t0)
	sw   $t1, 4($t0)
	sw   $t1, 8($t0)
	sw   $t1, 12($t0)
	sw   $t1, 16($t0)
	sw   $t1, 20($t0)
	sw   $t1, 24($t0)
	sw   $t1, 28($t0)
	addi $t0, $t0, -WIDTH
	sw   $t1, -36($t0)
	sw   $t1, -32($t0)
	sw   $t1, -28($t0)
	sw   $t1, -24($t0)
	sw   $t1, -20($t0)
	sw   $t1, -16($t0)
	sw   $t1, -12($t0)
	sw   $t1, -8($t0)
	sw   $t1, -4($t0)
	sw   $t1, 0($t0)
	sw   $t1, 4($t0)
	sw   $t1, 8($t0)
	sw   $t1, 12($t0)
	sw   $t1, 16($t0)
	sw   $t1, 20($t0)
	sw   $t1, 24($t0)
	sw   $t1, 28($t0)
	sw   $t1, 32($t0)
	sw   $t1, 36($t0)
	addi $t0, $t0, -WIDTH
	sw   $t1, -32($t0)
	sw   $t1, -28($t0)
	sw   $t1, -24($t0)
	sw   $t1, -20($t0)
	sw   $t1, -16($t0)
	sw   $t1, -12($t0)
	sw   $t1, -8($t0)
	sw   $t1, -4($t0)
	sw   $t1, 0($t0)
	sw   $t1, 4($t0)
	sw   $t1, 8($t0)
	sw   $t1, 12($t0)
	sw   $t1, 16($t0)
	sw   $t1, 20($t0)
	sw   $t1, 24($t0)
	sw   $t1, 28($t0)
	sw   $t1, 32($t0)
	addi $t0, $t0, -WIDTH
	sw   $t1, -32($t0)
	sw   $t1, -28($t0)
	sw   $t1, -24($t0)
	sw   $t1, -20($t0)
	sw   $t1, -16($t0)
	sw   $t1, -12($t0)
	sw   $t1, -8($t0)
	sw   $t1, -4($t0)
	sw   $t1, 0($t0)
	sw   $t1, 4($t0)
	sw   $t1, 8($t0)
	sw   $t1, 12($t0)
	sw   $t1, 16($t0)
	sw   $t1, 20($t0)
	sw   $t1, 24($t0)
	sw   $t1, 28($t0)
	sw   $t1, 32($t0)
	addi $t0, $t0, -WIDTH
	sw   $t1, -32($t0)
	sw   $t1, -28($t0)
	sw   $t1, -24($t0)
	sw   $t1, -20($t0)
	sw   $t1, -16($t0)
	sw   $t1, -12($t0)
	sw   $t1, -8($t0)
	sw   $t1, -4($t0)
	sw   $t1, 0($t0)
	sw   $t1, 4($t0)
	sw   $t1, 8($t0)
	sw   $t1, 12($t0)
	sw   $t1, 16($t0)
	sw   $t1, 20($t0)
	sw   $t1, 24($t0)
	sw   $t1, 28($t0)
	sw   $t1, 32($t0)
	sw   $t1, 40($t0)
	addi $t0, $t0, -WIDTH
	sw   $t1, -32($t0)
	sw   $t1, -28($t0)
	sw   $t1, -24($t0)
	sw   $t1, -20($t0)
	sw   $t1, -16($t0)
	sw   $t1, -12($t0)
	sw   $t1, -8($t0)
	sw   $t1, -4($t0)
	sw   $t1, 0($t0)
	sw   $t1, 4($t0)
	sw   $t1, 8($t0)
	sw   $t1, 12($t0)
	sw   $t1, 16($t0)
	sw   $t1, 20($t0)
	sw   $t1, 24($t0)
	sw   $t1, 28($t0)
	sw   $t1, 32($t0)
	addi $t0, $t0, -WIDTH
	sw   $t1, -36($t0)
	sw   $t1, -32($t0)
	sw   $t1, -28($t0)
	sw   $t1, -24($t0)
	sw   $t1, -20($t0)
	sw   $t1, -16($t0)
	sw   $t1, -12($t0)
	sw   $t1, -8($t0)
	sw   $t1, -4($t0)
	sw   $t1, 0($t0)
	sw   $t1, 4($t0)
	sw   $t1, 8($t0)
	sw   $t1, 12($t0)
	sw   $t1, 16($t0)
	sw   $t1, 20($t0)
	sw   $t1, 24($t0)
	sw   $t1, 28($t0)
	sw   $t1, 32($t0)
	addi $t0, $t0, -WIDTH
	sw   $t1, -28($t0)
	sw   $t1, -24($t0)
	sw   $t1, -20($t0)
	sw   $t1, -16($t0)
	sw   $t1, -12($t0)
	sw   $t1, -8($t0)
	sw   $t1, -4($t0)
	sw   $t1, 0($t0)
	sw   $t1, 4($t0)
	sw   $t1, 8($t0)
	sw   $t1, 12($t0)
	sw   $t1, 16($t0)
	sw   $t1, 20($t0)
	sw   $t1, 24($t0)
	sw   $t1, 28($t0)
	sw   $t1, 32($t0)
	addi $t0, $t0, -WIDTH
	sw   $t1, -28($t0)
	sw   $t1, -24($t0)
	sw   $t1, -20($t0)
	sw   $t1, -16($t0)
	sw   $t1, -12($t0)
	sw   $t1, -8($t0)
	sw   $t1, -4($t0)
	sw   $t1, 0($t0)
	sw   $t1, 4($t0)
	sw   $t1, 8($t0)
	sw   $t1, 12($t0)
	sw   $t1, 16($t0)
	sw   $t1, 20($t0)
	sw   $t1, 24($t0)
	sw   $t1, 28($t0)
	addi $t0, $t0, -WIDTH
	sw   $t1, -24($t0)
	sw   $t1, -20($t0)
	sw   $t1, -16($t0)
	sw   $t1, -12($t0)
	sw   $t1, -8($t0)
	sw   $t1, -4($t0)
	sw   $t1, 0($t0)
	sw   $t1, 4($t0)
	sw   $t1, 8($t0)
	sw   $t1, 12($t0)
	sw   $t1, 16($t0)
	sw   $t1, 20($t0)
	sw   $t1, 24($t0)
	addi $t0, $t0, -WIDTH
	sw   $t1, -28($t0)
	sw   $t1, -20($t0)
	sw   $t1, -16($t0)
	sw   $t1, -12($t0)
	sw   $t1, -8($t0)
	sw   $t1, -4($t0)
	sw   $t1, 0($t0)
	sw   $t1, 4($t0)
	sw   $t1, 8($t0)
	sw   $t1, 12($t0)
	sw   $t1, 16($t0)
	sw   $t1, 20($t0)
	addi $t0, $t0, -WIDTH
	sw   $t1, -16($t0)
	sw   $t1, -12($t0)
	sw   $t1, -8($t0)
	sw   $t1, -4($t0)
	sw   $t1, 0($t0)
	sw   $t1, 4($t0)
	sw   $t1, 8($t0)
	sw   $t1, 12($t0)
	sw   $t1, 16($t0)
	sw   $t1, 28($t0)
	addi $t0, $t0, -WIDTH
	sw   $t1, -12($t0)
	sw   $t1, -8($t0)
	sw   $t1, -4($t0)
	sw   $t1, 0($t0)
	sw   $t1, 4($t0)
	sw   $t1, 8($t0)
	addi $t0, $t0, -WIDTH
	sw   $t1, 8($t0)
	
	# Return to caller
	jr   $ra
# ---------------------------------------------------------------------------------------


# unstamp_star($a0=*position)
# 	Removes star from the display at $a0
#	$t0: star_position, $t1: bg_color
unstamp_star:
	move $t0, $a0		# Put sea star pos into $t0
	move $t1, $s5		# Put bg colour into $t1

	# Remove a sea star from the display
	addi $t0, $t0, WIDTH
	sw   $t1, -8($t0)
	sw   $t1, -4($t0)
	sw   $t1, 0($t0)
	sw   $t1, 4($t0)
	sw   $t1, 8($t0)
	addi $t0, $t0, -WIDTH
	sw   $t1, -8($t0)
	sw   $t1, -4($t0)
	sw   $t1, 0($t0)
	sw   $t1, 4($t0)
	sw   $t1, 8($t0)
	addi $t0, $t0, -WIDTH
	sw   $t1, -12($t0)
	sw   $t1, -8($t0)
	sw   $t1, -4($t0)
	sw   $t1, 0($t0)
	sw   $t1, 4($t0)
	sw   $t1, 8($t0)
	sw   $t1, 12($t0)
	addi $t0, $t0, -WIDTH
	sw   $t1, -12($t0)
	sw   $t1, -8($t0)
	sw   $t1, -4($t0)
	sw   $t1, 0($t0)
	sw   $t1, 4($t0)
	sw   $t1, 8($t0)
	sw   $t1, 12($t0)
	addi $t0, $t0, -WIDTH
	sw   $t1, -12($t0)
	sw   $t1, -8($t0)
	sw   $t1, -4($t0)
	sw   $t1, 0($t0)
	sw   $t1, 4($t0)
	sw   $t1, 8($t0)
	sw   $t1, 12($t0)
	addi $t0, $t0, -WIDTH
	sw   $t1, -4($t0)
	sw   $t1, 0($t0)
	sw   $t1, 4($t0)
	
	jr   $ra
# ---------------------------------------------------------------------------------------


#########################################################################
#	PAINTING FUNCTIONS						#
#########################################################################

# generate_background():
#	Fills the display with a background colour
# 	$t0: index, $t1: max_index, $t2: pixel_address
generate_background:		
	# Set up indices of iteration
	li   $t0, 0		# $t0 = i
	li   $t1, 32768		# $t1 = 32768 (128*64*4)

bg_loop:
	beq  $t0, $t1, bg_end	# branch to `bg_end` if i == 32768
	
	# Colour the ith pixel
	add  $t2, $gp, $t0	# $t2 = addr($gp) + i
	sw   $s5, ($t2)		# Set pixel at addr($gp) + i to bg color
	
	# Update i and loop again
	addi $t0, $t0, 4	# i = i + 4
	j    bg_loop		# jump back to start

bg_end:	jr   $ra
# ---------------------------------------------------------------------------------------


# _build_platform(*start, int length):
#	Builds a horizontal platform starting at `*start`, with `length` units of length
#	$t0: pixel_address, $t1-$t2: colours, $t3: length, $t7: temp
_build_platform:
	# Pop parameters from stack
	lw   $t3, 0($sp)	# $t3 = length
	lw   $t0, 4($sp)	# $t0 = address of pixel
	addi $sp, $sp, 8	# reclaim space on stack

	# Prepare colours
	li  $t1, 0x00ff429d	# $t1 = pink
	li  $t2, 0x00ffe785	# $t2 = yellow
	
	# Determine darkening factor
	li   $t7, DARKNESS
	mul  $t7, $t7, $s0	# $t7 = $t7 * level
	
	# Darken colors based on darkening factor
	sub  $t1, $t1, $t7
	sub  $t2, $t2, $t7
	
_bp_loop:
	beq  $t3, 0, _bp_exit	# if length == 0, branch to `bp_exit`
	move $t7, $t0		# $t7 = pixel address (will be overwritten)
	
	# Draw one "unit" of platform
	sw   $t1, 4($t7)
	sw   $t1, 8($t7)
	sw   $t1, 12($t7)
	addi $t7, $t7, WIDTH
	sw   $t1, 0($t7)
	sw   $t1, 4($t7)
	sw   $t2, 8($t7)
	sw   $t1, 12($t7)
	sw   $t1, 16($t7)
	addi $t7, $t7, WIDTH
	sw   $t1, 0($t7)
	sw   $t2, 4($t7)
	sw   $t1, 8($t7)
	sw   $t2, 12($t7)
	sw   $t1, 16($t7)
	addi $t7, $t7, WIDTH
	sw   $t1, 0($t7)
	sw   $t1, 4($t7)
	sw   $t2, 8($t7)
	sw   $t1, 12($t7)
	sw   $t1, 16($t7)
	addi $t7, $t7, WIDTH
	sw   $t1, 4($t7)
	sw   $t1, 8($t7)
	sw   $t1, 12($t7)

	# Update before looping
	addi $t0, $t0, 16	# $t0 = pixel address + 16
	addi $t3, $t3, -1	# $t3 = length - 1
	j    _bp_loop

_bp_exit: # Return to caller
	jr   $ra
# ---------------------------------------------------------------------------------------


# stamp_platforms():
#	Builds the platforms of the level, based on what is in `platforms` array
#	$t4: platform struct, $t5: plat location, $t6: length, $t7: temp, $t8: index
stamp_platforms:
	li   $t8, 0		# i = 0
	la   $t4, platforms	# $t4 = addr(platforms)
	
splat_loop: # while i <= NUM_PLATFORMS :
	beq  $t8, NUM_PLATFORMS, splat_exit	# if i==NUM_PLATFORMS, branch to `splat_exit`
	
	# Get values for this platform
	sll  $t7, $t8, 3	# $t7 = 8 * i
	add  $t7, $t4, $t7	# $t7 = addr(platforms) + 8*i
	lw   $t5, 0($t7)	# $t5 = platform.position
	lw   $t6, 4($t7)	# $t6 = platform.length
	
	# Push parameters for _build_platform() to stack
	addi $sp, $sp, -12	# Make room on stack
	sw $ra, 8($sp)		# Push return address
	sw $t5, 4($sp)		# Push position
	sw $t6, 0($sp)		# Push length
	
	# Build this platform
	jal _build_platform
	
	# Pop old return address from stack
	lw $ra, 0($sp)	
	addi $sp, $sp, 4
	
	# Update index
	addi $t8, $t8, 1	# i = i + 1
	j splat_loop		# Restart loop

splat_exit:
	jr   $ra
# ---------------------------------------------------------------------------------------


# stamp_crab():
# 	"Stamps" the crab onto the display at crab.position
#	$t0: pixel_address, $t1-$t4: colours, $t6: temp
stamp_crab:
	li $t1, 0x00e35e32	# $t1 = crab base
	li $t2, 0x00b0351c	# $t2 = crab shell
	li $t3, 0x00ffffff	# $t3 = white
	li $t4, 0x00000000	# $t4 = black
	
	# Determine darkening factor
	li $t6, DARKNESS	# 
	mul $t6, $t6, $s0	# $t6 = $t6 * level
	
	# Darken colors based on darkening factor
	sub $t1, $t1, $t6
	sub $t2, $t2, $t6
	sub $t3, $t3, $t6

	# Get pixel address and crab state
	lw $t0, 0($s1)		# $t0 = crab.position
	lw $t6, 4($s1)		# $t6 = crab.state
	
	beq $t6, 1, crab_walk1	# if crab.state == 1, draw walk_1 sprite
	beq $t6, 3, crab_dead	# if crab.state == 3, draw dead sprite
	
	# else, draw walk_0 sprite
	sw $t1, -16($t0)
	sw $t1, 16($t0)
	addi $t0, $t0, -WIDTH
	sw $t1, -12($t0)
	sw $t3, -8($t0)
	sw $t3, -4($t0)
	sw $t3, -0($t0)
	sw $t3, 4($t0)
	sw $t3, 8($t0)
	sw $t1, 12($t0)
	addi $t0, $t0, -WIDTH
	sw $t1, -20($t0)
	sw $t1, -16($t0)
	sw $t2, -12($t0)
	sw $t2, -8($t0)
	sw $t2, -4($t0)
	sw $t2, 0($t0)
	sw $t2, 4($t0)
	sw $t2, 8($t0)
	sw $t2, 12($t0)
	sw $t1, 16($t0)
	sw $t1, 20($t0)
	addi $t0, $t0, -WIDTH
	sw $t2, -28($t0)
	sw $t2, -24($t0)
	sw $t2, -12($t0)
	sw $t2, -8($t0)
	sw $t2, -4($t0)
	sw $t2, 0($t0)
	sw $t2, 4($t0)
	sw $t2, 8($t0)
	sw $t2, 12($t0)
	sw $t2, 24($t0)
	addi $t0, $t0, -WIDTH
	sw $t2, -32($t0)
	sw $t2, -28($t0)
	sw $t3, -24($t0)
	sw $t2, -20($t0)
	sw $t2, -12($t0)
	sw $t4, -8($t0)
	sw $t2, -4($t0)
	sw $t2, 0($t0)
	sw $t2, 4($t0)
	sw $t4, 8($t0)
	sw $t2, 12($t0)
	sw $t3, 24($t0)
	sw $t2, 28($t0)
	addi $t0, $t0, -WIDTH
	sw $t2, -32($t0)
	sw $t2, -28($t0)
	sw $t3, -24($t0)
	sw $t2, -20($t0)
	sw $t4, -8($t0)
	sw $t4, 8($t0)
	sw $t2, 24($t0)
	sw $t2, 28($t0)
	addi $t0, $t0, -WIDTH
	sw $t2, -32($t0)
	sw $t2, -28($t0)
	sw $t2, -20($t0)
	sw $t2, 24($t0)
	sw $t2, 28($t0)
	addi $t0, $t0, -WIDTH
	sw $t2, -32($t0)
	sw $t2, -28($t0)
	sw $t2, 20($t0)
	sw $t2, 24($t0)
	addi $t0, $t0, -WIDTH
	sw $t2, -32($t0)
	sw $t2, -28($t0)
	sw $t2, -24($t0)
	addi $t0, $t0, -WIDTH
	sw $t2, -28($t0)
	sw $t2, -24($t0)
	sw $t2, -20($t0)
	j crab_exit
	
crab_walk1: # draw walk_1 sprite
	sw $t1, -12($t0)
	sw $t1, 12($t0)
	addi $t0, $t0, -WIDTH
	sw $t1, -12($t0)
	sw $t3, -8($t0)
	sw $t3, -4($t0)
	sw $t3, -0($t0)
	sw $t3, 4($t0)
	sw $t3, 8($t0)
	sw $t1, 12($t0)
	addi $t0, $t0, -WIDTH
	sw $t2, -28($t0)
	sw $t2, -24($t0)
	sw $t1, -20($t0)
	sw $t1, -16($t0)
	sw $t2, -12($t0)
	sw $t2, -8($t0)
	sw $t2, -4($t0)
	sw $t2, 0($t0)
	sw $t2, 4($t0)
	sw $t2, 8($t0)
	sw $t2, 12($t0)
	sw $t1, 16($t0)
	sw $t2, 20($t0)
	addi $t0, $t0, -WIDTH
	sw $t2, -32($t0)
	sw $t2, -28($t0)
	sw $t3, -24($t0)
	sw $t2, -20($t0)
	sw $t2, -12($t0)
	sw $t2, -8($t0)
	sw $t2, -4($t0)
	sw $t2, 0($t0)
	sw $t2, 4($t0)
	sw $t2, 8($t0)
	sw $t2, 12($t0)
	sw $t3, 20($t0)
	sw $t2, 24($t0)
	addi $t0, $t0, -WIDTH
	sw $t2, -32($t0)
	sw $t2, -28($t0)
	sw $t3, -24($t0)
	sw $t2, -20($t0)
	sw $t2, -12($t0)
	sw $t4, -8($t0)
	sw $t2, -4($t0)
	sw $t2, 0($t0)
	sw $t2, 4($t0)
	sw $t4, 8($t0)
	sw $t2, 12($t0)
	sw $t2, 20($t0)
	sw $t2, 24($t0)
	addi $t0, $t0, -WIDTH
	sw $t2, -32($t0)
	sw $t2, -28($t0)
	sw $t2, -20($t0)
	sw $t4, -8($t0)
	sw $t4, 8($t0)
	sw $t2, 20($t0)
	sw $t2, 24($t0)
	addi $t0, $t0, -WIDTH
	sw $t2, -32($t0)
	sw $t2, -28($t0)
	sw $t2, 16($t0)
	sw $t2, 20($t0)
	addi $t0, $t0, -WIDTH
	sw $t2, -32($t0)
	sw $t2, -28($t0)
	sw $t2, -24($t0)
	addi $t0, $t0, -WIDTH
	sw $t2, -28($t0)
	sw $t2, -24($t0)
	sw $t2, -20($t0)
	j crab_exit

crab_dead: # draw dead sprite
	addi $t0, $t0, WIDTH
	addi $t0, $t0, WIDTH
	sw $t2, -28($t0)
	sw $t2, -24($t0)
	sw $t2, -20($t0)
	addi $t0, $t0, -WIDTH
	sw $t2, -32($t0)
	sw $t2, -28($t0)
	sw $t2, -24($t0)
	addi $t0, $t0, -WIDTH
	sw $t2, -32($t0)
	sw $t2, -28($t0)
	sw $t2, 20($t0)
	sw $t2, 24($t0)
	addi $t0, $t0, -WIDTH
	sw $t2, -32($t0)
	sw $t2, -28($t0)
	sw $t2, -20($t0)
	sw $t2, 24($t0)
	sw $t2, 28($t0)
	addi $t0, $t0, -WIDTH
	sw $t2, -32($t0)
	sw $t2, -28($t0)
	sw $t3, -24($t0)
	sw $t2, -20($t0)
	sw $t3, -8($t0)
	sw $t3, 8($t0)
	sw $t2, 24($t0)
	sw $t2, 28($t0)
	addi $t0, $t0, -WIDTH
	sw $t2, -32($t0)
	sw $t2, -28($t0)
	sw $t3, -24($t0)
	sw $t2, -20($t0)
	sw $t2, -12($t0)
	sw $t3, -8($t0)
	sw $t2, -4($t0)
	sw $t2, 0($t0)
	sw $t2, 4($t0)
	sw $t3, 8($t0)
	sw $t2, 12($t0)
	sw $t3, 24($t0)
	sw $t2, 28($t0)
	addi $t0, $t0, -WIDTH
	sw $t2, -28($t0)
	sw $t2, -24($t0)
	sw $t2, -12($t0)
	sw $t2, -8($t0)
	sw $t2, -4($t0)
	sw $t2, 0($t0)
	sw $t2, 4($t0)
	sw $t2, 8($t0)
	sw $t2, 12($t0)
	sw $t2, 24($t0)
	addi $t0, $t0, -WIDTH
	sw $t1, -20($t0)
	sw $t1, -16($t0)
	sw $t2, -12($t0)
	sw $t2, -8($t0)
	sw $t2, -4($t0)
	sw $t2, 0($t0)
	sw $t2, 4($t0)
	sw $t2, 8($t0)
	sw $t2, 12($t0)
	sw $t1, 16($t0)
	sw $t1, 20($t0)
	addi $t0, $t0, -WIDTH
	sw $t1, -12($t0)
	sw $t3, -8($t0)
	sw $t3, -4($t0)
	sw $t3, -0($t0)
	sw $t3, 4($t0)
	sw $t3, 8($t0)
	sw $t1, 12($t0)
	addi $t0, $t0, -WIDTH
	sw $t1, -16($t0)
	sw $t1, 16($t0)
	
crab_exit:
	# Return to caller			
	jr $ra
# ---------------------------------------------------------------------------------------


# stamp_clam():
# 	"Stamps" a clam shell onto the display
#	$t0: pixel_address, $t1-$t5: colors, $t7: temp
stamp_clam:
	li $t1, 0x00c496ff	# $t1 = shell midtone
	li $t2, 0x00c7a3f7	# $t2 = shell highlight
	li $t3, 0x009a7ac7	# $t3 = shell lo-light
	li $t4, 0x00ffffff	# $t4 = pearl
	li $t5, 0x00faf9e3	# $t5 = pearl shadow
	
	# Determine darkening factor
	li   $t7, DARKNESS
	mul  $t7, $t7, $s0	# $t7 = DARKNESS * level
	
	# Darken colors based on darkening factor
	sub $t1, $t1, $t7
	sub $t2, $t2, $t7
	sub $t3, $t3, $t7
	
	# Get pixel address and clam state
	la $t7, clam		# $t7 = addr(clam struct)
	lw $t0, 4($t7)		# $t0 = clam.position
	lw $t7 0($t7)		# $t7 = clam.state
	beq $t7, 0, sc_exit	# if clam.state == 0, branch to `sc_exit`
	beq $t7, 2, sc_closed	# if clam.state == 2, branch to `sc_closed`
				# else, clam is open
	
	# Stamp an OPEN clam
	sw $t1, -12($t0)
	sw $t1, -8($t0)
	sw $t1, -4($t0)
	sw $t1, 0($t0)
	sw $t1, 4($t0)
	sw $t1, 8($t0)
	sw $t1, 12($t0)
	addi $t0, $t0, -WIDTH
	sw $t1, -20($t0)
	sw $t1, -16($t0)
	sw $t1, -12($t0)
	sw $t3, -8($t0)
	sw $t3, -4($t0)
	sw $t3, 0($t0)
	sw $t3, 4($t0)
	sw $t3, 8($t0)
	sw $t1, 12($t0)
	sw $t1, 16($t0)
	sw $t1, 20($t0)
	addi $t0, $t0, -WIDTH
	sw $t1, -20($t0)
	sw $t3, -16($t0)
	sw $t3, -12($t0)
	sw $t3, -8($t0)
	sw $t3, -4($t0)
	sw $t3, 0($t0)
	sw $t3, 4($t0)
	sw $t3, 8($t0)
	sw $t3, 12($t0)
	sw $t3, 16($t0)
	sw $t1, 20($t0)
	addi $t0, $t0, -WIDTH
	sw $t1, -20($t0)
	sw $t1, -16($t0)
	sw $t3, -12($t0)
	sw $t3, -8($t0)
	sw $t5, -4($t0)
	sw $t5, 0($t0)
	sw $t5, 4($t0)
	sw $t3, 8($t0)
	sw $t3, 12($t0)
	sw $t1, 16($t0)
	sw $t1, 20($t0)
	addi $t0, $t0, -WIDTH
	sw $t1, -16($t0)
	sw $t1, -12($t0)
	sw $t1, -8($t0)
	sw $t5, -4($t0)
	sw $t4, 0($t0)
	sw $t4, 4($t0)
	sw $t1, 8($t0)
	sw $t1, 12($t0)
	sw $t1, 16($t0)
	addi $t0, $t0, -WIDTH
	sw $t1, -8($t0)
	sw $t5, -4($t0)
	sw $t4, 0($t0)
	sw $t4, 4($t0)
	sw $t1, 8($t0)
	addi $t0, $t0, -WIDTH
	sw $t1, -16($t0)
	sw $t2, -12($t0)
	sw $t2, -8($t0)
	sw $t2, -4($t0)
	sw $t2, 0($t0)
	sw $t2, 4($t0)
	sw $t2, 8($t0)
	sw $t2, 12($t0)
	sw $t1, 16($t0)
	addi $t0, $t0, -WIDTH
	sw $t1, -20($t0)
	sw $t2, -16($t0)
	sw $t2, -12($t0)
	sw $t2, -8($t0)
	sw $t2, -4($t0)
	sw $t2, 0($t0)
	sw $t2, 4($t0)
	sw $t2, 8($t0)
	sw $t2, 12($t0)
	sw $t2, 16($t0)
	sw $t1, 20($t0)
	addi $t0, $t0, -WIDTH
	sw $t1, -20($t0)
	sw $t2, -16($t0)
	sw $t2, -12($t0)
	sw $t2, -8($t0)
	sw $t2, -4($t0)
	sw $t2, 0($t0)
	sw $t2, 4($t0)
	sw $t2, 8($t0)
	sw $t2, 12($t0)
	sw $t2, 16($t0)
	sw $t1, 20($t0)
	addi $t0, $t0, -WIDTH
	sw $t1, -20($t0)
	sw $t1, -16($t0)
	sw $t2, -12($t0)
	sw $t1, -8($t0)
	sw $t2, -4($t0)
	sw $t2, 0($t0)
	sw $t2, 4($t0)
	sw $t1, 8($t0)
	sw $t2, 12($t0)
	sw $t1, 16($t0)
	sw $t1, 20($t0)
	addi $t0, $t0, -WIDTH
	sw $t1, -16($t0)
	sw $t1, -12($t0)
	sw $t1, -4($t0)
	sw $t1, 0($t0)
	sw $t1, 4($t0)
	sw $t1, 12($t0)
	sw $t1, 16($t0)
	j sc_exit
	
sc_closed:
	# Stamp a CLOSED clam
	sw $t1, -16($t0)
	sw $t1, -12($t0)
	sw $t1, -8($t0)
	sw $t1, -4($t0)
	sw $t1, 0($t0)
	sw $t1, 4($t0)
	sw $t1, 8($t0)
	sw $t1, 12($t0)
	sw $t1, 16($t0)
	addi $t0, $t0, -WIDTH
	sw $t1, -20($t0)
	sw $t3, -16($t0)
	sw $t3, -12($t0)
	sw $t1, -8($t0)
	sw $t3, -4($t0)
	sw $t3, 0($t0)
	sw $t3, 4($t0)
	sw $t1, 8($t0)
	sw $t3, 12($t0)
	sw $t3, 16($t0)
	sw $t1, 20($t0)
	addi $t0, $t0, -WIDTH
	sw $t3, -20($t0)
	sw $t2, -16($t0)
	sw $t2, -12($t0)
	sw $t3, -8($t0)
	sw $t1, -4($t0)
	sw $t1, 0($t0)
	sw $t1, 4($t0)
	sw $t3, 8($t0)
	sw $t2, 12($t0)
	sw $t2, 16($t0)
	sw $t3, 20($t0)
	addi $t0, $t0, -WIDTH
	sw $t2, -20($t0)
	sw $t2, -16($t0)
	sw $t2, -12($t0)
	sw $t1, -8($t0)
	sw $t1, -4($t0)
	sw $t1, 0($t0)
	sw $t1, 4($t0)
	sw $t1, 8($t0)
	sw $t2, 12($t0)
	sw $t2, 16($t0)
	sw $t2, 20($t0)
	addi $t0, $t0, -WIDTH
	sw $t2, -20($t0)
	sw $t2, -16($t0)
	sw $t2, -12($t0)
	sw $t2, -8($t0)
	sw $t1, -4($t0)
	sw $t1, 0($t0)
	sw $t1, 4($t0)
	sw $t2, 8($t0)
	sw $t2, 12($t0)
	sw $t2, 16($t0)
	sw $t2, 20($t0)
	addi $t0, $t0, -WIDTH
	sw $t2, -16($t0)
	sw $t2, -12($t0)
	sw $t2, -8($t0)
	sw $t1, -4($t0)
	sw $t1, 0($t0)
	sw $t1, 4($t0)
	sw $t2, 8($t0)
	sw $t2, 12($t0)
	sw $t2, 16($t0)
	addi $t0, $t0, -WIDTH
	sw $t2, -8($t0)
	sw $t2, -4($t0)
	sw $t1, 0($t0)
	sw $t2, 4($t0)
	sw $t2, 8($t0)
	
sc_exit:
	# Return to caller
	jr $ra
# ---------------------------------------------------------------------------------------


# stamp_piranha():
# 	"Stamps" the piranhas onto the display
#	$t0: pixel_address, $t1-$t4: colors, $t5: piranha, $t7: temp, $t8: loop index
stamp_piranha:
	li $t1, 0x00312e73	# $t1 = base color
	li $t2, 0x00661a1f	# $t2 = belly color
	li $t3, 0x009595ad	# $t3 = teeth color
	li $t4, 0x00000000	# $t4 = black
	
	# Determine darkening factor
	li   $t7, DARKNESS
	mul  $t7, $t7, $s0	# $t7 = DARKNESS * level
	
	# Darken colors based on darkening factor
	sub $t1, $t1, $t7
	sub $t2, $t2, $t7
	sub $t3, $t3, $t7
	
	# Loop twice: stamp each piranha
	li   $t8, 0		# $t8 = 0; loop index
	la $t5, piranha1	# $t5 = *piranha1
sp_loop:
	beq  $t8, 2, sp_exit	# if $t8 == 2, return

	# Determine if piranha is visible, and if it faces left or right 
	lw $t7 0($t5)		# $t7 = piranha.state
	beq $t7, 0, sp_update	# if piranha.state == 0, it's invisible - skip it
	lw $t0, 4($t5)		# $t0 = piranha.position
	beq $t7, 1, sp_left	# if piranha.state == 1, branch to `sp_left`
				# else, facing right
			
	# Stamp a right-facing piranha
	sw $s5, -16($t0)
	sw $t1, -12($t0)
	sw $t1, -8($t0)
	sw $t1, -4($t0)	
	addi $t0, $t0, -WIDTH
	sw $s5, -32($t0)
	sw $t1, -28($t0)
	sw $s5, -12($t0)
	sw $t1, -8($t0)
	sw $t1, -4($t0)
	sw $t1, 0($t0)
	sw $t2, 4($t0)
	sw $t2, 8($t0)
	sw $t2, 12($t0)
	sw $t2, 16($t0)
	sw $t2, 20($t0)
	addi $t0, $t0, -WIDTH
	sw $s5, -32($t0)
	sw $t1, -28($t0)
	sw $t2, -24($t0)
	sw $s5, -20($t0)
	sw $t2, -16($t0)
	sw $t2, -12($t0)
	sw $t2, -8($t0)
	sw $t1, -4($t0)
	sw $t1, 0($t0)
	sw $t1, 4($t0)
	sw $t2, 8($t0)
	sw $t2, 12($t0)
	sw $t2, 16($t0)
	sw $t2, 20($t0)
	sw $t2, 24($t0)
	addi $t0, $t0, -WIDTH
	sw $s5, -32($t0)
	sw $t1, -28($t0)
	sw $t1, -24($t0)
	sw $t2, -20($t0)
	sw $t2, -16($t0)
	sw $t2, -12($t0)
	sw $t2, -8($t0)
	sw $t1, -4($t0)
	sw $t1, 0($t0)
	sw $t1, 4($t0)
	sw $t1, 8($t0)
	sw $t1, 12($t0)
	sw $s5, 24($t0)
	sw $t2, 28($t0)
	addi $t0, $t0, -WIDTH
	sw $s5, -28($t0)
	sw $t1, -24($t0)
	sw $t1, -20($t0)
	sw $t1, -16($t0)
	sw $t1, -12($t0)
	sw $t1, -8($t0)
	sw $t1, -4($t0)
	sw $t1, 0($t0)
	sw $t1, 4($t0)
	sw $t1, 8($t0)
	sw $t1, 12($t0)
	sw $t3, 16($t0)
	addi $t0, $t0, -WIDTH
	sw $s5, -32($t0)
	sw $t1, -28($t0)
	sw $t1, -24($t0)
	sw $t1, -20($t0)
	sw $t1, -16($t0)
	sw $t1, -12($t0)
	sw $t1, -8($t0)
	sw $t1, -4($t0)
	sw $t1, 0($t0)
	sw $t1, 4($t0)
	sw $t1, 8($t0)
	sw $t1, 12($t0)
	sw $t1, 16($t0)
	sw $t3, 20($t0)
	addi $t0, $t0, -WIDTH
	sw $s5, -32($t0)
	sw $t1, -28($t0)
	sw $t1, -24($t0)
	sw $s5, -16($t0)
	sw $t1, -12($t0)
	sw $t1, -8($t0)
	sw $t1, -4($t0)
	sw $t1, 0($t0)
	sw $t1, 4($t0)
	sw $t4, 8($t0)
	sw $t4, 12($t0)
	sw $t1, 16($t0)
	sw $t1, 20($t0)
	sw $t1, 24($t0)
	addi $t0, $t0, -WIDTH
	sw $s5, -32($t0)
	sw $t1, -28($t0)
	sw $s5, -12($t0)
	sw $t1, -8($t0)
	sw $t1, -4($t0)
	sw $t1, 0($t0)
	sw $t1, 4($t0)
	sw $t1, 8($t0)
	sw $t1, 12($t0)
	sw $t1, 16($t0)
	sw $t1, 20($t0)
	addi $t0, $t0, -WIDTH
	sw $s5, -16($t0)
	sw $t2, -12($t0)
	sw $t2, -8($t0)
	sw $t1, -4($t0)
	sw $t1, 0($t0)
	sw $t1, 4($t0)
	sw $t1, 8($t0)
	sw $t1, 12($t0)
	sw $t1, 16($t0)
	addi $t0, $t0, -WIDTH
	sw $s5, -20($t0)
	sw $t2, -16($t0)
	sw $t2, -12($t0)
	sw $t2, -8($t0)
	sw $t2, -4($t0)
	sw $t1, 0($t0)
	sw $t1, 4($t0)
	sw $t1, 8($t0)
	j sp_update
				
sp_left: # Stamp a left-facing piranha
	sw $s5, 16($t0)
	sw $t1, 12($t0)
	sw $t1, 8($t0)
	sw $t1, 4($t0)	
	addi $t0, $t0, -WIDTH
	sw $s5, 32($t0)
	sw $t1, 28($t0)
	sw $s5, 12($t0)
	sw $t1, 8($t0)
	sw $t1, 4($t0)
	sw $t1, 0($t0)
	sw $t2, -4($t0)
	sw $t2, -8($t0)
	sw $t2, -12($t0)
	sw $t2, -16($t0)
	sw $t2, -20($t0)
	addi $t0, $t0, -WIDTH
	sw $s5, 32($t0)
	sw $t1, 28($t0)
	sw $t2, 24($t0)
	sw $s5, 20($t0)
	sw $t2, 16($t0)
	sw $t2, 12($t0)
	sw $t2, 8($t0)
	sw $t1, 4($t0)
	sw $t1, 0($t0)
	sw $t1, -4($t0)
	sw $t2, -8($t0)
	sw $t2, -12($t0)
	sw $t2, -16($t0)
	sw $t2, -20($t0)
	sw $t2, -24($t0)
	addi $t0, $t0, -WIDTH
	sw $s5, 32($t0)
	sw $t1, 28($t0)
	sw $t1, 24($t0)
	sw $t2, 20($t0)
	sw $t2, 16($t0)
	sw $t2, 12($t0)
	sw $t2, 8($t0)
	sw $t1, 4($t0)
	sw $t1, 0($t0)
	sw $t1, -4($t0)
	sw $t1, -8($t0)
	sw $t1, -12($t0)
	sw $s5, -24($t0)
	sw $t2, -28($t0)
	addi $t0, $t0, -WIDTH
	sw $s5, 28($t0)
	sw $t1, 24($t0)
	sw $t1, 20($t0)
	sw $t1, 16($t0)
	sw $t1, 12($t0)
	sw $t1, 8($t0)
	sw $t1, 4($t0)
	sw $t1, 0($t0)
	sw $t1, -4($t0)
	sw $t1, -8($t0)
	sw $t1, -12($t0)
	sw $t3, -16($t0)
	addi $t0, $t0, -WIDTH
	sw $s5, 32($t0)
	sw $t1, 28($t0)
	sw $t1, 24($t0)
	sw $t1, 20($t0)
	sw $t1, 16($t0)
	sw $t1, 12($t0)
	sw $t1, 8($t0)
	sw $t1, 4($t0)
	sw $t1, 0($t0)
	sw $t1, -4($t0)
	sw $t1, -8($t0)
	sw $t1, -12($t0)
	sw $t1, -16($t0)
	sw $t3, -20($t0)
	addi $t0, $t0, -WIDTH
	sw $s5, 32($t0)
	sw $t1, 28($t0)
	sw $t1, 24($t0)
	sw $s5, 16($t0)
	sw $t1, 12($t0)
	sw $t1, 8($t0)
	sw $t1, 4($t0)
	sw $t1, 0($t0)
	sw $t1, -4($t0)
	sw $t4, -8($t0)
	sw $t4, -12($t0)
	sw $t1, -16($t0)
	sw $t1, -20($t0)
	sw $t1, -24($t0)
	addi $t0, $t0, -WIDTH
	sw $s5, 32($t0)
	sw $t1, 28($t0)
	sw $s5, 12($t0)
	sw $t1, 8($t0)
	sw $t1, 4($t0)
	sw $t1, 0($t0)
	sw $t1, -4($t0)
	sw $t1, -8($t0)
	sw $t1, -12($t0)
	sw $t1, -16($t0)
	sw $t1, -20($t0)
	addi $t0, $t0, -WIDTH
	sw $s5, 16($t0)
	sw $t2, 12($t0)
	sw $t2, 8($t0)
	sw $t1, 4($t0)
	sw $t1, 0($t0)
	sw $t1, -4($t0)
	sw $t1, -8($t0)
	sw $t1, -12($t0)
	sw $t1, -16($t0)
	addi $t0, $t0, -WIDTH
	sw $s5, 20($t0)
	sw $t2, 16($t0)
	sw $t2, 12($t0)
	sw $t2, 8($t0)
	sw $t2, 4($t0)
	sw $t1, 0($t0)
	sw $t1, -4($t0)
	sw $t1, -8($t0)
	
sp_update:
	# Update pointer and index
	addi $t8, $t8, 1	# $t8 = i + 1
	addi $t5, $t5, 8	# $t5 = *piranha[i+1]
	j    sp_loop
	
sp_exit:
	jr $ra
# ---------------------------------------------------------------------------------------


# stamp_pufferfish():
# 	"Stamps" a pufferfish onto the display
#	$t0: pixel_address, $t1-$t5: colors, $t7: temp, $t8: *pufferfish,
stamp_pufferfish:
	li   $t1, 0x00a8c267	# $t1 = base color
	li   $t2, 0x00929644	# $t2 = fin/spikes color
	li   $t3, 0x00ffffff	# $t3 = belly color
	li   $t4, 0x00d1d1d1	# $t4 = belly spikes color
	li   $t5, 0x00000000	# $t5 = black
	
	# Determine darkening factor
	li   $t7, DARKNESS
	mul  $t7, $t7, $s0	# $t7 = DARKNESS * level
	
	# Darken colors based on darkening factor
	sub  $t1, $t1, $t7
	sub  $t2, $t2, $t7
	sub  $t3, $t3, $t7
	sub  $t4, $t4, $t7
	
	# Get pixel address and state of pufferfish
	la   $t8, pufferfish
	lw   $t7, 0($t8)	# $t7 = puffefish.state
	beq  $t7, 0, spuff_done	# if state==0, is invisible; don't display it
	lw   $t0, 4($t8)	# $t0 = address of pixel
	
	# Color the pixels appropriately
	sw $s5, -52($t0)
	sw $s5, -48($t0)
	sw $s5, -44($t0)
	sw $s5, -40($t0)
	sw $t1, -32($t0)
	sw $t1, -28($t0)
	sw $t1, -24($t0)
	sw $t1, -20($t0)
	sw $t1, -16($t0)
	sw $t1, -12($t0)
	sw $t5, -8($t0)
	sw $t5, -4($t0)
	sw $t5, 0($t0)
	sw $t5, 4($t0)
	sw $t5, 8($t0)
	sw $t1, 12($t0)
	sw $t1, 16($t0)
	sw $t1, 20($t0)
	sw $t1, 24($t0)
	sw $t1, 28($t0)
	sw $t1, 32($t0)
	sw $t2, 36($t0)
	sw $s5, 40($t0)
	sw $s5, 44($t0)
	sw $s5, 48($t0)
	sw $s5, 52($t0)
	addi $t0, $t0, -WIDTH
	sw $s5, -36($t0)
	sw $t1, -32($t0)
	sw $t1, -28($t0)
	sw $t1, -24($t0)
	sw $t1, -20($t0)
	sw $t1, -16($t0)
	sw $t1, -12($t0)
	sw $t1, -8($t0)
	sw $t1, -4($t0)
	sw $t1, 0($t0)
	sw $t1, 4($t0)
	sw $t1, 8($t0)
	sw $t1, 12($t0)
	sw $t1, 16($t0)
	sw $t1, 20($t0)
	sw $t1, 24($t0)
	sw $t1, 28($t0)
	sw $t1, 32($t0)
	sw $t2, 36($t0)
	sw $t2, 40($t0)
	addi $t0, $t0, -WIDTH
	sw $s5, -40($t0)
	sw $t2, -36($t0)
	sw $t1, -32($t0)
	sw $t1, -28($t0)
	sw $t1, -24($t0)
	sw $t5, -20($t0)
	sw $t1, -16($t0)
	sw $t1, -12($t0)
	sw $t1, -8($t0)
	sw $t1, -4($t0)
	sw $t1, 0($t0)
	sw $t1, 4($t0)
	sw $t1, 8($t0)
	sw $t1, 12($t0)
	sw $t1, 16($t0)
	sw $t5, 20($t0)
	sw $t1, 24($t0)
	sw $t1, 28($t0)
	sw $t1, 32($t0)
	sw $s5, 36($t0)
	sw $s5, 40($t0)
	addi $t0, $t0, -WIDTH
	sw $t2, -40($t0)
	sw $t2, -36($t0)
	sw $t2, -32($t0)
	sw $t1, -28($t0)
	sw $t1, -24($t0)
	sw $t1, -20($t0)
	sw $t5, -16($t0)
	sw $t1, -12($t0)
	sw $t1, -8($t0)
	sw $t1, -4($t0)
	sw $t1, 0($t0)
	sw $t1, 4($t0)
	sw $t1, 8($t0)
	sw $t1, 12($t0)
	sw $t5, 16($t0)
	sw $t1, 20($t0)
	sw $t1, 24($t0)
	sw $t1, 28($t0)
	sw $t2, 32($t0)
	sw $s5, 36($t0)
	addi $t0, $t0, -WIDTH
	sw $s5, -40($t0)
	sw $s5, -36($t0)
	sw $s5, -32($t0)
	sw $t1, -28($t0)
	sw $t1, -24($t0)
	sw $t1, -20($t0)
	sw $t1, -16($t0)
	sw $t1, -12($t0)
	sw $t1, -8($t0)
	sw $t1, -4($t0)
	sw $t1, 0($t0)
	sw $t1, 4($t0)
	sw $t1, 8($t0)
	sw $t1, 12($t0)
	sw $t1, 16($t0)
	sw $t1, 20($t0)
	sw $t1, 24($t0)
	sw $t1, 28($t0)
	sw $t2, 32($t0)
	sw $t2, 36($t0)
	sw $s5, 40($t0)
	addi $t0, $t0, -WIDTH
	sw $t2, -28($t0)
	sw $t1, -24($t0)
	sw $t1, -20($t0)
	sw $t1, -16($t0)
	sw $t1, -12($t0)
	sw $t1, -8($t0)
	sw $t1, -4($t0)
	sw $t1, 0($t0)
	sw $t1, 4($t0)
	sw $t1, 8($t0)
	sw $t1, 12($t0)
	sw $t1, 16($t0)
	sw $t1, 20($t0)
	sw $t1, 24($t0)
	sw $s5, 28($t0)
	sw $s5, 32($t0)
	sw $s5, 36($t0)
	sw $t2, 40($t0)
	addi $t0, $t0, -WIDTH
	sw $s5, -32($t0)
	sw $t2, -28($t0)
	sw $t2, -24($t0)
	sw $t1, -20($t0)
	sw $t1, -16($t0)
	sw $t1, -12($t0)
	sw $t1, -8($t0)
	sw $t1, -4($t0)
	sw $t1, 0($t0)
	sw $t1, 4($t0)
	sw $t1, 8($t0)
	sw $t1, 12($t0)
	sw $t1, 16($t0)
	sw $t1, 20($t0)
	sw $t2, 24($t0)
	sw $t2, 28($t0)
	sw $s5, 40($t0)
	addi $t0, $t0, -WIDTH
	sw $t2, -32($t0)
	sw $t2, -28($t0)
	sw $s5, -24($t0)
	sw $s5, -20($t0)
	sw $t1, -16($t0)
	sw $t1, -12($t0)
	sw $t1, -8($t0)
	sw $t1, -4($t0)
	sw $t1, 0($t0)
	sw $t1, 4($t0)
	sw $t1, 8($t0)
	sw $t1, 12($t0)
	sw $t1, 16($t0)
	sw $s5, 20($t0)
	sw $s5, 24($t0)
	sw $t2, 28($t0)
	addi $t0, $t0, -WIDTH
	sw $s5, -32($t0)
	sw $s5, -28($t0)
	sw $s5, -20($t0)
	sw $t2, -16($t0)
	sw $t2, -12($t0)
	sw $t1, -8($t0)
	sw $t1, -4($t0)
	sw $t1, 0($t0)
	sw $t1, 4($t0)
	sw $t1, 8($t0)
	sw $t2, 12($t0)
	sw $t2, 16($t0)
	sw $s5, 20($t0)
	sw $s5, 28($t0)
	addi $t0, $t0, -WIDTH
	sw $t2, -20($t0)
	sw $t2, -16($t0)
	sw $s5, -12($t0)
	sw $s5, -8($t0)
	sw $t2, -4($t0)
	sw $t2, 0($t0)
	sw $t2, 4($t0)
	sw $s5, 8($t0)
	sw $s5, 12($t0)
	sw $t2, 16($t0)
	sw $t2, 20($t0)
	addi $t0, $t0, -WIDTH
	sw $t2, -20($t0)
	sw $s5, -16($t0)
	sw $s5, -4($t0)
	sw $t2, 0($t0)
	sw $s5, 4($t0)
	sw $s5, 16($t0)
	sw $t2, 20($t0)
	addi $t0, $t0, -WIDTH
	sw $s5, -20($t0)
	sw $t2, 0($t0)
	sw $s5, 20($t0)
	sw $s5, -WIDTH($t0)
	addi $t0, $t0, WIDTH
	addi $t0, $t0, WIDTH
	addi $t0, $t0, WIDTH
	addi $t0, $t0, WIDTH
	addi $t0, $t0, WIDTH
	addi $t0, $t0, WIDTH
	addi $t0, $t0, WIDTH
	addi $t0, $t0, WIDTH
	addi $t0, $t0, WIDTH
	addi $t0, $t0, WIDTH
	addi $t0, $t0, WIDTH
	addi $t0, $t0, WIDTH
	sw $t2, -52($t0)
	sw $t2, -48($t0)
	sw $t2, -44($t0)
	sw $t2, -40($t0)
	sw $s5, -36($t0)
	sw $t1, -32($t0)
	sw $t1, -28($t0)
	sw $t1, -24($t0)
	sw $t1, -20($t0)
	sw $t1, -16($t0)
	sw $t1, -12($t0)
	sw $t5, -8($t0)
	sw $t5, -4($t0)
	sw $t5, 0($t0)
	sw $t5, 4($t0)
	sw $t5, 8($t0)
	sw $t1, 12($t0)
	sw $t1, 16($t0)
	sw $t1, 20($t0)
	sw $t1, 24($t0)
	sw $t1, 28($t0)
	sw $t1, 32($t0)
	sw $s5, 36($t0)
	sw $t2, 40($t0)
	sw $t2, 44($t0)
	sw $t2, 48($t0)
	sw $t2, 52($t0)
	addi $t0, $t0, WIDTH
	sw $s5, -52($t0)
	sw $t2, -48($t0)
	sw $t2, -44($t0)
	sw $t2, -40($t0)
	sw $t2, -36($t0)
	sw $t1, -32($t0)
	sw $t1, -28($t0)
	sw $t1, -24($t0)
	sw $t1, -20($t0)
	sw $t1, -16($t0)
	sw $t1, -12($t0)
	sw $t3, -8($t0)
	sw $t5, -4($t0)
	sw $t5, 0($t0)
	sw $t5, 4($t0)
	sw $t3, 8($t0)
	sw $t1, 12($t0)
	sw $t1, 16($t0)
	sw $t1, 20($t0)
	sw $t1, 24($t0)
	sw $t1, 28($t0)
	sw $t1, 32($t0)
	sw $t2, 36($t0)
	sw $t2, 40($t0)
	sw $t2, 44($t0)
	sw $t2, 48($t0)
	sw $s5, 52($t0)
	addi $t0, $t0, WIDTH
	sw $t2, -48($t0)
	sw $t2, -44($t0)
	sw $t2, -40($t0)
	sw $t2, -36($t0)
	sw $t2, -32($t0)
	sw $t1, -28($t0)
	sw $t1, -24($t0)
	sw $t1, -20($t0)
	sw $t3, -16($t0)
	sw $t3, -12($t0)
	sw $t3, -8($t0)
	sw $t3, -4($t0)
	sw $t3, 0($t0)
	sw $t3, 4($t0)
	sw $t3, 8($t0)
	sw $t3, 12($t0)
	sw $t3, 16($t0)
	sw $t1, 20($t0)
	sw $t1, 24($t0)
	sw $t1, 28($t0)
	sw $t2, 32($t0)
	sw $t2, 36($t0)
	sw $t2, 40($t0)
	sw $t2, 44($t0)
	sw $t2, 48($t0)
	addi $t0, $t0, WIDTH
	sw $s5, -48($t0)
	sw $t2, -44($t0)
	sw $t2, -40($t0)
	sw $t2, -36($t0)
	sw $s5, -32($t0)
	sw $t3, -28($t0)
	sw $t3, -24($t0)
	sw $t3, -20($t0)
	sw $t3, -16($t0)
	sw $t3, -12($t0)
	sw $t3, -8($t0)
	sw $t3, -4($t0)
	sw $t3, 0($t0)
	sw $t3, 4($t0)
	sw $t3, 8($t0)
	sw $t3, 12($t0)
	sw $t3, 16($t0)
	sw $t3, 20($t0)
	sw $t3, 24($t0)
	sw $t3, 28($t0)
	sw $s5, 32($t0)
	sw $t2, 36($t0)
	sw $t2, 40($t0)
	sw $t2, 44($t0)
	sw $s5, 48($t0)
	addi $t0, $t0, WIDTH
	sw $t2, -44($t0)
	sw $t2, -40($t0)
	sw $s5, -36($t0)
	sw $s5, -28($t0)
	sw $t3, -24($t0)
	sw $t3, -20($t0)
	sw $t3, -16($t0)
	sw $t3, -12($t0)
	sw $t3, -8($t0)
	sw $t3, -4($t0)
	sw $t3, 0($t0)
	sw $t3, 4($t0)
	sw $t3, 8($t0)
	sw $t3, 12($t0)
	sw $t3, 16($t0)
	sw $t3, 20($t0)
	sw $t3, 24($t0)
	sw $s5, 28($t0)
	sw $s5, 36($t0)
	sw $t2, 40($t0)
	sw $t2, 44($t0)
	addi $t0, $t0, WIDTH
	sw $t2, -44($t0)
	sw $s5, -40($t0)
	sw $s5, -32($t0)
	sw $t4, -28($t0)
	sw $t4, -24($t0)
	sw $t3, -20($t0)
	sw $t3, -16($t0)
	sw $t3, -12($t0)
	sw $t3, -8($t0)
	sw $t3, -4($t0)
	sw $t3, 0($t0)
	sw $t3, 4($t0)
	sw $t3, 8($t0)
	sw $t3, 12($t0)
	sw $t3, 16($t0)
	sw $t3, 20($t0)
	sw $t4, 24($t0)
	sw $t4, 28($t0)
	sw $s5, 32($t0)
	sw $s5, 40($t0)
	sw $t2, 44($t0)
	addi $t0, $t0, WIDTH
	sw $s5, -44($t0)
	sw $t4, -32($t0)
	sw $s5, -28($t0)
	sw $s5, -24($t0)
	sw $s5, -20($t0)
	sw $t3, -16($t0)
	sw $t3, -12($t0)
	sw $t3, -8($t0)
	sw $t3, -4($t0)
	sw $t3, 0($t0)
	sw $t3, 4($t0)
	sw $t3, 8($t0)
	sw $t3, 12($t0)
	sw $t3, 16($t0)
	sw $s5, 20($t0)
	sw $s5, 24($t0)
	sw $s5, 28($t0)
	sw $t4, 32($t0)
	sw $s5, 44($t0)
	addi $t0, $t0, WIDTH
	sw $s5, -32($t0)
	sw $s5, -16($t0)
	sw $t4, -12($t0)
	sw $t3, -8($t0)
	sw $t3, -4($t0)
	sw $t3, 0($t0)
	sw $t3, 4($t0)
	sw $t3, 8($t0)
	sw $t4, 12($t0)
	sw $s5, 16($t0)
	sw $s5, 32($t0)
	addi $t0, $t0, WIDTH
	sw $t4, -16($t0)
	sw $s5, -12($t0)
	sw $s5, -8($t0)
	sw $s5, -4($t0)
	sw $s5, 0($t0)
	sw $s5, 4($t0)
	sw $s5, 8($t0)
	sw $s5, 12($t0)
	sw $t4, 16($t0)
	addi $t0, $t0, WIDTH
	sw $s5, -16($t0)
	sw $s5, 16($t0)

spuff_done:
	# Return to caller
	jr $ra
# ---------------------------------------------------------------------------------------
	
	
# stamp_seahorse():
# 	"Stamps" a seahorse onto the display
#	$t0: pixel_address, $t1-$t3: colors, $t5: *seahorse, $t7: temp
stamp_seahorse:
	li   $t1, 0x00ff9815	# $t1 = seahorse colour
	li   $t2, 0x00ffeb3b	# $t2 = fin colour
	li   $t3, 0x00000000	# $t3 = black
	li   $t4, GLOW_AMT	# $t4 = glow amount
	
	# Determine darkening factor
	li   $t7, DARKNESS
	mul  $t7, $t7, $s0	# $t7 = DARKNESS * level
	
	# Modify colors based on darkening factor and glow
	sub  $t1, $t1, $t7
	sub  $t2, $t2, $t7
	add  $t4, $s5, $t4

	# Get pixel address and state
	la   $t5, seahorse
	lw   $t7, 0($t5)	# $t7 = seahorse.state
	beq  $t7, 0, ssh_done	# if state==0, is invisible; don't display it
	lw   $t0, 4($t5)	# $t0 = address of pixel
	
	# Color the pixels appropriately
	addi $t0, $t0, WIDTH
	sw $t4, -4($t0)
	sw $t4, 0($t0)
	sw $t4, 4($t0)
	sw $t4, 8($t0)
	addi $t0, $t0, -WIDTH
	sw $t4, -8($t0)
	sw $t4, -4($t0)
	sw $t1, 0($t0)
	sw $t1, 4($t0)
	sw $t4, 8($t0)
	sw $t4, 12($t0)
	addi $t0, $t0, -WIDTH
	sw $t4, -8($t0)
	sw $t1, -4($t0)
	sw $t1, 0($t0)
	sw $t4, 4($t0)
	sw $t1, 8($t0)
	sw $t4, 12($t0)
	addi $t0, $t0, -WIDTH
	sw $t4, -12($t0)
	sw $t4, -8($t0)
	sw $t1, -4($t0)
	sw $t1, 0($t0)
	sw $t4, 4($t0)
	sw $t4, 8($t0)
	sw $t4, 12($t0)
	addi $t0, $t0, -WIDTH
	sw $t4, -12($t0)
	sw $t2, -8($t0)
	sw $t1, -4($t0)
	sw $t1, 0($t0)
	sw $t4, 4($t0)
	sw $t4, 8($t0)
	addi $t0, $t0, -WIDTH
	sw $t4, -12($t0)
	sw $t2, -8($t0)
	sw $t1, -4($t0)
	sw $t1, 0($t0)
	sw $t1, 4($t0)
	sw $t4, 8($t0)
	sw $t4, 12($t0)
	sw $t4, 16($t0)
	addi $t0, $t0, -WIDTH
	sw $t4, -12($t0)
	sw $t2, -8($t0)
	sw $t1, -4($t0)
	sw $t3, 0($t0)
	sw $t1, 4($t0)
	sw $t1, 8($t0)
	sw $t1, 12($t0)
	sw $t4, 16($t0)
	addi $t0, $t0, -WIDTH
	sw $t4, -12($t0)
	sw $t4, -8($t0)
	sw $t2, -4($t0)
	sw $t1, 0($t0)
	sw $t1, 4($t0)
	sw $t4, 8($t0)
	sw $t4, 12($t0)
	sw $t4, 16($t0)
	addi $t0, $t0, -WIDTH
	sw $t4, -8($t0)
	sw $t4, -4($t0)
	sw $t1, 0($t0)
	sw $t4, 4($t0)
	sw $t4, 8($t0)
	addi $t0, $t0, -WIDTH
	sw $t4, -4($t0)
	sw $t4, 0($t0)
	sw $t4, 4($t0)

ssh_done:	
	# Return to caller			
	jr $ra
# ---------------------------------------------------------------------------------------


# stamp_bubble():
#	"Stamps" the bubbles onto the display at the position in bubble.position
#	Uses "popped" sprite for POP_TIME time counts after the time in bubble.state
#	After BUBBLE_REGEN time since the time in bubble.state, it resets to whole bubble
#	$t0: pixel_address, $t1: color, $t5: bubble, $t7: temp, $t8: loop index
stamp_bubble:
	li   $t1, 0x00ffffff	# $t1 = white
	li   $t2, 0x000a0a0a	
	add  $t2, $t2, $s5	# $t2 = inner bubble color, slightly lighter than BG
	
	# Determine darkening factor
	li   $t7, DARKNESS
	mul  $t7, $t7, $s0	# $t7 = DARKNESS * level
	
	# Darken colors based on darkening factor
	sub  $t1, $t1, $t7
	
	# Loop twice: stamp each bubble
	li   $t8, 0		# $t8 = 0; loop index
	la   $t5, bubble1	# $t5 = *bubble1

sb_loop:
	beq  $t8, 2, sb_exit	# if $t8 == 2, return

	# Determine if bubble is visible, its position, and the sprite to use
	lw   $t7 0($t5)		# $t7 = bubble.state
	beq  $t7, 0, sb_update	# if bubble.state == 0, it's invisible - skip it
	lw   $t0, 4($t5)	# $t0 = bubble.position
	beq  $t7, 1, sb_bubble	# if bubble.state == 1, stamp intact bubble
				# Else, bubble has been popped. But how long ago?
	# Current time = $s6,  Time of pop = $t7
	addi $t7, $t7, POP_TIME
	ble  $s6, $t7, sb_popped # If current time <= bubble's time of death + POP_TIME, draw popped 
	j    sb_update	 	 # Otherwise don't draw a bubble
				
sb_bubble:
	# Stamp an intact bubble
	sw   $t1, -8($t0)
	sw   $t1, -4($t0)
	sw   $t1, 0($t0)
	sw   $t1, 4($t0)
	sw   $t1, 8($t0)
	addi $t0, $t0, -WIDTH
	sw   $t1, -16($t0)
	sw   $t1, -12($t0)
	sw   $t2, -8($t0)
	sw   $t2, -4($t0)
	sw   $t2, 0($t0)
	sw   $t2, 4($t0)
	sw   $t2, 8($t0)
	sw   $t1, 12($t0)
	sw   $t1, 16($t0)
	addi $t0, $t0, -WIDTH
	sw   $t1, -20($t0)
	sw   $t2, -16($t0)
	sw   $t2, -12($t0)
	sw   $t2, -8($t0)
	sw   $t2, -4($t0)
	sw   $t2, 0($t0)
	sw   $t2, 4($t0)
	sw   $t2, 8($t0)
	sw   $t2, 12($t0)
	sw   $t2, 16($t0)
	sw   $t1, 20($t0)
	addi $t0, $t0, -WIDTH
	sw   $t1, -24($t0)
	sw   $t2, -20($t0)
	sw   $t2, -16($t0)
	sw   $t2, -12($t0)
	sw   $t2, -8($t0)
	sw   $t2, -4($t0)
	sw   $t2, 0($t0)
	sw   $t2, 4($t0)
	sw   $t2, 8($t0)
	sw   $t2, 12($t0)
	sw   $t2, 16($t0)
	sw   $t2, 20($t0)
	sw   $t1, 24($t0)
	addi $t0, $t0, -WIDTH
	sw   $t1, -28($t0)
	sw   $t2, -24($t0)
	sw   $t2, -20($t0)
	sw   $t2, -16($t0)
	sw   $t2, -12($t0)
	sw   $t2, -8($t0)
	sw   $t2, -4($t0)
	sw   $t2, 0($t0)
	sw   $t2, 4($t0)
	sw   $t2, 8($t0)
	sw   $t2, 12($t0)
	sw   $t2, 16($t0)
	sw   $t2, 20($t0)
	sw   $t2, 24($t0)
	sw   $t1, 28($t0)
	addi $t0, $t0, -WIDTH
	sw   $t1, -28($t0)
	sw   $t2, -24($t0)
	sw   $t2, -20($t0)
	sw   $t2, -16($t0)
	sw   $t2, -12($t0)
	sw   $t2, -8($t0)
	sw   $t2, -4($t0)
	sw   $t2, 0($t0)
	sw   $t2, 4($t0)
	sw   $t2, 8($t0)
	sw   $t2, 12($t0)
	sw   $t2, 16($t0)
	sw   $t2, 20($t0)
	sw   $t2, 24($t0)
	sw   $t1, 28($t0)
	addi $t0, $t0, -WIDTH
	sw   $t1, -32($t0)
	sw   $t2, -28($t0)
	sw   $t2, -24($t0)
	sw   $t2, -20($t0)
	sw   $t2, -16($t0)
	sw   $t2, -12($t0)
	sw   $t2, -8($t0)
	sw   $t2, -4($t0)
	sw   $t2, 0($t0)
	sw   $t2, 4($t0)
	sw   $t2, 8($t0)
	sw   $t2, 12($t0)
	sw   $t2, 16($t0)
	sw   $t2, 20($t0)
	sw   $t2, 24($t0)
	sw   $t2, 28($t0)
	sw   $t1, 32($t0)
	addi $t0, $t0, -WIDTH
	sw   $t1, -32($t0)
	sw   $t2, -28($t0)
	sw   $t2, -24($t0)
	sw   $t2, -20($t0)
	sw   $t2, -16($t0)
	sw   $t2, -12($t0)
	sw   $t2, -8($t0)
	sw   $t2, -4($t0)
	sw   $t2, 0($t0)
	sw   $t2, 4($t0)
	sw   $t2, 8($t0)
	sw   $t2, 12($t0)
	sw   $t2, 16($t0)
	sw   $t2, 20($t0)
	sw   $t2, 24($t0)
	sw   $t2, 28($t0)
	sw   $t1, 32($t0)
	addi $t0, $t0, -WIDTH
	sw   $t1, -32($t0)
	sw   $t2, -28($t0)
	sw   $t2, -24($t0)
	sw   $t2, -20($t0)
	sw   $t2, -16($t0)
	sw   $t2, -12($t0)
	sw   $t2, -8($t0)
	sw   $t2, -4($t0)
	sw   $t2, 0($t0)
	sw   $t2, 4($t0)
	sw   $t2, 8($t0)
	sw   $t2, 12($t0)
	sw   $t2, 16($t0)
	sw   $t2, 20($t0)
	sw   $t2, 24($t0)
	sw   $t2, 28($t0)
	sw   $t1, 32($t0)
	addi $t0, $t0, -WIDTH
	sw   $t1, -32($t0)
	sw   $t2, -28($t0)
	sw   $t2, -24($t0)
	sw   $t2, -20($t0)
	sw   $t2, -16($t0)
	sw   $t2, -12($t0)
	sw   $t2, -8($t0)
	sw   $t2, -4($t0)
	sw   $t2, 0($t0)
	sw   $t2, 4($t0)
	sw   $t2, 8($t0)
	sw   $t2, 12($t0)
	sw   $t2, 16($t0)
	sw   $t2, 20($t0)
	sw   $t2, 24($t0)
	sw   $t2, 28($t0)
	sw   $t1, 32($t0)
	addi $t0, $t0, -WIDTH
	sw   $t1, -32($t0)
	sw   $t2, -28($t0)
	sw   $t2, -24($t0)
	sw   $t2, -20($t0)
	sw   $t2, -16($t0)
	sw   $t2, -12($t0)
	sw   $t2, -8($t0)
	sw   $t2, -4($t0)
	sw   $t2, 0($t0)
	sw   $t2, 4($t0)
	sw   $t2, 8($t0)
	sw   $t2, 12($t0)
	sw   $t2, 16($t0)
	sw   $t1, 20($t0)
	sw   $t2, 24($t0)
	sw   $t2, 28($t0)
	sw   $t1, 32($t0)
	addi $t0, $t0, -WIDTH
	sw   $t1, -28($t0)
	sw   $t2, -24($t0)
	sw   $t2, -20($t0)
	sw   $t2, -16($t0)
	sw   $t2, -12($t0)
	sw   $t2, -8($t0)
	sw   $t2, -4($t0)
	sw   $t2, 0($t0)
	sw   $t2, 4($t0)
	sw   $t2, 8($t0)
	sw   $t2, 12($t0)
	sw   $t2, 16($t0)
	sw   $t2, 20($t0)
	sw   $t2, 24($t0)
	sw   $t1, 28($t0)
	addi $t0, $t0, -WIDTH
	sw   $t1, -28($t0)
	sw   $t2, -24($t0)
	sw   $t2, -20($t0)
	sw   $t2, -16($t0)
	sw   $t2, -12($t0)
	sw   $t2, -8($t0)
	sw   $t2, -4($t0)
	sw   $t2, 0($t0)
	sw   $t2, 4($t0)
	sw   $t2, 8($t0)
	sw   $t1, 12($t0)
	sw   $t2, 16($t0)
	sw   $t2, 20($t0)
	sw   $t2, 24($t0)
	sw   $t1, 28($t0)
	addi $t0, $t0, -WIDTH
	sw   $t1, -24($t0)
	sw   $t2, -20($t0)
	sw   $t2, -16($t0)
	sw   $t2, -12($t0)
	sw   $t2, -8($t0)
	sw   $t2, -4($t0)
	sw   $t2, 0($t0)
	sw   $t1, 4($t0)
	sw   $t1, 8($t0)
	sw   $t2, 12($t0)
	sw   $t2, 16($t0)
	sw   $t2, 20($t0)
	sw   $t1, 24($t0)
	addi $t0, $t0, -WIDTH
	sw   $t1, -20($t0)
	sw   $t2, -16($t0)
	sw   $t2, -12($t0)
	sw   $t2, -8($t0)
	sw   $t2, -4($t0)
	sw   $t2, 0($t0)
	sw   $t2, 4($t0)
	sw   $t2, 8($t0)
	sw   $t2, 12($t0)
	sw   $t2, 16($t0)
	sw   $t1, 20($t0)
	addi $t0, $t0, -WIDTH
	sw   $t1, -16($t0)
	sw   $t1, -12($t0)
	sw   $t2, -8($t0)
	sw   $t2, -4($t0)
	sw   $t2, 0($t0)
	sw   $t2, 4($t0)
	sw   $t2, 8($t0)
	sw   $t1, 12($t0)
	sw   $t1, 16($t0)
	addi $t0, $t0, -WIDTH
	sw   $t1, -8($t0)
	sw   $t1, -4($t0)
	sw   $t1, 0($t0)
	sw   $t1, 4($t0)
	sw   $t1, 8($t0)
	j    sb_update
	
sb_popped:
	# Stamp a popped bubble
	addi $t0, $t0, WIDTH
	addi $t0, $t0, WIDTH
	sw   $t1, 0($t0)
	addi $t0, $t0, -WIDTH
	sw   $t1, -8($t0)
	addi $t0, $t0, -WIDTH
	sw   $t1, -20($t0)
	sw   $t1, 16($t0)
	addi $t0, $t0, -WIDTH
	sw   $t1, -12($t0)
	addi $t0, $t0, -WIDTH
	sw   $t1, -24($t0)
	sw   $t1, 4($t0)
	sw   $t1, 20($t0)
	sw   $t1, 28($t0)
	addi $t0, $t0, -WIDTH
	addi $t0, $t0, -WIDTH
	sw   $t1, -24($t0)
	addi $t0, $t0, -WIDTH
	sw   $t1, -36($t0)
	sw   $t1, 20($t0)
	sw   $t1, 36($t0)
	addi $t0, $t0, -WIDTH
	addi $t0, $t0, -WIDTH
	sw   $t1, -28($t0)
	addi $t0, $t0, -WIDTH
	sw   $t1, 32($t0)
	sw   $t1, 40($t0)
	addi $t0, $t0, -WIDTH
	addi $t0, $t0, -WIDTH
	sw   $t1, -36($t0)
	addi $t0, $t0, -WIDTH
	sw   $t1, 32($t0)
	addi $t0, $t0, -WIDTH
	sw   $t1, -28($t0)
	sw   $t1, -12($t0)
	sw   $t1, 24($t0)
	addi $t0, $t0, -WIDTH
	addi $t0, $t0, -WIDTH
	sw   $t1, -28($t0)
	sw   $t1, 0($t0)
	addi $t0, $t0, -WIDTH
	sw   $t1, 8($t0)
	sw   $t1, 16($t0)
	sw   $t1, 28($t0)
	addi $t0, $t0, -WIDTH
	sw   $t1, -12($t0)
	addi $t0, $t0, -WIDTH
	sw   $t1, 8($t0)

sb_update:
	# Update pointer and index
	addi $t8, $t8, 1	# $t8 = i + 1
	addi $t5, $t5, 8	# $t5 = *bubble[i+1]
	j    sb_loop
	
sb_exit:
	jr   $ra
# ---------------------------------------------------------------------------------------


# stamp_stars():
# 	"Stamps" all the sea stars onto the display, given what is stored in `stars`
#	$t0: pixel_address, $t1-$t2: color, $t4: stars struct, $t7: temp, $t8: index
stamp_stars:
	li   $t1, 0x00ffeb3b	# $t1 = star colour
	li   $t2, GLOW_AMT	# $t2 = glow amount

	# Determine darkening factor
	li   $t7, DARKNESS
	mul  $t7, $t7, $s0	# $t7 = DARKNESS * level
	
	# Alter colors based on darkening factor and glow amount
	sub  $t1, $t1, $t7
	add  $t2, $s5, $t2

	li   $t8, 0		# i = 0
	la   $t4, stars		# $t4 = addr(stars)
	
sss_loop: # while i <= NUM_STARS :
	beq  $t8, NUM_STARS, sss_exit	# if i==NUM_PLATFORMS, branch to `ss_exit`
	
	# Get values for this star
	sll  $t7, $t8, 3	# $t7 = 8 * i
	add  $t7, $t4, $t7	# $t7 = addr(stars) + 8*i
	lw   $t0, 4($t7)	# $t0 = star.position
	lw   $t7, 0($t7)	# $t7 = star.state
	
	beqz $t7, sss_update	# if star.state == 0, it is invisible; skip it

	# Stamp a sea star on the display
	addi $t0, $t0, WIDTH
	sw   $t2, -8($t0)
	sw   $t2, -4($t0)
	sw   $t2, 0($t0)
	sw   $t2, 4($t0)
	sw   $t2, 8($t0)
	addi $t0, $t0, -WIDTH
	sw   $t2, -8($t0)
	sw   $t1, -4($t0)
	sw   $t2, 0($t0)
	sw   $t1, 4($t0)
	sw   $t2, 8($t0)
	addi $t0, $t0, -WIDTH
	sw   $t2, -12($t0)
	sw   $t2, -8($t0)
	sw   $t1, -4($t0)
	sw   $t1, 0($t0)
	sw   $t1, 4($t0)
	sw   $t2, 8($t0)
	sw   $t2, 12($t0)
	addi $t0, $t0, -WIDTH
	sw   $t2, -12($t0)
	sw   $t1, -8($t0)
	sw   $t1, -4($t0)
	sw   $t1, 0($t0)
	sw   $t1, 4($t0)
	sw   $t1, 8($t0)
	sw   $t2, 12($t0)
	addi $t0, $t0, -WIDTH
	sw   $t2, -12($t0)
	sw   $t2, -8($t0)
	sw   $t2, -4($t0)
	sw   $t1, 0($t0)
	sw   $t2, 4($t0)
	sw   $t2, 8($t0)
	sw   $t2, 12($t0)
	addi $t0, $t0, -WIDTH
	sw   $t2, -4($t0)
	sw   $t2, 0($t0)
	sw   $t2, 4($t0)

sss_update:
	# Update index
	addi $t8, $t8, 1	# i = i + 1
	j    sss_loop		# Restart loop

sss_exit:
	# Return to caller			
	jr   $ra
# ---------------------------------------------------------------------------------------


# display_score($a0 = *position):
#	Displays the 5-digit score at the position $a0
#	$t0: temp, $t1-$t4: modulos of the score, $t5: *position
display_score:
	# Store $ra on stack
	addi $sp, $sp, -4
	sw   $ra, 0($sp)
	
	# Calculate the digits to print
	li   $t0, 10
	div  $s3, $t0
	mfhi $t1	# $t1 = $s3 % 10
	li   $t0, 100
	div  $s3, $t0
	mfhi $t2	# $t2 = $s3 % 100
	li   $t0, 1000
	div  $s3, $t0
	mfhi $t3	# $t3 = $s3 % 1000
	li   $t0, 10000
	div  $s3, $t0
	mfhi $t4	# $t4 = $s3 % 10000
	
	move $t5, $a0

	# First Digit
	sub  $a1, $s3, $t4	
	div  $a1, $a1, 10000	# $a1 = 1st digit of score
	move $a0, $t5		# $a0 = position of 1st digit
	jal  _display_number
	
	# Second Digit
	sub  $a1, $t4, $t3	
	div  $a1, $a1, 1000	# $a1 = 2nd digit of score
	add  $a0, $t5, 16	# $a0 = position of 2nd digit
	jal  _display_number
	
	# Third Digit
	sub  $a1, $t3, $t2	
	div  $a1, $a1, 100	# $a1 = 3rd digit of score
	add  $a0, $t5, 32	# $a0 = position of 3rd digit
	jal  _display_number
	
	# Fourth Digit
	sub  $a1, $t2, $t1	
	div  $a1, $a1, 10	# $a1 = 4th digit of score
	add  $a0, $t5, 48	# $a0 = position of 4th digit
	jal  _display_number
	
	# Fourth Digit	
	move $a1, $t1		# $a1 = 5th digit of score
	add  $a0, $t5, 64	# $a0 = position of 5th digit
	jal  _display_number
	
	# Restore $ra from stack
	lw   $ra, 0($sp)
	addi $sp, $sp, 4
	
	# Return to caller
	jr   $ra
# ---------------------------------------------------------------------------------------


# _display_number($a0=*position, $a1=number):
#	Displays the number in $a1 at the position $a0
#	Number must be in 0-9
#	Cannot overwrite $t1-$t5!
_display_number:
	# Set up color
	li   $t0, 0x00ffffff	# $t0 = white
	
	# Branch to appropriate digit
	beq  $a1, 1, _display_1
	beq  $a1, 2, _display_2
	beq  $a1, 3, _display_3
	beq  $a1, 4, _display_4
	beq  $a1, 5, _display_5
	beq  $a1, 6, _display_6
	beq  $a1, 7, _display_7
	beq  $a1, 8, _display_8
	beq  $a1, 9, _display_9
	
	# Print a Zero
	sw   $t0, 0($a0)
	sw   $t0, 4($a0)
	sw   $t0, 8($a0)
	addi $a0, $a0, WIDTH
	sw   $t0, 0($a0)
	sw   $s5, 4($a0)
	sw   $t0, 8($a0)
	addi $a0, $a0, WIDTH
	sw   $t0, 0($a0)
	sw   $s5, 4($a0)
	sw   $t0, 8($a0)
	addi $a0, $a0, WIDTH
	sw   $t0, 0($a0)
	sw   $s5, 4($a0)
	sw   $t0, 8($a0)
	addi $a0, $a0, WIDTH
	sw   $t0, 0($a0)
	sw   $t0, 4($a0)
	sw   $t0, 8($a0)
	j    _display_done
	
_display_1: # Print a One
	sw   $s5, 0($a0)
	sw   $t0, 4($a0)
	sw   $s5, 8($a0)
	addi $a0, $a0, WIDTH
	sw   $t0, 0($a0)
	sw   $t0, 4($a0)
	sw   $s5, 8($a0)
	addi $a0, $a0, WIDTH
	sw   $s5, 0($a0)
	sw   $t0, 4($a0)
	sw   $s5, 8($a0)
	addi $a0, $a0, WIDTH
	sw   $s5, 0($a0)
	sw   $t0, 4($a0)
	sw   $s5, 8($a0)
	addi $a0, $a0, WIDTH
	sw   $t0, 0($a0)
	sw   $t0, 4($a0)
	sw   $t0, 8($a0)
	j    _display_done
	
_display_2: # Print a Two
	sw   $t0, 0($a0)
	sw   $t0, 4($a0)
	sw   $t0, 8($a0)
	addi $a0, $a0, WIDTH
	sw   $s5, 0($a0)
	sw   $s5, 4($a0)
	sw   $t0, 8($a0)
	addi $a0, $a0, WIDTH
	sw   $t0, 0($a0)
	sw   $t0, 4($a0)
	sw   $t0, 8($a0)
	addi $a0, $a0, WIDTH
	sw   $t0, 0($a0)
	sw   $s5, 4($a0)
	sw   $s5, 8($a0)
	addi $a0, $a0, WIDTH
	sw   $t0, 0($a0)
	sw   $t0, 4($a0)
	sw   $t0, 8($a0)
	j    _display_done
	
_display_3: # Print a Three
	sw   $t0, 0($a0)
	sw   $t0, 4($a0)
	sw   $t0, 8($a0)
	addi $a0, $a0, WIDTH
	sw   $s5, 0($a0)
	sw   $s5, 4($a0)
	sw   $t0, 8($a0)
	addi $a0, $a0, WIDTH
	sw   $s5, 0($a0)
	sw   $t0, 4($a0)
	sw   $t0, 8($a0)
	addi $a0, $a0, WIDTH
	sw   $s5, 0($a0)
	sw   $s5, 4($a0)
	sw   $t0, 8($a0)
	addi $a0, $a0, WIDTH
	sw   $t0, 0($a0)
	sw   $t0, 4($a0)
	sw   $t0, 8($a0)
	j    _display_done
	
_display_4: # Print a Four
	sw   $t0, 0($a0)
	sw   $s5, 4($a0)
	sw   $t0, 8($a0)
	addi $a0, $a0, WIDTH
	sw   $t0, 0($a0)
	sw   $s5, 4($a0)
	sw   $t0, 8($a0)
	addi $a0, $a0, WIDTH
	sw   $t0, 0($a0)
	sw   $t0, 4($a0)
	sw   $t0, 8($a0)
	addi $a0, $a0, WIDTH
	sw   $s5, 0($a0)
	sw   $s5, 4($a0)
	sw   $t0, 8($a0)
	addi $a0, $a0, WIDTH
	sw   $s5, 0($a0)
	sw   $s5, 4($a0)
	sw   $t0, 8($a0)
	j    _display_done
	
_display_5: # Print a Five
	sw   $t0, 0($a0)
	sw   $t0, 4($a0)
	sw   $t0, 8($a0)
	addi $a0, $a0, WIDTH
	sw   $t0, 0($a0)
	sw   $s5, 4($a0)
	sw   $s5, 8($a0)
	addi $a0, $a0, WIDTH
	sw   $t0, 0($a0)
	sw   $t0, 4($a0)
	sw   $t0, 8($a0)
	addi $a0, $a0, WIDTH
	sw   $s5, 0($a0)
	sw   $s5, 4($a0)
	sw   $t0, 8($a0)
	addi $a0, $a0, WIDTH
	sw   $t0, 0($a0)
	sw   $t0, 4($a0)
	sw   $t0, 8($a0)
	j    _display_done
	
_display_6: # Print a Six
	sw   $s5, 0($a0)
	sw   $t0, 4($a0)
	sw   $t0, 8($a0)
	addi $a0, $a0, WIDTH
	sw   $t0, 0($a0)
	sw   $s5, 4($a0)
	sw   $s5, 8($a0)
	addi $a0, $a0, WIDTH
	sw   $t0, 0($a0)
	sw   $t0, 4($a0)
	sw   $t0, 8($a0)
	addi $a0, $a0, WIDTH
	sw   $t0, 0($a0)
	sw   $s5, 4($a0)
	sw   $t0, 8($a0)
	addi $a0, $a0, WIDTH
	sw   $t0, 0($a0)
	sw   $t0, 4($a0)
	sw   $t0, 8($a0)
	j    _display_done
	
_display_7: # Print a Seven
	sw   $t0, 0($a0)
	sw   $t0, 4($a0)
	sw   $t0, 8($a0)
	addi $a0, $a0, WIDTH
	sw   $t0, 0($a0)
	sw   $s5, 4($a0)
	sw   $t0, 8($a0)
	addi $a0, $a0, WIDTH
	sw   $s5, 0($a0)
	sw   $s5, 4($a0)
	sw   $t0, 8($a0)
	addi $a0, $a0, WIDTH
	sw   $s5, 0($a0)
	sw   $s5, 4($a0)
	sw   $t0, 8($a0)
	addi $a0, $a0, WIDTH
	sw   $s5, 0($a0)
	sw   $s5, 4($a0)
	sw   $t0, 8($a0)
	j    _display_done
	
_display_8: # Print an Eight
	sw   $t0, 0($a0)
	sw   $t0, 4($a0)
	sw   $t0, 8($a0)
	addi $a0, $a0, WIDTH
	sw   $t0, 0($a0)
	sw   $s5, 4($a0)
	sw   $t0, 8($a0)
	addi $a0, $a0, WIDTH
	sw   $t0, 0($a0)
	sw   $t0, 4($a0)
	sw   $t0, 8($a0)
	addi $a0, $a0, WIDTH
	sw   $t0, 0($a0)
	sw   $s5, 4($a0)
	sw   $t0, 8($a0)
	addi $a0, $a0, WIDTH
	sw   $t0, 0($a0)
	sw   $t0, 4($a0)
	sw   $t0, 8($a0)
	j    _display_done
	
_display_9: # Print a Nine
	sw   $t0, 0($a0)
	sw   $t0, 4($a0)
	sw   $t0, 8($a0)
	addi $a0, $a0, WIDTH
	sw   $t0, 0($a0)
	sw   $s5, 4($a0)
	sw   $t0, 8($a0)
	addi $a0, $a0, WIDTH
	sw   $t0, 0($a0)
	sw   $t0, 4($a0)
	sw   $t0, 8($a0)
	addi $a0, $a0, WIDTH
	sw   $s5, 0($a0)
	sw   $s5, 4($a0)
	sw   $t0, 8($a0)
	addi $a0, $a0, WIDTH
	sw   $t0, 0($a0)
	sw   $t0, 4($a0)
	sw   $s5, 8($a0)
	
_display_done:
	jr   $ra
# ---------------------------------------------------------------------------------------


# display_gameover():
#	Adds "GAME OVER" to the display.
#	Assumes crab.state == 3 (dead) and background is set to black
#	$t0: colour & temp
display_gameover:
	li   $t0, 0x00ffffff	# $t0 = white
	
	# "GAME"
	sw   $t0, 9792($gp)	# 1st Row
	sw   $t0, 9796($gp)
	sw   $t0, 9800($gp)
	sw   $t0, 9804($gp)
	sw   $t0, 9808($gp)
	sw   $t0, 9832($gp)
	sw   $t0, 9836($gp)
	sw   $t0, 9840($gp)
	sw   $t0, 9864($gp)
	sw   $t0, 9888($gp)
	sw   $t0, 9904($gp)
	sw   $t0, 9908($gp)
	sw   $t0, 9912($gp)
	sw   $t0, 9916($gp)
	sw   $t0, 9920($gp)
	sw   $t0, 9924($gp)
	sw   $t0, 9928($gp)
	sw   $t0, 9932($gp)
	sw   $t0, 10040($gp)	# 2nd Row
	sw   $t0, 10044($gp)
	sw   $t0, 10048($gp)
	sw   $t0, 10052($gp)
	sw   $t0, 10056($gp)
	sw   $t0, 10060($gp)
	sw   $t0, 10064($gp)
	sw   $t0, 10068($gp)
	sw   $t0, 10084($gp)
	sw   $t0, 10088($gp)
	sw   $t0, 10092($gp)
	sw   $t0, 10096($gp)
	sw   $t0, 10100($gp)
	sw   $t0, 10116($gp)
	sw   $t0, 10120($gp)
	sw   $t0, 10144($gp)
	sw   $t0, 10148($gp)
	sw   $t0, 10156($gp)
	sw   $t0, 10160($gp)
	sw   $t0, 10164($gp)
	sw   $t0, 10168($gp)
	sw   $t0, 10172($gp)
	sw   $t0, 10176($gp)
	sw   $t0, 10180($gp)
	sw   $t0, 10184($gp)
	sw   $t0, 10188($gp)
	sw   $t0, 10292($gp)	# 3rd Row
	sw   $t0, 10296($gp)
	sw   $t0, 10300($gp)
	sw   $t0, 10320($gp)
	sw   $t0, 10324($gp)
	sw   $t0, 10336($gp)
	sw   $t0, 10340($gp)
	sw   $t0, 10344($gp)
	sw   $t0, 10348($gp)
	sw   $t0, 10352($gp)
	sw   $t0, 10356($gp)
	sw   $t0, 10360($gp)
	sw   $t0, 10372($gp)
	sw   $t0, 10376($gp)
	sw   $t0, 10380($gp)
	sw   $t0, 10396($gp)
	sw   $t0, 10400($gp)
	sw   $t0, 10404($gp)
	sw   $t0, 10412($gp)
	sw   $t0, 10416($gp)
	sw   $t0, 10444($gp)
	sw   $t0, 10548($gp)	# 4th Row
	sw   $t0, 10552($gp)
	sw   $t0, 10592($gp)
	sw   $t0, 10596($gp)
	sw   $t0, 10600($gp)
	sw   $t0, 10604($gp)
	sw   $t0, 10608($gp)
	sw   $t0, 10612($gp)
	sw   $t0, 10616($gp)
	sw   $t0, 10628($gp)
	sw   $t0, 10632($gp)
	sw   $t0, 10636($gp)
	sw   $t0, 10652($gp)
	sw   $t0, 10656($gp)
	sw   $t0, 10660($gp)
	sw   $t0, 10668($gp)
	sw   $t0, 10672($gp)
	sw   $t0, 10804($gp)	# 5th Row
	sw   $t0, 10808($gp)
	sw   $t0, 10824($gp)
	sw   $t0, 10828($gp)
	sw   $t0, 10832($gp)
	sw   $t0, 10836($gp)
	sw   $t0, 10844($gp)
	sw   $t0, 10848($gp)
	sw   $t0, 10852($gp)
	sw   $t0, 10868($gp)
	sw   $t0, 10872($gp)
	sw   $t0, 10876($gp)
	sw   $t0, 10884($gp)
	sw   $t0, 10888($gp)
	sw   $t0, 10892($gp)
	sw   $t0, 10896($gp)
	sw   $t0, 10904($gp)
	sw   $t0, 10908($gp)
	sw   $t0, 10912($gp)
	sw   $t0, 10916($gp)
	sw   $t0, 10924($gp)
	sw   $t0, 10928($gp)
	sw   $t0, 10932($gp)
	sw   $t0, 10936($gp)
	sw   $t0, 10940($gp)
	sw   $t0, 10944($gp)
	sw   $t0, 11060($gp)	# 6th Row
	sw   $t0, 11064($gp)
	sw   $t0, 11080($gp)
	sw   $t0, 11084($gp)
	sw   $t0, 11088($gp)
	sw   $t0, 11092($gp)
	sw   $t0, 11100($gp)
	sw   $t0, 11104($gp)
	sw   $t0, 11128($gp)
	sw   $t0, 11132($gp)
	sw   $t0, 11140($gp)
	sw   $t0, 11144($gp)
	sw   $t0, 11148($gp)
	sw   $t0, 11152($gp)
	sw   $t0, 11160($gp)
	sw   $t0, 11164($gp)
	sw   $t0, 11168($gp)
	sw   $t0, 11172($gp)
	sw   $t0, 11180($gp)
	sw   $t0, 11184($gp)
	sw   $t0, 11316($gp)	# 7th Row
	sw   $t0, 11320($gp)
	sw   $t0, 11324($gp)
	sw   $t0, 11344($gp)
	sw   $t0, 11348($gp)
	sw   $t0, 11356($gp)
	sw   $t0, 11360($gp)
	sw   $t0, 11384($gp)
	sw   $t0, 11388($gp)
	sw   $t0, 11396($gp)
	sw   $t0, 11400($gp)
	sw   $t0, 11404($gp)
	sw   $t0, 11408($gp)
	sw   $t0, 11412($gp)
	sw   $t0, 11416($gp)
	sw   $t0, 11420($gp)
	sw   $t0, 11424($gp)
	sw   $t0, 11428($gp)
	sw   $t0, 11436($gp)
	sw   $t0, 11440($gp)
	sw   $t0, 11468($gp)
	sw   $t0, 11572($gp)	# 8th Row
	sw   $t0, 11576($gp)
	sw   $t0, 11580($gp)
	sw   $t0, 11584($gp)
	sw   $t0, 11588($gp)
	sw   $t0, 11592($gp)
	sw   $t0, 11596($gp)
	sw   $t0, 11600($gp)
	sw   $t0, 11604($gp)
	sw   $t0, 11612($gp)
	sw   $t0, 11616($gp)
	sw   $t0, 11620($gp)
	sw   $t0, 11624($gp)
	sw   $t0, 11628($gp)
	sw   $t0, 11632($gp)
	sw   $t0, 11636($gp)
	sw   $t0, 11640($gp)
	sw   $t0, 11644($gp)
	sw   $t0, 11652($gp)
	sw   $t0, 11656($gp)
	sw   $t0, 11660($gp)
	sw   $t0, 11664($gp)
	sw   $t0, 11668($gp)
	sw   $t0, 11672($gp)
	sw   $t0, 11676($gp)
	sw   $t0, 11680($gp)
	sw   $t0, 11684($gp)
	sw   $t0, 11692($gp)
	sw   $t0, 11696($gp)
	sw   $t0, 11700($gp)
	sw   $t0, 11704($gp)
	sw   $t0, 11708($gp)
	sw   $t0, 11712($gp)
	sw   $t0, 11716($gp)
	sw   $t0, 11720($gp)
	sw   $t0, 11724($gp)
	sw   $t0, 11828($gp)	# 9th Row
	sw   $t0, 11832($gp)
	sw   $t0, 11836($gp)
	sw   $t0, 11840($gp)
	sw   $t0, 11844($gp)
	sw   $t0, 11848($gp)
	sw   $t0, 11852($gp)
	sw   $t0, 11856($gp)
	sw   $t0, 11860($gp)
	sw   $t0, 11868($gp)
	sw   $t0, 11872($gp)
	sw   $t0, 11876($gp)
	sw   $t0, 11880($gp)
	sw   $t0, 11884($gp)
	sw   $t0, 11888($gp)
	sw   $t0, 11892($gp)
	sw   $t0, 11896($gp)
	sw   $t0, 11900($gp)
	sw   $t0, 11908($gp)
	sw   $t0, 11912($gp)
	sw   $t0, 11920($gp)
	sw   $t0, 11924($gp)
	sw   $t0, 11928($gp)
	sw   $t0, 11936($gp)
	sw   $t0, 11940($gp)
	sw   $t0, 11948($gp)
	sw   $t0, 11952($gp)
	sw   $t0, 11956($gp)
	sw   $t0, 11960($gp)
	sw   $t0, 11964($gp)
	sw   $t0, 11968($gp)
	sw   $t0, 11972($gp)
	sw   $t0, 11976($gp)
	sw   $t0, 11980($gp)
	sw   $t0, 12084($gp)	# 10th Row
	sw   $t0, 12088($gp)
	sw   $t0, 12092($gp)
	sw   $t0, 12096($gp)
	sw   $t0, 12100($gp)
	sw   $t0, 12104($gp)
	sw   $t0, 12108($gp)
	sw   $t0, 12112($gp)
	sw   $t0, 12116($gp)
	sw   $t0, 12124($gp)
	sw   $t0, 12128($gp)
	sw   $t0, 12152($gp)
	sw   $t0, 12156($gp)
	sw   $t0, 12164($gp)
	sw   $t0, 12168($gp)
	sw   $t0, 12180($gp)
	sw   $t0, 12192($gp)
	sw   $t0, 12196($gp)
	sw   $t0, 12204($gp)
	sw   $t0, 12208($gp)
	sw   $t0, 12212($gp)
	sw   $t0, 12216($gp)
	sw   $t0, 12220($gp)
	sw   $t0, 12224($gp)
	sw   $t0, 12228($gp)
	sw   $t0, 12232($gp)
	sw   $t0, 12236($gp)
	sw   $t0, 12344($gp)	# 11th Row
	sw   $t0, 12348($gp)
	sw   $t0, 12352($gp)
	sw   $t0, 12356($gp)
	sw   $t0, 12360($gp)
	sw   $t0, 12364($gp)
	sw   $t0, 12368($gp)
	sw   $t0, 12380($gp)
	sw   $t0, 12384($gp)
	sw   $t0, 12408($gp)
	sw   $t0, 12412($gp)
	sw   $t0, 12420($gp)
	sw   $t0, 12424($gp)
	sw   $t0, 12428($gp)
	sw   $t0, 12444($gp)
	sw   $t0, 12448($gp)
	sw   $t0, 12452($gp)
	sw   $t0, 12464($gp)
	sw   $t0, 12468($gp)
	sw   $t0, 12472($gp)
	sw   $t0, 12476($gp)
	sw   $t0, 12480($gp)
	sw   $t0, 12484($gp)
	sw   $t0, 12488($gp)

	# "OVER"
	sw   $t0, 13120($gp)	# 1st Row
	sw   $t0, 13124($gp)
	sw   $t0, 13128($gp)
	sw   $t0, 13148($gp)
	sw   $t0, 13152($gp)
	sw   $t0, 13176($gp)
	sw   $t0, 13180($gp)
	sw   $t0, 13192($gp)
	sw   $t0, 13196($gp)
	sw   $t0, 13200($gp)
	sw   $t0, 13204($gp)
	sw   $t0, 13208($gp)
	sw   $t0, 13212($gp)
	sw   $t0, 13216($gp)
	sw   $t0, 13220($gp)
	sw   $t0, 13232($gp)
	sw   $t0, 13236($gp)
	sw   $t0, 13240($gp)
	sw   $t0, 13244($gp)
	sw   $t0, 13248($gp)
	sw   $t0, 13368($gp)	# 2nd Row
	sw   $t0, 13372($gp)
	sw   $t0, 13376($gp)
	sw   $t0, 13380($gp)
	sw   $t0, 13384($gp)
	sw   $t0, 13388($gp)
	sw   $t0, 13392($gp)
	sw   $t0, 13404($gp)
	sw   $t0, 13408($gp)
	sw   $t0, 13432($gp)
	sw   $t0, 13436($gp)
	sw   $t0, 13444($gp)
	sw   $t0, 13448($gp)
	sw   $t0, 13452($gp)
	sw   $t0, 13456($gp)
	sw   $t0, 13460($gp)
	sw   $t0, 13464($gp)
	sw   $t0, 13468($gp)
	sw   $t0, 13472($gp)
	sw   $t0, 13476($gp)
	sw   $t0, 13484($gp)
	sw   $t0, 13488($gp)
	sw   $t0, 13492($gp)
	sw   $t0, 13496($gp)
	sw   $t0, 13500($gp)
	sw   $t0, 13504($gp)
	sw   $t0, 13508($gp)
	sw   $t0, 13512($gp)
	sw   $t0, 13620($gp)	# 3rd Row
	sw   $t0, 13624($gp)
	sw   $t0, 13628($gp)
	sw   $t0, 13644($gp)
	sw   $t0, 13648($gp)
	sw   $t0, 13652($gp)
	sw   $t0, 13660($gp)
	sw   $t0, 13664($gp)
	sw   $t0, 13688($gp)
	sw   $t0, 13692($gp)
	sw   $t0, 13700($gp)
	sw   $t0, 13704($gp)
	sw   $t0, 13732($gp)
	sw   $t0, 13740($gp)
	sw   $t0, 13744($gp)
	sw   $t0, 13764($gp)
	sw   $t0, 13768($gp)
	sw   $t0, 13772($gp)
	sw   $t0, 13876($gp)	# 4th Row
	sw   $t0, 13880($gp)
	sw   $t0, 13904($gp)
	sw   $t0, 13908($gp)
	sw   $t0, 13916($gp)
	sw   $t0, 13920($gp)
	sw   $t0, 13944($gp)
	sw   $t0, 13948($gp)
	sw   $t0, 13956($gp)
	sw   $t0, 13960($gp)
	sw   $t0, 13996($gp)
	sw   $t0, 14000($gp)
	sw   $t0, 14024($gp)
	sw   $t0, 14028($gp)
	sw   $t0, 14132($gp)	# 5th Row
	sw   $t0, 14136($gp)
	sw   $t0, 14160($gp)
	sw   $t0, 14164($gp)
	sw   $t0, 14172($gp)
	sw   $t0, 14176($gp)
	sw   $t0, 14180($gp)
	sw   $t0, 14196($gp)
	sw   $t0, 14200($gp)
	sw   $t0, 14204($gp)
	sw   $t0, 14212($gp)
	sw   $t0, 14216($gp)
	sw   $t0, 14220($gp)
	sw   $t0, 14224($gp)
	sw   $t0, 14228($gp)
	sw   $t0, 14232($gp)
	sw   $t0, 14252($gp)
	sw   $t0, 14256($gp)
	sw   $t0, 14280($gp)
	sw   $t0, 14284($gp)
	sw   $t0, 14388($gp)	# 6th Row
	sw   $t0, 14392($gp)
	sw   $t0, 14416($gp)
	sw   $t0, 14420($gp)
	sw   $t0, 14428($gp)
	sw   $t0, 14432($gp)
	sw   $t0, 14436($gp)
	sw   $t0, 14452($gp)
	sw   $t0, 14456($gp)
	sw   $t0, 14460($gp)
	sw   $t0, 14468($gp)
	sw   $t0, 14472($gp)
	sw   $t0, 14508($gp)
	sw   $t0, 14512($gp)
	sw   $t0, 14532($gp)
	sw   $t0, 14536($gp)
	sw   $t0, 14540($gp)
	sw   $t0, 14644($gp)	# 7th Row
	sw   $t0, 14648($gp)
	sw   $t0, 14652($gp)
	sw   $t0, 14668($gp)
	sw   $t0, 14672($gp)
	sw   $t0, 14676($gp)
	sw   $t0, 14684($gp)
	sw   $t0, 14688($gp)
	sw   $t0, 14692($gp)
	sw   $t0, 14696($gp)
	sw   $t0, 14704($gp)
	sw   $t0, 14708($gp)
	sw   $t0, 14712($gp)
	sw   $t0, 14716($gp)
	sw   $t0, 14724($gp)
	sw   $t0, 14728($gp)
	sw   $t0, 14756($gp)
	sw   $t0, 14764($gp)
	sw   $t0, 14768($gp)
	sw   $t0, 14772($gp)
	sw   $t0, 14776($gp)
	sw   $t0, 14780($gp)
	sw   $t0, 14784($gp)
	sw   $t0, 14788($gp)
	sw   $t0, 14792($gp)
	sw   $t0, 14796($gp)
	sw   $t0, 14900($gp)	# 8th Row
	sw   $t0, 14904($gp)
	sw   $t0, 14908($gp)
	sw   $t0, 14912($gp)
	sw   $t0, 14916($gp)
	sw   $t0, 14920($gp)
	sw   $t0, 14924($gp)
	sw   $t0, 14928($gp)
	sw   $t0, 14932($gp)
	sw   $t0, 14944($gp)
	sw   $t0, 14948($gp)
	sw   $t0, 14952($gp)
	sw   $t0, 14956($gp)
	sw   $t0, 14960($gp)
	sw   $t0, 14964($gp)
	sw   $t0, 14968($gp)
	sw   $t0, 14980($gp)
	sw   $t0, 14984($gp)
	sw   $t0, 14988($gp)
	sw   $t0, 14992($gp)
	sw   $t0, 14996($gp)
	sw   $t0, 15000($gp)
	sw   $t0, 15004($gp)
	sw   $t0, 15008($gp)
	sw   $t0, 15012($gp)
	sw   $t0, 15020($gp)
	sw   $t0, 15024($gp)
	sw   $t0, 15028($gp)
	sw   $t0, 15032($gp)
	sw   $t0, 15036($gp)
	sw   $t0, 15040($gp)
	sw   $t0, 15044($gp)
	sw   $t0, 15048($gp)
	sw   $t0, 15156($gp)	# 9th Row
	sw   $t0, 15160($gp)
	sw   $t0, 15164($gp)
	sw   $t0, 15168($gp)
	sw   $t0, 15172($gp)
	sw   $t0, 15176($gp)
	sw   $t0, 15180($gp)
	sw   $t0, 15184($gp)
	sw   $t0, 15188($gp)
	sw   $t0, 15200($gp)
	sw   $t0, 15204($gp)
	sw   $t0, 15208($gp)
	sw   $t0, 15212($gp)
	sw   $t0, 15216($gp)
	sw   $t0, 15220($gp)
	sw   $t0, 15224($gp)
	sw   $t0, 15236($gp)
	sw   $t0, 15240($gp)
	sw   $t0, 15244($gp)
	sw   $t0, 15248($gp)
	sw   $t0, 15252($gp)
	sw   $t0, 15256($gp)
	sw   $t0, 15260($gp)
	sw   $t0, 15264($gp)
	sw   $t0, 15268($gp)
	sw   $t0, 15276($gp)
	sw   $t0, 15280($gp)
	sw   $t0, 15284($gp)
	sw   $t0, 15288($gp)
	sw   $t0, 15292($gp)
	sw   $t0, 15296($gp)
	sw   $t0, 15300($gp)
	sw   $t0, 15412($gp)	# 10th Row
	sw   $t0, 15416($gp)
	sw   $t0, 15420($gp)
	sw   $t0, 15424($gp)
	sw   $t0, 15428($gp)
	sw   $t0, 15432($gp)
	sw   $t0, 15436($gp)
	sw   $t0, 15440($gp)
	sw   $t0, 15444($gp)
	sw   $t0, 15460($gp)
	sw   $t0, 15464($gp)
	sw   $t0, 15468($gp)
	sw   $t0, 15472($gp)
	sw   $t0, 15476($gp)
	sw   $t0, 15492($gp)
	sw   $t0, 15496($gp)
	sw   $t0, 15500($gp)
	sw   $t0, 15504($gp)
	sw   $t0, 15508($gp)
	sw   $t0, 15512($gp)
	sw   $t0, 15516($gp)
	sw   $t0, 15520($gp)
	sw   $t0, 15524($gp)
	sw   $t0, 15532($gp)
	sw   $t0, 15536($gp)
	sw   $t0, 15548($gp)
	sw   $t0, 15552($gp)
	sw   $t0, 15556($gp)
	sw   $t0, 15560($gp)
	sw   $t0, 15672($gp)	# 11th Row
	sw   $t0, 15676($gp)
	sw   $t0, 15680($gp)
	sw   $t0, 15684($gp)
	sw   $t0, 15688($gp)
	sw   $t0, 15692($gp)
	sw   $t0, 15696($gp)
	sw   $t0, 15724($gp)
	sw   $t0, 15752($gp)
	sw   $t0, 15756($gp)
	sw   $t0, 15760($gp)
	sw   $t0, 15764($gp)
	sw   $t0, 15768($gp)
	sw   $t0, 15772($gp)
	sw   $t0, 15776($gp)
	sw   $t0, 15788($gp)
	sw   $t0, 15792($gp)
	sw   $t0, 15808($gp)
	sw   $t0, 15812($gp)
	sw   $t0, 15816($gp)
	sw   $t0, 15820($gp)

	# "Score:"
	sw   $t0, 16940($gp)	# 1st Row
	sw   $t0, 16944($gp)
	sw   $t0, 16948($gp)
	sw   $t0, 16960($gp)
	sw   $t0, 16964($gp)
	sw   $t0, 16972($gp)
	sw   $t0, 16976($gp)
	sw   $t0, 16980($gp)
	sw   $t0, 16988($gp)
	sw   $t0, 16992($gp)
	sw   $t0, 16996($gp)
	sw   $t0, 17004($gp)
	sw   $t0, 17008($gp)
	sw   $t0, 17012($gp)
	sw   $t0, 17196($gp)	# 2nd Row
	sw   $t0, 17212($gp)
	sw   $t0, 17228($gp)
	sw   $t0, 17236($gp)
	sw   $t0, 17244($gp)
	sw   $t0, 17252($gp)
	sw   $t0, 17260($gp)
	sw   $t0, 17276($gp)
	sw   $t0, 17452($gp)	# 3rd Row
	sw   $t0, 17456($gp)
	sw   $t0, 17460($gp)
	sw   $t0, 17468($gp)
	sw   $t0, 17484($gp)
	sw   $t0, 17492($gp)
	sw   $t0, 17500($gp)
	sw   $t0, 17504($gp)
	sw   $t0, 17516($gp)
	sw   $t0, 17520($gp)
	sw   $t0, 17716($gp)	# 4th Row
	sw   $t0, 17724($gp)
	sw   $t0, 17740($gp)
	sw   $t0, 17748($gp)
	sw   $t0, 17756($gp)
	sw   $t0, 17764($gp)
	sw   $t0, 17772($gp)
	sw   $t0, 17788($gp)
	sw   $t0, 17964($gp)	# 5th Row
	sw   $t0, 17968($gp)
	sw   $t0, 17972($gp)
	sw   $t0, 17984($gp)
	sw   $t0, 17988($gp)
	sw   $t0, 17996($gp)
	sw   $t0, 18000($gp)
	sw   $t0, 18004($gp)
	sw   $t0, 18012($gp)
	sw   $t0, 18020($gp)
	sw   $t0, 18028($gp)
	sw   $t0, 18032($gp)
	sw   $t0, 18036($gp)

	# "Press [P]"
	sw   $t0, 22172($gp)	# 1st Row
	sw   $t0, 22176($gp)
	sw   $t0, 22180($gp)
	sw   $t0, 22184($gp)
	sw   $t0, 22188($gp)
	sw   $t0, 22192($gp)
	sw   $t0, 22196($gp)
	sw   $t0, 22200($gp)
	sw   $t0, 22204($gp)
	sw   $t0, 22428($gp)	# 2nd Row
	sw   $t0, 22460($gp)
	sw   $t0, 22596($gp)	# 3rd Row
	sw   $t0, 22600($gp)
	sw   $t0, 22604($gp)
	sw   $t0, 22612($gp)
	sw   $t0, 22616($gp)
	sw   $t0, 22620($gp)
	sw   $t0, 22628($gp)
	sw   $t0, 22632($gp)
	sw   $t0, 22636($gp)
	sw   $t0, 22644($gp)
	sw   $t0, 22648($gp)
	sw   $t0, 22652($gp)
	sw   $t0, 22660($gp)
	sw   $t0, 22664($gp)
	sw   $t0, 22668($gp)
	sw   $t0, 22684($gp)
	sw   $t0, 22696($gp)
	sw   $t0, 22700($gp)
	sw   $t0, 22704($gp)
	sw   $t0, 22716($gp)
	sw   $t0, 22852($gp)	# 4th Row
	sw   $t0, 22860($gp)
	sw   $t0, 22868($gp)
	sw   $t0, 22876($gp)
	sw   $t0, 22884($gp)
	sw   $t0, 22900($gp)
	sw   $t0, 22916($gp)
	sw   $t0, 22940($gp)
	sw   $t0, 22952($gp)
	sw   $t0, 22960($gp)
	sw   $t0, 22972($gp)
	sw   $t0, 23108($gp)	# 5th Row
	sw   $t0, 23112($gp)
	sw   $t0, 23116($gp)
	sw   $t0, 23124($gp)
	sw   $t0, 23128($gp)
	sw   $t0, 23140($gp)
	sw   $t0, 23144($gp)
	sw   $t0, 23156($gp)
	sw   $t0, 23160($gp)
	sw   $t0, 23164($gp)
	sw   $t0, 23172($gp)
	sw   $t0, 23176($gp)
	sw   $t0, 23180($gp)
	sw   $t0, 23196($gp)
	sw   $t0, 23208($gp)
	sw   $t0, 23212($gp)
	sw   $t0, 23216($gp)
	sw   $t0, 23228($gp)
	sw   $t0, 23364($gp)	# 6th Row
	sw   $t0, 23380($gp)
	sw   $t0, 23388($gp)
	sw   $t0, 23396($gp)
	sw   $t0, 23420($gp)
	sw   $t0, 23436($gp)
	sw   $t0, 23452($gp)
	sw   $t0, 23464($gp)
	sw   $t0, 23484($gp)
	sw   $t0, 23620($gp)	# 7th Row
	sw   $t0, 23636($gp)
	sw   $t0, 23644($gp)
	sw   $t0, 23652($gp)
	sw   $t0, 23656($gp)
	sw   $t0, 23660($gp)
	sw   $t0, 23668($gp)
	sw   $t0, 23672($gp)
	sw   $t0, 23676($gp)
	sw   $t0, 23684($gp)
	sw   $t0, 23688($gp)
	sw   $t0, 23692($gp)
	sw   $t0, 23708($gp)
	sw   $t0, 23720($gp)
	sw   $t0, 23740($gp)
	sw   $t0, 23964($gp)	# 8th Row
	sw   $t0, 23996($gp)
	sw   $t0, 24220($gp)	# 9th Row
	sw   $t0, 24224($gp)
	sw   $t0, 24228($gp)
	sw   $t0, 24232($gp)
	sw   $t0, 24236($gp)
	sw   $t0, 24240($gp)
	sw   $t0, 24244($gp)
	sw   $t0, 24248($gp)
	sw   $t0, 24252($gp)
	sw   $t0, 24476($gp)	# 10th Row
	sw   $t0, 24480($gp)
	sw   $t0, 24484($gp)
	sw   $t0, 24488($gp)
	sw   $t0, 24492($gp)
	sw   $t0, 24496($gp)
	sw   $t0, 24500($gp)
	sw   $t0, 24504($gp)
	sw   $t0, 24508($gp)

	# Add Crab and Score:
	addi $sp, $sp, -4
	sw   $ra, 0($sp)	# Save return address on stack

	addi $a0, $gp, 17036	# $a0 = position for score
	jal  display_score
	addi $t0, $gp, 20864
	sw   $t0, 0($s1)	# crab.position = $gp + 20864
	jal  stamp_crab
	
	lw   $ra, 0($sp)	# Restore return address
	addi $sp, $sp, 4

	# Return to caller
	jr   $ra
# ---------------------------------------------------------------------------------------


# stamp_fireworks()
#	Adds fireworks to the display, with color altered by time in $s6
stamp_fireworks:
	# Left firework
	li   $t0, 0x0099ff66	# $t0 = Base color 1
	mul  $t1, $s6, 0x00050510
	sub  $t0, $t0, $t1	# $t0 = Base color - $s6*0x00050510

	sw   $t0, 4360($gp)
	sw   $t0, 4648($gp)
	sw   $t0, 5128($gp)
	sw   $t0, 5400($gp)
	sw   $t0, 5416($gp)
	sw   $t0, 5640($gp)
	sw   $t0, 5684($gp)
	sw   $t0, 5704($gp)
	sw   $t0, 5900($gp)
	sw   $t0, 5912($gp)
	sw   $t0, 5924($gp)
	sw   $t0, 6156($gp)
	sw   $t0, 6180($gp)
	sw   $t0, 6192($gp)
	sw   $t0, 6208($gp)
	sw   $t0, 6400($gp)
	sw   $t0, 6412($gp)
	sw   $t0, 6432($gp)
	sw   $t0, 6476($gp)
	sw   $t0, 6668($gp)
	sw   $t0, 6688($gp)
	sw   $t0, 6712($gp)
	sw   $t0, 6924($gp)
	sw   $t0, 6940($gp)
	sw   $t0, 6964($gp)
	sw   $t0, 6980($gp)
	sw   $t0, 7216($gp)
	sw   $t0, 7468($gp)
	sw   $t0, 7504($gp)
	sw   $t0, 7516($gp)
	sw   $t0, 7520($gp)
	sw   $t0, 7688($gp)
	sw   $t0, 7708($gp)
	sw   $t0, 7720($gp)
	sw   $t0, 7748($gp)
	sw   $t0, 7752($gp)
	sw   $t0, 7780($gp)
	sw   $t0, 7996($gp)
	sw   $t0, 8000($gp)
	sw   $t0, 8208($gp)
	sw   $t0, 8248($gp)
	sw   $t0, 8272($gp)
	sw   $t0, 8452($gp)
	sw   $t0, 8464($gp)
	sw   $t0, 8480($gp)
	sw   $t0, 8500($gp)
	sw   $t0, 8520($gp)
	sw   $t0, 8712($gp)
	sw   $t0, 8732($gp)
	sw   $t0, 8976($gp)
	sw   $t0, 8980($gp)
	sw   $t0, 9004($gp)
	sw   $t0, 9232($gp)
	sw   $t0, 9236($gp)
	sw   $t0, 9284($gp)
	sw   $t0, 9288($gp)
	sw   $t0, 9296($gp)
	sw   $t0, 9308($gp)
	sw   $t0, 9480($gp)
	sw   $t0, 9500($gp)
	sw   $t0, 9524($gp)
	sw   $t0, 9528($gp)
	sw   $t0, 9532($gp)
	sw   $t0, 9536($gp)
	sw   $t0, 9732($gp)
	sw   $t0, 9748($gp)
	sw   $t0, 9760($gp)
	sw   $t0, 9828($gp)
	sw   $t0, 10004($gp)
	sw   $t0, 10060($gp)
	sw   $t0, 10068($gp)
	sw   $t0, 10248($gp)
	sw   $t0, 10288($gp)
	sw   $t0, 10292($gp)
	sw   $t0, 10344($gp)
	sw   $t0, 10524($gp)
	sw   $t0, 10552($gp)
	sw   $t0, 10556($gp)
	sw   $t0, 10560($gp)
	sw   $t0, 10600($gp)
	sw   $t0, 10792($gp)
	sw   $t0, 10820($gp)
	sw   $t0, 10824($gp)
	sw   $t0, 11052($gp)
	sw   $t0, 11088($gp)
	sw   $t0, 11272($gp)
	sw   $t0, 11288($gp)
	sw   $t0, 11312($gp)
	sw   $t0, 11328($gp)
	sw   $t0, 11528($gp)
	sw   $t0, 11544($gp)
	sw   $t0, 11572($gp)
	sw   $t0, 11608($gp)
	sw   $t0, 11784($gp)
	sw   $t0, 11804($gp)
	sw   $t0, 11816($gp)
	sw   $t0, 11832($gp)
	sw   $t0, 11844($gp)
	sw   $t0, 11868($gp)
	sw   $t0, 12040($gp)
	sw   $t0, 12060($gp)
	sw   $t0, 12088($gp)
	sw   $t0, 12124($gp)
	sw   $t0, 12292($gp)
	sw   $t0, 12304($gp)
	sw   $t0, 12320($gp)
	sw   $t0, 12332($gp)
	sw   $t0, 12348($gp)
	sw   $t0, 12364($gp)
	sw   $t0, 12380($gp)
	sw   $t0, 12548($gp)
	sw   $t0, 12576($gp)
	sw   $t0, 12604($gp)
	sw   $t0, 12816($gp)
	sw   $t0, 12832($gp)
	sw   $t0, 12860($gp)
	sw   $t0, 12892($gp)
	sw   $t0, 13056($gp)
	sw   $t0, 13104($gp)
	sw   $t0, 13116($gp)
	sw   $t0, 13312($gp)
	sw   $t0, 13328($gp)
	sw   $t0, 13344($gp)
	sw   $t0, 13568($gp)
	sw   $t0, 13824($gp)
	sw   $t0, 13884($gp)
	sw   $t0, 14080($gp)
	sw   $t0, 14112($gp)
	sw   $t0, 14880($gp)
	sw   $t0, 14908($gp)
	sw   $t0, 15104($gp)
	sw   $t0, 15136($gp)
	sw   $t0, 15360($gp)
	sw   $t0, 15616($gp)
	sw   $t0, 15872($gp)
	sw   $t0, 15904($gp)
	sw   $t0, 16896($gp)

	# Right Firework
	li   $t0, 0x00ff66ff	# $t0 = Base color 2
	mul  $t1, $s6, 0x00051015
	sub  $t0, $t0, $t1	# $t0 = Base color - $s6*0x00051015

	sw   $t0, 468($gp)
	sw   $t0, 756($gp)
	sw   $t0, 980($gp)
	sw   $t0, 1208($gp)
	sw   $t0, 1236($gp)
	sw   $t0, 1264($gp)
	sw   $t0, 1492($gp)
	sw   $t0, 1520($gp)
	sw   $t0, 1724($gp)
	sw   $t0, 1752($gp)
	sw   $t0, 1772($gp)
	sw   $t0, 1980($gp)
	sw   $t0, 2008($gp)
	sw   $t0, 2028($gp)
	sw   $t0, 2240($gp)
	sw   $t0, 2300($gp)
	sw   $t0, 2500($gp)
	sw   $t0, 2528($gp)
	sw   $t0, 2556($gp)
	sw   $t0, 2724($gp)
	sw   $t0, 2772($gp)
	sw   $t0, 2796($gp)
	sw   $t0, 2808($gp)
	sw   $t0, 2988($gp)
	sw   $t0, 2992($gp)
	sw   $t0, 3252($gp)
	sw   $t0, 3256($gp)
	sw   $t0, 3260($gp)
	sw   $t0, 3272($gp)
	sw   $t0, 3316($gp)
	sw   $t0, 3564($gp)
	sw   $t0, 3792($gp)
	sw   $t0, 3796($gp)
	sw   $t0, 3820($gp)
	sw   $t0, 4036($gp)
	sw   $t0, 4056($gp)
	sw   $t0, 4072($gp)
	sw   $t0, 4276($gp)
	sw   $t0, 4280($gp)
	sw   $t0, 4348($gp)
	sw   $t0, 4512($gp)
	sw   $t0, 4520($gp)
	sw   $t0, 4524($gp)
	sw   $t0, 4528($gp)
	sw   $t0, 4576($gp)
	sw   $t0, 4580($gp)
	sw   $t0, 4596($gp)
	sw   $t0, 4820($gp)
	sw   $t0, 4824($gp)
	sw   $t0, 4832($gp)
	sw   $t0, 4836($gp)
	sw   $t0, 4844($gp)
	sw   $t0, 4848($gp)
	sw   $t0, 5060($gp)
	sw   $t0, 5072($gp)
	sw   $t0, 5344($gp)
	sw   $t0, 5372($gp)
	sw   $t0, 5564($gp)
	sw   $t0, 5604($gp)
	sw   $t0, 5812($gp)
	sw   $t0, 5816($gp)
	sw   $t0, 5836($gp)
	sw   $t0, 5860($gp)
	sw   $t0, 6060($gp)
	sw   $t0, 6064($gp)
	sw   $t0, 6132($gp)
	sw   $t0, 6308($gp)
	sw   $t0, 6344($gp)
	sw   $t0, 6356($gp)
	sw   $t0, 6596($gp)
	sw   $t0, 6624($gp)
	sw   $t0, 6636($gp)
	sw   $t0, 6848($gp)
	sw   $t0, 6904($gp)
	sw   $t0, 7100($gp)
	sw   $t0, 7124($gp)
	sw   $t0, 7144($gp)
	sw   $t0, 7160($gp)
	sw   $t0, 7352($gp)
	sw   $t0, 7380($gp)
	sw   $t0, 7400($gp)
	sw   $t0, 7420($gp)
	sw   $t0, 7604($gp)
	sw   $t0, 7632($gp)
	sw   $t0, 7656($gp)
	sw   $t0, 7888($gp)
	sw   $t0, 7912($gp)
	sw   $t0, 8144($gp)
	sw   $t0, 8172($gp)
	sw   $t0, 8396($gp)
	sw   $t0, 8684($gp)
	sw   $t0, 8908($gp)

	jr   $ra
# ---------------------------------------------------------------------------------------


# display_you_win()
#	Paints "YOU WIN" and "SCORE:" onto display
#	$t0: colours
display_you_win:
	li   $t0, 0x00ffffff
	sw   $t0, 808($gp)
	sw   $t0, 812($gp)
	sw   $t0, 816($gp)
	sw   $t0, 828($gp)
	sw   $t0, 832($gp)
	sw   $t0, 840($gp)
	sw   $t0, 844($gp)
	sw   $t0, 848($gp)
	sw   $t0, 856($gp)
	sw   $t0, 860($gp)
	sw   $t0, 872($gp)
	sw   $t0, 876($gp)
	sw   $t0, 880($gp)
	sw   $t0, 1064($gp)
	sw   $t0, 1080($gp)
	sw   $t0, 1096($gp)
	sw   $t0, 1104($gp)
	sw   $t0, 1112($gp)
	sw   $t0, 1120($gp)
	sw   $t0, 1128($gp)
	sw   $t0, 1144($gp)
	sw   $t0, 1320($gp)
	sw   $t0, 1324($gp)
	sw   $t0, 1328($gp)
	sw   $t0, 1336($gp)
	sw   $t0, 1352($gp)
	sw   $t0, 1360($gp)
	sw   $t0, 1368($gp)
	sw   $t0, 1372($gp)
	sw   $t0, 1384($gp)
	sw   $t0, 1388($gp)
	sw   $t0, 1584($gp)
	sw   $t0, 1592($gp)
	sw   $t0, 1608($gp)
	sw   $t0, 1616($gp)
	sw   $t0, 1624($gp)
	sw   $t0, 1632($gp)
	sw   $t0, 1640($gp)
	sw   $t0, 1656($gp)
	sw   $t0, 1832($gp)
	sw   $t0, 1836($gp)
	sw   $t0, 1840($gp)
	sw   $t0, 1852($gp)
	sw   $t0, 1856($gp)
	sw   $t0, 1864($gp)
	sw   $t0, 1868($gp)
	sw   $t0, 1872($gp)
	sw   $t0, 1880($gp)
	sw   $t0, 1888($gp)
	sw   $t0, 1896($gp)
	sw   $t0, 1900($gp)
	sw   $t0, 1904($gp)
	sw   $t0, 6208($gp)
	sw   $t0, 6212($gp)
	sw   $t0, 6216($gp)
	sw   $t0, 6220($gp)
	sw   $t0, 6224($gp)
	sw   $t0, 6228($gp)
	sw   $t0, 6232($gp)
	sw   $t0, 6236($gp)
	sw   $t0, 6240($gp)
	sw   $t0, 6244($gp)
	sw   $t0, 6248($gp)
	sw   $t0, 6252($gp)
	sw   $t0, 6256($gp)
	sw   $t0, 6260($gp)
	sw   $t0, 6264($gp)
	sw   $t0, 6268($gp)
	sw   $t0, 6272($gp)
	sw   $t0, 6276($gp)
	sw   $t0, 6280($gp)
	sw   $t0, 6284($gp)
	sw   $t0, 6288($gp)
	sw   $t0, 6292($gp)
	sw   $t0, 6296($gp)
	sw   $t0, 6300($gp)
	sw   $t0, 6304($gp)
	sw   $t0, 6308($gp)
	sw   $t0, 6312($gp)
	sw   $t0, 6316($gp)
	sw   $t0, 6320($gp)
	sw   $t0, 6324($gp)
	sw   $t0, 6328($gp)
	sw   $t0, 6980($gp)
	sw   $t0, 6984($gp)
	sw   $t0, 7008($gp)
	sw   $t0, 7012($gp)
	sw   $t0, 7032($gp)
	sw   $t0, 7036($gp)
	sw   $t0, 7040($gp)
	sw   $t0, 7060($gp)
	sw   $t0, 7064($gp)
	sw   $t0, 7088($gp)
	sw   $t0, 7092($gp)
	sw   $t0, 7236($gp)
	sw   $t0, 7240($gp)
	sw   $t0, 7264($gp)
	sw   $t0, 7268($gp)
	sw   $t0, 7280($gp)
	sw   $t0, 7284($gp)
	sw   $t0, 7288($gp)
	sw   $t0, 7292($gp)
	sw   $t0, 7296($gp)
	sw   $t0, 7300($gp)
	sw   $t0, 7304($gp)
	sw   $t0, 7316($gp)
	sw   $t0, 7320($gp)
	sw   $t0, 7344($gp)
	sw   $t0, 7348($gp)
	sw   $t0, 7492($gp)
	sw   $t0, 7496($gp)
	sw   $t0, 7520($gp)
	sw   $t0, 7524($gp)
	sw   $t0, 7532($gp)
	sw   $t0, 7536($gp)
	sw   $t0, 7540($gp)
	sw   $t0, 7556($gp)
	sw   $t0, 7560($gp)
	sw   $t0, 7564($gp)
	sw   $t0, 7572($gp)
	sw   $t0, 7576($gp)
	sw   $t0, 7600($gp)
	sw   $t0, 7604($gp)
	sw   $t0, 7748($gp)
	sw   $t0, 7752($gp)
	sw   $t0, 7776($gp)
	sw   $t0, 7780($gp)
	sw   $t0, 7788($gp)
	sw   $t0, 7792($gp)
	sw   $t0, 7816($gp)
	sw   $t0, 7820($gp)
	sw   $t0, 7828($gp)
	sw   $t0, 7832($gp)
	sw   $t0, 7856($gp)
	sw   $t0, 7860($gp)
	sw   $t0, 8004($gp)
	sw   $t0, 8008($gp)
	sw   $t0, 8032($gp)
	sw   $t0, 8036($gp)
	sw   $t0, 8044($gp)
	sw   $t0, 8048($gp)
	sw   $t0, 8072($gp)
	sw   $t0, 8076($gp)
	sw   $t0, 8084($gp)
	sw   $t0, 8088($gp)
	sw   $t0, 8112($gp)
	sw   $t0, 8116($gp)
	sw   $t0, 8260($gp)
	sw   $t0, 8264($gp)
	sw   $t0, 8288($gp)
	sw   $t0, 8292($gp)
	sw   $t0, 8300($gp)
	sw   $t0, 8304($gp)
	sw   $t0, 8328($gp)
	sw   $t0, 8332($gp)
	sw   $t0, 8340($gp)
	sw   $t0, 8344($gp)
	sw   $t0, 8368($gp)
	sw   $t0, 8372($gp)
	sw   $t0, 8516($gp)
	sw   $t0, 8520($gp)
	sw   $t0, 8524($gp)
	sw   $t0, 8540($gp)
	sw   $t0, 8544($gp)
	sw   $t0, 8548($gp)
	sw   $t0, 8556($gp)
	sw   $t0, 8560($gp)
	sw   $t0, 8564($gp)
	sw   $t0, 8580($gp)
	sw   $t0, 8584($gp)
	sw   $t0, 8588($gp)
	sw   $t0, 8596($gp)
	sw   $t0, 8600($gp)
	sw   $t0, 8604($gp)
	sw   $t0, 8620($gp)
	sw   $t0, 8624($gp)
	sw   $t0, 8628($gp)
	sw   $t0, 8772($gp)
	sw   $t0, 8776($gp)
	sw   $t0, 8780($gp)
	sw   $t0, 8784($gp)
	sw   $t0, 8788($gp)
	sw   $t0, 8792($gp)
	sw   $t0, 8796($gp)
	sw   $t0, 8800($gp)
	sw   $t0, 8804($gp)
	sw   $t0, 8812($gp)
	sw   $t0, 8816($gp)
	sw   $t0, 8820($gp)
	sw   $t0, 8824($gp)
	sw   $t0, 8828($gp)
	sw   $t0, 8832($gp)
	sw   $t0, 8836($gp)
	sw   $t0, 8840($gp)
	sw   $t0, 8844($gp)
	sw   $t0, 8852($gp)
	sw   $t0, 8856($gp)
	sw   $t0, 8860($gp)
	sw   $t0, 8864($gp)
	sw   $t0, 8868($gp)
	sw   $t0, 8872($gp)
	sw   $t0, 8876($gp)
	sw   $t0, 8880($gp)
	sw   $t0, 8884($gp)
	sw   $t0, 9032($gp)
	sw   $t0, 9036($gp)
	sw   $t0, 9040($gp)
	sw   $t0, 9044($gp)
	sw   $t0, 9048($gp)
	sw   $t0, 9052($gp)
	sw   $t0, 9056($gp)
	sw   $t0, 9068($gp)
	sw   $t0, 9072($gp)
	sw   $t0, 9076($gp)
	sw   $t0, 9080($gp)
	sw   $t0, 9084($gp)
	sw   $t0, 9088($gp)
	sw   $t0, 9092($gp)
	sw   $t0, 9096($gp)
	sw   $t0, 9100($gp)
	sw   $t0, 9108($gp)
	sw   $t0, 9112($gp)
	sw   $t0, 9116($gp)
	sw   $t0, 9120($gp)
	sw   $t0, 9124($gp)
	sw   $t0, 9128($gp)
	sw   $t0, 9132($gp)
	sw   $t0, 9136($gp)
	sw   $t0, 9140($gp)
	sw   $t0, 9296($gp)
	sw   $t0, 9300($gp)
	sw   $t0, 9304($gp)
	sw   $t0, 9324($gp)
	sw   $t0, 9328($gp)
	sw   $t0, 9332($gp)
	sw   $t0, 9336($gp)
	sw   $t0, 9340($gp)
	sw   $t0, 9344($gp)
	sw   $t0, 9348($gp)
	sw   $t0, 9352($gp)
	sw   $t0, 9356($gp)
	sw   $t0, 9364($gp)
	sw   $t0, 9368($gp)
	sw   $t0, 9372($gp)
	sw   $t0, 9376($gp)
	sw   $t0, 9380($gp)
	sw   $t0, 9384($gp)
	sw   $t0, 9388($gp)
	sw   $t0, 9392($gp)
	sw   $t0, 9396($gp)
	sw   $t0, 9552($gp)
	sw   $t0, 9556($gp)
	sw   $t0, 9560($gp)
	sw   $t0, 9584($gp)
	sw   $t0, 9588($gp)
	sw   $t0, 9592($gp)
	sw   $t0, 9596($gp)
	sw   $t0, 9600($gp)
	sw   $t0, 9604($gp)
	sw   $t0, 9608($gp)
	sw   $t0, 9624($gp)
	sw   $t0, 9628($gp)
	sw   $t0, 9632($gp)
	sw   $t0, 9636($gp)
	sw   $t0, 9640($gp)
	sw   $t0, 9644($gp)
	sw   $t0, 9648($gp)
	sw   $t0, 10308($gp)
	sw   $t0, 10312($gp)
	sw   $t0, 10336($gp)
	sw   $t0, 10340($gp)
	sw   $t0, 10348($gp)
	sw   $t0, 10352($gp)
	sw   $t0, 10356($gp)
	sw   $t0, 10360($gp)
	sw   $t0, 10364($gp)
	sw   $t0, 10368($gp)
	sw   $t0, 10372($gp)
	sw   $t0, 10376($gp)
	sw   $t0, 10380($gp)
	sw   $t0, 10388($gp)
	sw   $t0, 10392($gp)
	sw   $t0, 10416($gp)
	sw   $t0, 10420($gp)
	sw   $t0, 10564($gp)
	sw   $t0, 10568($gp)
	sw   $t0, 10592($gp)
	sw   $t0, 10596($gp)
	sw   $t0, 10604($gp)
	sw   $t0, 10608($gp)
	sw   $t0, 10612($gp)
	sw   $t0, 10616($gp)
	sw   $t0, 10620($gp)
	sw   $t0, 10624($gp)
	sw   $t0, 10628($gp)
	sw   $t0, 10632($gp)
	sw   $t0, 10636($gp)
	sw   $t0, 10644($gp)
	sw   $t0, 10648($gp)
	sw   $t0, 10672($gp)
	sw   $t0, 10676($gp)
	sw   $t0, 10820($gp)
	sw   $t0, 10824($gp)
	sw   $t0, 10848($gp)
	sw   $t0, 10852($gp)
	sw   $t0, 10872($gp)
	sw   $t0, 10876($gp)
	sw   $t0, 10880($gp)
	sw   $t0, 10900($gp)
	sw   $t0, 10904($gp)
	sw   $t0, 10908($gp)
	sw   $t0, 10928($gp)
	sw   $t0, 10932($gp)
	sw   $t0, 11076($gp)
	sw   $t0, 11080($gp)
	sw   $t0, 11104($gp)
	sw   $t0, 11108($gp)
	sw   $t0, 11128($gp)
	sw   $t0, 11132($gp)
	sw   $t0, 11136($gp)
	sw   $t0, 11156($gp)
	sw   $t0, 11160($gp)
	sw   $t0, 11164($gp)
	sw   $t0, 11184($gp)
	sw   $t0, 11188($gp)
	sw   $t0, 11332($gp)
	sw   $t0, 11336($gp)
	sw   $t0, 11360($gp)
	sw   $t0, 11364($gp)
	sw   $t0, 11384($gp)
	sw   $t0, 11388($gp)
	sw   $t0, 11392($gp)
	sw   $t0, 11412($gp)
	sw   $t0, 11416($gp)
	sw   $t0, 11420($gp)
	sw   $t0, 11424($gp)
	sw   $t0, 11440($gp)
	sw   $t0, 11444($gp)
	sw   $t0, 11588($gp)
	sw   $t0, 11592($gp)
	sw   $t0, 11604($gp)
	sw   $t0, 11616($gp)
	sw   $t0, 11620($gp)
	sw   $t0, 11640($gp)
	sw   $t0, 11644($gp)
	sw   $t0, 11648($gp)
	sw   $t0, 11668($gp)
	sw   $t0, 11672($gp)
	sw   $t0, 11676($gp)
	sw   $t0, 11680($gp)
	sw   $t0, 11684($gp)
	sw   $t0, 11696($gp)
	sw   $t0, 11700($gp)
	sw   $t0, 11844($gp)
	sw   $t0, 11848($gp)
	sw   $t0, 11856($gp)
	sw   $t0, 11860($gp)
	sw   $t0, 11864($gp)
	sw   $t0, 11872($gp)
	sw   $t0, 11876($gp)
	sw   $t0, 11896($gp)
	sw   $t0, 11900($gp)
	sw   $t0, 11904($gp)
	sw   $t0, 11924($gp)
	sw   $t0, 11928($gp)
	sw   $t0, 11932($gp)
	sw   $t0, 11936($gp)
	sw   $t0, 11940($gp)
	sw   $t0, 11944($gp)
	sw   $t0, 11948($gp)
	sw   $t0, 11952($gp)
	sw   $t0, 11956($gp)
	sw   $t0, 12100($gp)
	sw   $t0, 12104($gp)
	sw   $t0, 12108($gp)
	sw   $t0, 12112($gp)
	sw   $t0, 12116($gp)
	sw   $t0, 12120($gp)
	sw   $t0, 12124($gp)
	sw   $t0, 12128($gp)
	sw   $t0, 12132($gp)
	sw   $t0, 12140($gp)
	sw   $t0, 12144($gp)
	sw   $t0, 12148($gp)
	sw   $t0, 12152($gp)
	sw   $t0, 12156($gp)
	sw   $t0, 12160($gp)
	sw   $t0, 12164($gp)
	sw   $t0, 12168($gp)
	sw   $t0, 12172($gp)
	sw   $t0, 12180($gp)
	sw   $t0, 12184($gp)
	sw   $t0, 12192($gp)
	sw   $t0, 12196($gp)
	sw   $t0, 12200($gp)
	sw   $t0, 12204($gp)
	sw   $t0, 12208($gp)
	sw   $t0, 12212($gp)
	sw   $t0, 12356($gp)
	sw   $t0, 12360($gp)
	sw   $t0, 12364($gp)
	sw   $t0, 12368($gp)
	sw   $t0, 12372($gp)
	sw   $t0, 12376($gp)
	sw   $t0, 12380($gp)
	sw   $t0, 12384($gp)
	sw   $t0, 12388($gp)
	sw   $t0, 12396($gp)
	sw   $t0, 12400($gp)
	sw   $t0, 12404($gp)
	sw   $t0, 12408($gp)
	sw   $t0, 12412($gp)
	sw   $t0, 12416($gp)
	sw   $t0, 12420($gp)
	sw   $t0, 12424($gp)
	sw   $t0, 12428($gp)
	sw   $t0, 12436($gp)
	sw   $t0, 12440($gp)
	sw   $t0, 12448($gp)
	sw   $t0, 12452($gp)
	sw   $t0, 12456($gp)
	sw   $t0, 12460($gp)
	sw   $t0, 12464($gp)
	sw   $t0, 12468($gp)
	sw   $t0, 12612($gp)
	sw   $t0, 12616($gp)
	sw   $t0, 12620($gp)
	sw   $t0, 12624($gp)
	sw   $t0, 12628($gp)
	sw   $t0, 12632($gp)
	sw   $t0, 12636($gp)
	sw   $t0, 12640($gp)
	sw   $t0, 12644($gp)
	sw   $t0, 12652($gp)
	sw   $t0, 12656($gp)
	sw   $t0, 12660($gp)
	sw   $t0, 12664($gp)
	sw   $t0, 12668($gp)
	sw   $t0, 12672($gp)
	sw   $t0, 12676($gp)
	sw   $t0, 12680($gp)
	sw   $t0, 12684($gp)
	sw   $t0, 12692($gp)
	sw   $t0, 12696($gp)
	sw   $t0, 12708($gp)
	sw   $t0, 12712($gp)
	sw   $t0, 12716($gp)
	sw   $t0, 12720($gp)
	sw   $t0, 12724($gp)
	sw   $t0, 12872($gp)
	sw   $t0, 12876($gp)
	sw   $t0, 12880($gp)
	sw   $t0, 12888($gp)
	sw   $t0, 12892($gp)
	sw   $t0, 12896($gp)
	sw   $t0, 12908($gp)
	sw   $t0, 12912($gp)
	sw   $t0, 12916($gp)
	sw   $t0, 12920($gp)
	sw   $t0, 12924($gp)
	sw   $t0, 12928($gp)
	sw   $t0, 12932($gp)
	sw   $t0, 12936($gp)
	sw   $t0, 12940($gp)
	sw   $t0, 12948($gp)
	sw   $t0, 12952($gp)
	sw   $t0, 12972($gp)
	sw   $t0, 12976($gp)
	sw   $t0, 12980($gp)
	sw   $t0, 13632($gp)
	sw   $t0, 13636($gp)
	sw   $t0, 13640($gp)
	sw   $t0, 13644($gp)
	sw   $t0, 13648($gp)
	sw   $t0, 13652($gp)
	sw   $t0, 13656($gp)
	sw   $t0, 13660($gp)
	sw   $t0, 13664($gp)
	sw   $t0, 13668($gp)
	sw   $t0, 13672($gp)
	sw   $t0, 13676($gp)
	sw   $t0, 13680($gp)
	sw   $t0, 13684($gp)
	sw   $t0, 13688($gp)
	sw   $t0, 13692($gp)
	sw   $t0, 13696($gp)
	sw   $t0, 13700($gp)
	sw   $t0, 13704($gp)
	sw   $t0, 13708($gp)
	sw   $t0, 13712($gp)
	sw   $t0, 13716($gp)
	sw   $t0, 13720($gp)
	sw   $t0, 13724($gp)
	sw   $t0, 13728($gp)
	sw   $t0, 13732($gp)
	sw   $t0, 13736($gp)
	sw   $t0, 13740($gp)
	sw   $t0, 13744($gp)
	sw   $t0, 13748($gp)
	sw   $t0, 13752($gp)

	jr   $ra
# ---------------------------------------------------------------------------------------


# display_win_screen()
#	Paints win scene onto display
#	$t0: colours
display_win_screen:

	# Paint white
	li   $t0, 0x00ffffff
	sw   $t0, 22000($gp)
	sw   $t0, 22184($gp)
	sw   $t0, 22244($gp)
	sw   $t0, 22264($gp)
	sw   $t0, 22452($gp)
	sw   $t0, 22476($gp)
	sw   $t0, 22480($gp)
	sw   $t0, 22484($gp)
	sw   $t0, 22508($gp)
	sw   $t0, 22680($gp)
	sw   $t0, 22684($gp)
	sw   $t0, 22688($gp)
	sw   $t0, 22692($gp)
	sw   $t0, 22696($gp)
	sw   $t0, 22700($gp)
	sw   $t0, 22728($gp)
	sw   $t0, 22732($gp)
	sw   $t0, 22736($gp)
	sw   $t0, 22744($gp)
	sw   $t0, 22768($gp)
	sw   $t0, 22772($gp)
	sw   $t0, 22928($gp)
	sw   $t0, 22932($gp)
	sw   $t0, 22948($gp)
	sw   $t0, 22952($gp)
	sw   $t0, 22960($gp)
	sw   $t0, 22992($gp)
	sw   $t0, 23016($gp)
	sw   $t0, 23032($gp)
	sw   $t0, 23208($gp)
	sw   $t0, 23212($gp)
	sw   $t0, 23248($gp)
	sw   $t0, 23252($gp)
	sw   $t0, 23432($gp)
	sw   $t0, 23452($gp)
	sw   $t0, 23508($gp)
	sw   $t0, 23512($gp)
	sw   $t0, 23520($gp)
	sw   $t0, 23932($gp)
	sw   $t0, 23940($gp)
	sw   $t0, 23948($gp)
	sw   $t0, 23952($gp)
	sw   $t0, 23968($gp)
	sw   $t0, 24200($gp)
	sw   $t0, 24204($gp)
	sw   $t0, 24208($gp)
	sw   $t0, 24212($gp)
	sw   $t0, 24216($gp)
	sw   $t0, 24408($gp)
	sw   $t0, 24456($gp)
	sw   $t0, 24648($gp)
	sw   $t0, 24692($gp)
	sw   $t0, 24696($gp)
	sw   $t0, 24912($gp)
	sw   $t0, 24948($gp)
	sw   $t0, 25120($gp)
	sw   $t0, 25128($gp)
	sw   $t0, 25172($gp)
	sw   $t0, 25176($gp)
	sw   $t0, 25180($gp)
	sw   $t0, 25188($gp)
	sw   $t0, 25192($gp)
	sw   $t0, 25424($gp)
	sw   $t0, 25428($gp)
	sw   $t0, 25432($gp)
	sw   $t0, 25436($gp)
	sw   $t0, 25440($gp)
	sw   $t0, 25444($gp)
	sw   $t0, 25456($gp)
	sw   $t0, 25504($gp)
	sw   $t0, 25512($gp)
	sw   $t0, 25536($gp)
	sw   $t0, 25640($gp)
	sw   $t0, 25644($gp)
	sw   $t0, 25648($gp)
	sw   $t0, 25668($gp)
	sw   $t0, 25672($gp)
	sw   $t0, 25676($gp)
	sw   $t0, 25680($gp)
	sw   $t0, 25696($gp)
	sw   $t0, 25700($gp)
	sw   $t0, 25768($gp)
	sw   $t0, 25892($gp)
	sw   $t0, 25896($gp)
	sw   $t0, 25904($gp)
	sw   $t0, 25908($gp)
	sw   $t0, 26016($gp)
	sw   $t0, 26020($gp)
	sw   $t0, 26024($gp)
	sw   $t0, 26028($gp)
	sw   $t0, 26032($gp)
	sw   $t0, 26196($gp)
	sw   $t0, 26232($gp)
	sw   $t0, 26252($gp)
	sw   $t0, 26256($gp)
	sw   $t0, 26280($gp)
	sw   $t0, 26316($gp)
	sw   $t0, 26460($gp)
	sw   $t0, 26536($gp)
	sw   $t0, 27484($gp)
	sw   $t0, 27704($gp)
	sw   $t0, 27740($gp)
	sw   $t0, 27988($gp)
	sw   $t0, 27992($gp)
	sw   $t0, 27996($gp)
	sw   $t0, 28000($gp)
	sw   $t0, 28004($gp)
	sw   $t0, 28056($gp)
	sw   $t0, 28232($gp)
	sw   $t0, 28252($gp)
	sw   $t0, 28508($gp)
	sw   $t0, 28520($gp)
	sw   $t0, 29312($gp)
	sw   $t0, 29588($gp)
	sw   $t0, 29800($gp)
	sw   $t0, 29844($gp)
	sw   $t0, 29864($gp)
	sw   $t0, 30092($gp)
	sw   $t0, 30096($gp)
	sw   $t0, 30100($gp)
	sw   $t0, 30104($gp)
	sw   $t0, 30108($gp)
	sw   $t0, 30356($gp)
	sw   $t0, 30612($gp)
	sw   $t0, 31348($gp)
	sw   $t0, 31584($gp)
	sw   $t0, 31604($gp)
	sw   $t0, 31820($gp)
	sw   $t0, 31852($gp)
	sw   $t0, 31856($gp)
	sw   $t0, 31860($gp)
	sw   $t0, 31864($gp)
	sw   $t0, 31868($gp)
	sw   $t0, 32116($gp)
	sw   $t0, 32372($gp)

	# Light Blues
	li   $t0, SEA_COL_0
	sw   $t0, 22724($gp)
	sw   $t0, 22764($gp)
	sw   $t0, 22936($gp)
	sw   $t0, 22940($gp)
	sw   $t0, 22944($gp)
	sw   $t0, 22976($gp)
	sw   $t0, 22980($gp)
	sw   $t0, 22984($gp)
	sw   $t0, 22988($gp)
	sw   $t0, 23020($gp)
	sw   $t0, 23024($gp)
	sw   $t0, 23028($gp)
	sw   $t0, 23180($gp)
	sw   $t0, 23184($gp)
	sw   $t0, 23188($gp)
	sw   $t0, 23192($gp)
	sw   $t0, 23196($gp)
	sw   $t0, 23200($gp)
	sw   $t0, 23204($gp)
	sw   $t0, 23224($gp)
	sw   $t0, 23228($gp)
	sw   $t0, 23232($gp)
	sw   $t0, 23236($gp)
	sw   $t0, 23240($gp)
	sw   $t0, 23244($gp)
	sw   $t0, 23264($gp)
	sw   $t0, 23268($gp)
	sw   $t0, 23272($gp)
	sw   $t0, 23276($gp)
	sw   $t0, 23280($gp)
	sw   $t0, 23284($gp)
	sw   $t0, 23288($gp)
	sw   $t0, 23292($gp)
	sw   $t0, 23440($gp)
	sw   $t0, 23444($gp)
	sw   $t0, 23448($gp)
	sw   $t0, 23456($gp)
	sw   $t0, 23460($gp)
	sw   $t0, 23464($gp)
	sw   $t0, 23468($gp)
	sw   $t0, 23472($gp)
	sw   $t0, 23476($gp)
	sw   $t0, 23480($gp)
	sw   $t0, 23484($gp)
	sw   $t0, 23488($gp)
	sw   $t0, 23492($gp)
	sw   $t0, 23496($gp)
	sw   $t0, 23500($gp)
	sw   $t0, 23504($gp)
	sw   $t0, 23516($gp)
	sw   $t0, 23524($gp)
	sw   $t0, 23528($gp)
	sw   $t0, 23532($gp)
	sw   $t0, 23536($gp)
	sw   $t0, 23540($gp)
	sw   $t0, 23544($gp)
	sw   $t0, 23548($gp)
	sw   $t0, 23696($gp)
	sw   $t0, 23700($gp)
	sw   $t0, 23704($gp)
	sw   $t0, 23708($gp)
	sw   $t0, 23712($gp)
	sw   $t0, 23716($gp)
	sw   $t0, 23720($gp)
	sw   $t0, 23724($gp)
	sw   $t0, 23728($gp)
	sw   $t0, 23732($gp)
	sw   $t0, 23736($gp)
	sw   $t0, 23740($gp)
	sw   $t0, 23744($gp)
	sw   $t0, 23748($gp)
	sw   $t0, 23752($gp)
	sw   $t0, 23756($gp)
	sw   $t0, 23760($gp)
	sw   $t0, 23764($gp)
	sw   $t0, 23768($gp)
	sw   $t0, 23772($gp)
	sw   $t0, 23776($gp)
	sw   $t0, 23780($gp)
	sw   $t0, 23784($gp)
	sw   $t0, 23788($gp)
	sw   $t0, 23792($gp)
	sw   $t0, 23796($gp)
	sw   $t0, 23800($gp)
	sw   $t0, 23804($gp)
	sw   $t0, 23956($gp)
	sw   $t0, 23960($gp)
	sw   $t0, 23964($gp)
	sw   $t0, 23972($gp)
	sw   $t0, 23976($gp)
	sw   $t0, 23980($gp)
	sw   $t0, 23984($gp)
	sw   $t0, 23988($gp)
	sw   $t0, 23992($gp)
	sw   $t0, 23996($gp)
	sw   $t0, 24000($gp)
	sw   $t0, 24004($gp)
	sw   $t0, 24008($gp)
	sw   $t0, 24012($gp)
	sw   $t0, 24016($gp)
	sw   $t0, 24020($gp)
	sw   $t0, 24024($gp)
	sw   $t0, 24028($gp)
	sw   $t0, 24032($gp)
	sw   $t0, 24036($gp)
	sw   $t0, 24040($gp)
	sw   $t0, 24044($gp)
	sw   $t0, 24048($gp)
	sw   $t0, 24052($gp)
	sw   $t0, 24056($gp)
	sw   $t0, 24060($gp)
	sw   $t0, 24220($gp)
	sw   $t0, 24224($gp)
	sw   $t0, 24228($gp)
	sw   $t0, 24232($gp)
	sw   $t0, 24236($gp)
	sw   $t0, 24240($gp)
	sw   $t0, 24244($gp)
	sw   $t0, 24248($gp)
	sw   $t0, 24252($gp)
	sw   $t0, 24256($gp)
	sw   $t0, 24260($gp)
	sw   $t0, 24264($gp)
	sw   $t0, 24268($gp)
	sw   $t0, 24272($gp)
	sw   $t0, 24276($gp)
	sw   $t0, 24280($gp)
	sw   $t0, 24284($gp)
	sw   $t0, 24288($gp)
	sw   $t0, 24292($gp)
	sw   $t0, 24296($gp)
	sw   $t0, 24300($gp)
	sw   $t0, 24304($gp)
	sw   $t0, 24308($gp)
	sw   $t0, 24312($gp)
	sw   $t0, 24316($gp)
	sw   $t0, 24500($gp)
	sw   $t0, 24504($gp)
	sw   $t0, 24508($gp)
	sw   $t0, 24512($gp)
	sw   $t0, 24516($gp)
	sw   $t0, 24520($gp)
	sw   $t0, 24524($gp)
	sw   $t0, 24528($gp)
	sw   $t0, 24532($gp)
	sw   $t0, 24536($gp)
	sw   $t0, 24540($gp)
	sw   $t0, 24544($gp)
	sw   $t0, 24548($gp)
	sw   $t0, 24552($gp)
	sw   $t0, 24556($gp)
	sw   $t0, 24560($gp)
	sw   $t0, 24564($gp)
	sw   $t0, 24568($gp)
	sw   $t0, 24572($gp)
	sw   $t0, 24768($gp)
	sw   $t0, 24772($gp)
	sw   $t0, 24776($gp)
	sw   $t0, 24780($gp)
	sw   $t0, 24784($gp)
	sw   $t0, 24788($gp)
	sw   $t0, 24792($gp)
	sw   $t0, 24796($gp)
	sw   $t0, 24800($gp)
	sw   $t0, 24804($gp)
	sw   $t0, 24808($gp)
	sw   $t0, 24812($gp)
	sw   $t0, 24816($gp)
	sw   $t0, 24820($gp)
	sw   $t0, 24824($gp)
	sw   $t0, 24828($gp)
	sw   $t0, 24944($gp)
	sw   $t0, 24952($gp)
	sw   $t0, 24956($gp)
	sw   $t0, 24960($gp)
	sw   $t0, 24964($gp)
	sw   $t0, 24968($gp)
	sw   $t0, 24972($gp)
	sw   $t0, 24976($gp)
	sw   $t0, 24980($gp)
	sw   $t0, 24984($gp)
	sw   $t0, 24988($gp)
	sw   $t0, 24992($gp)
	sw   $t0, 24996($gp)
	sw   $t0, 25000($gp)
	sw   $t0, 25004($gp)
	sw   $t0, 25008($gp)
	sw   $t0, 25012($gp)
	sw   $t0, 25016($gp)
	sw   $t0, 25020($gp)
	sw   $t0, 25024($gp)
	sw   $t0, 25028($gp)
	sw   $t0, 25032($gp)
	sw   $t0, 25036($gp)
	sw   $t0, 25040($gp)
	sw   $t0, 25044($gp)
	sw   $t0, 25048($gp)
	sw   $t0, 25052($gp)
	sw   $t0, 25056($gp)
	sw   $t0, 25060($gp)
	sw   $t0, 25064($gp)
	sw   $t0, 25068($gp)
	sw   $t0, 25072($gp)
	sw   $t0, 25076($gp)
	sw   $t0, 25080($gp)
	sw   $t0, 25084($gp)
	sw   $t0, 25196($gp)
	sw   $t0, 25200($gp)
	sw   $t0, 25204($gp)
	sw   $t0, 25208($gp)
	sw   $t0, 25212($gp)
	sw   $t0, 25216($gp)
	sw   $t0, 25220($gp)
	sw   $t0, 25224($gp)
	sw   $t0, 25228($gp)
	sw   $t0, 25232($gp)
	sw   $t0, 25236($gp)
	sw   $t0, 25240($gp)
	sw   $t0, 25244($gp)
	sw   $t0, 25248($gp)
	sw   $t0, 25252($gp)
	sw   $t0, 25256($gp)
	sw   $t0, 25260($gp)
	sw   $t0, 25264($gp)
	sw   $t0, 25268($gp)
	sw   $t0, 25272($gp)
	sw   $t0, 25276($gp)
	sw   $t0, 25280($gp)
	sw   $t0, 25284($gp)
	sw   $t0, 25288($gp)
	sw   $t0, 25292($gp)
	sw   $t0, 25296($gp)
	sw   $t0, 25300($gp)
	sw   $t0, 25304($gp)
	sw   $t0, 25308($gp)
	sw   $t0, 25312($gp)
	sw   $t0, 25316($gp)
	sw   $t0, 25320($gp)
	sw   $t0, 25324($gp)
	sw   $t0, 25328($gp)
	sw   $t0, 25332($gp)
	sw   $t0, 25336($gp)
	sw   $t0, 25340($gp)
	sw   $t0, 25448($gp)
	sw   $t0, 25452($gp)
	sw   $t0, 25460($gp)
	sw   $t0, 25464($gp)
	sw   $t0, 25468($gp)
	sw   $t0, 25472($gp)
	sw   $t0, 25476($gp)
	sw   $t0, 25480($gp)
	sw   $t0, 25484($gp)
	sw   $t0, 25488($gp)
	sw   $t0, 25492($gp)
	sw   $t0, 25496($gp)
	sw   $t0, 25500($gp)
	sw   $t0, 25508($gp)
	sw   $t0, 25516($gp)
	sw   $t0, 25520($gp)
	sw   $t0, 25524($gp)
	sw   $t0, 25528($gp)
	sw   $t0, 25532($gp)
	sw   $t0, 25540($gp)
	sw   $t0, 25544($gp)
	sw   $t0, 25548($gp)
	sw   $t0, 25552($gp)
	sw   $t0, 25556($gp)
	sw   $t0, 25560($gp)
	sw   $t0, 25564($gp)
	sw   $t0, 25568($gp)
	sw   $t0, 25572($gp)
	sw   $t0, 25576($gp)
	sw   $t0, 25580($gp)
	sw   $t0, 25584($gp)
	sw   $t0, 25588($gp)
	sw   $t0, 25592($gp)
	sw   $t0, 25596($gp)
	sw   $t0, 25684($gp)
	sw   $t0, 25688($gp)
	sw   $t0, 25692($gp)
	sw   $t0, 25704($gp)
	sw   $t0, 25708($gp)
	sw   $t0, 25748($gp)
	sw   $t0, 25752($gp)
	sw   $t0, 25756($gp)
	sw   $t0, 25760($gp)
	sw   $t0, 25764($gp)
	sw   $t0, 25772($gp)
	sw   $t0, 25776($gp)
	sw   $t0, 25780($gp)
	sw   $t0, 25784($gp)
	sw   $t0, 25788($gp)
	sw   $t0, 25792($gp)
	sw   $t0, 25796($gp)
	sw   $t0, 25800($gp)
	sw   $t0, 25804($gp)
	sw   $t0, 25808($gp)
	sw   $t0, 25812($gp)
	sw   $t0, 25816($gp)
	sw   $t0, 25820($gp)
	sw   $t0, 25824($gp)
	sw   $t0, 25828($gp)
	sw   $t0, 25832($gp)
	sw   $t0, 25836($gp)
	sw   $t0, 25840($gp)
	sw   $t0, 25844($gp)
	sw   $t0, 25848($gp)
	sw   $t0, 25852($gp)
	sw   $t0, 25856($gp)
	sw   $t0, 25860($gp)
	sw   $t0, 25864($gp)
	sw   $t0, 25868($gp)
	sw   $t0, 25872($gp)
	sw   $t0, 25876($gp)
	sw   $t0, 25880($gp)
	sw   $t0, 25884($gp)
	sw   $t0, 25888($gp)
	sw   $t0, 25900($gp)
	sw   $t0, 25912($gp)
	sw   $t0, 25916($gp)
	sw   $t0, 25920($gp)
	sw   $t0, 25924($gp)
	sw   $t0, 25928($gp)
	sw   $t0, 25932($gp)
	sw   $t0, 25936($gp)
	sw   $t0, 25940($gp)
	sw   $t0, 25944($gp)
	sw   $t0, 25948($gp)
	sw   $t0, 25952($gp)
	sw   $t0, 25956($gp)
	sw   $t0, 26036($gp)
	sw   $t0, 26040($gp)
	sw   $t0, 26044($gp)
	sw   $t0, 26048($gp)
	sw   $t0, 26052($gp)
	sw   $t0, 26056($gp)
	sw   $t0, 26060($gp)
	sw   $t0, 26064($gp)
	sw   $t0, 26068($gp)
	sw   $t0, 26072($gp)
	sw   $t0, 26076($gp)
	sw   $t0, 26080($gp)
	sw   $t0, 26084($gp)
	sw   $t0, 26088($gp)
	sw   $t0, 26092($gp)
	sw   $t0, 26096($gp)
	sw   $t0, 26100($gp)
	sw   $t0, 26104($gp)
	sw   $t0, 26108($gp)
	sw   $t0, 26112($gp)
	sw   $t0, 26116($gp)
	sw   $t0, 26120($gp)
	sw   $t0, 26124($gp)
	sw   $t0, 26128($gp)
	sw   $t0, 26132($gp)
	sw   $t0, 26136($gp)
	sw   $t0, 26140($gp)
	sw   $t0, 26144($gp)
	sw   $t0, 26148($gp)
	sw   $t0, 26152($gp)
	sw   $t0, 26156($gp)
	sw   $t0, 26160($gp)
	sw   $t0, 26164($gp)
	sw   $t0, 26168($gp)
	sw   $t0, 26172($gp)
	sw   $t0, 26176($gp)
	sw   $t0, 26180($gp)
	sw   $t0, 26184($gp)
	sw   $t0, 26188($gp)
	sw   $t0, 26192($gp)
	sw   $t0, 26272($gp)
	sw   $t0, 26276($gp)
	sw   $t0, 26284($gp)
	sw   $t0, 26288($gp)
	sw   $t0, 26292($gp)
	sw   $t0, 26296($gp)
	sw   $t0, 26300($gp)
	sw   $t0, 26304($gp)
	sw   $t0, 26308($gp)
	sw   $t0, 26312($gp)
	sw   $t0, 26320($gp)
	sw   $t0, 26324($gp)
	sw   $t0, 26328($gp)
	sw   $t0, 26332($gp)
	sw   $t0, 26336($gp)
	sw   $t0, 26340($gp)
	sw   $t0, 26344($gp)
	sw   $t0, 26348($gp)
	sw   $t0, 26352($gp)
	sw   $t0, 26356($gp)
	sw   $t0, 26360($gp)
	sw   $t0, 26364($gp)
	sw   $t0, 26368($gp)
	sw   $t0, 26372($gp)
	sw   $t0, 26376($gp)
	sw   $t0, 26380($gp)
	sw   $t0, 26384($gp)
	sw   $t0, 26388($gp)
	sw   $t0, 26392($gp)
	sw   $t0, 26396($gp)
	sw   $t0, 26400($gp)
	sw   $t0, 26404($gp)
	sw   $t0, 26408($gp)
	sw   $t0, 26412($gp)
	sw   $t0, 26416($gp)
	sw   $t0, 26420($gp)
	sw   $t0, 26424($gp)
	sw   $t0, 26428($gp)
	sw   $t0, 26432($gp)
	sw   $t0, 26436($gp)
	sw   $t0, 26440($gp)
	sw   $t0, 26444($gp)
	sw   $t0, 26448($gp)
	sw   $t0, 26452($gp)
	sw   $t0, 26456($gp)
	sw   $t0, 26464($gp)
	sw   $t0, 26468($gp)
	sw   $t0, 26472($gp)
	sw   $t0, 26476($gp)
	sw   $t0, 26480($gp)
	sw   $t0, 26484($gp)
	sw   $t0, 26488($gp)
	sw   $t0, 26492($gp)
	sw   $t0, 26496($gp)
	sw   $t0, 26500($gp)
	sw   $t0, 26504($gp)
	sw   $t0, 26508($gp)
	sw   $t0, 26512($gp)
	sw   $t0, 26516($gp)
	sw   $t0, 26520($gp)
	sw   $t0, 26524($gp)
	sw   $t0, 26528($gp)
	sw   $t0, 26532($gp)
	sw   $t0, 26540($gp)
	sw   $t0, 26544($gp)
	sw   $t0, 26548($gp)
	sw   $t0, 26552($gp)
	sw   $t0, 26556($gp)
	sw   $t0, 26560($gp)
	sw   $t0, 26564($gp)
	sw   $t0, 26568($gp)
	sw   $t0, 26572($gp)
	sw   $t0, 26576($gp)
	sw   $t0, 26580($gp)
	sw   $t0, 26584($gp)
	sw   $t0, 26588($gp)
	sw   $t0, 26592($gp)
	sw   $t0, 26596($gp)
	sw   $t0, 26600($gp)
	sw   $t0, 26604($gp)
	sw   $t0, 26608($gp)
	sw   $t0, 26612($gp)
	sw   $t0, 26616($gp)
	sw   $t0, 26620($gp)
	sw   $t0, 26624($gp)
	sw   $t0, 26628($gp)
	sw   $t0, 26632($gp)
	sw   $t0, 26636($gp)
	sw   $t0, 26640($gp)
	sw   $t0, 26644($gp)
	sw   $t0, 26648($gp)
	sw   $t0, 26652($gp)
	sw   $t0, 26656($gp)
	sw   $t0, 26660($gp)
	sw   $t0, 26664($gp)
	sw   $t0, 26668($gp)
	sw   $t0, 26672($gp)
	sw   $t0, 26676($gp)
	sw   $t0, 26680($gp)
	sw   $t0, 26684($gp)
	sw   $t0, 26688($gp)
	sw   $t0, 26692($gp)
	sw   $t0, 26696($gp)
	sw   $t0, 26700($gp)
	sw   $t0, 26704($gp)
	sw   $t0, 26708($gp)
	sw   $t0, 26712($gp)
	sw   $t0, 26716($gp)
	sw   $t0, 26720($gp)
	sw   $t0, 26724($gp)
	sw   $t0, 26728($gp)
	sw   $t0, 26732($gp)
	sw   $t0, 26756($gp)
	sw   $t0, 26760($gp)
	sw   $t0, 26764($gp)
	sw   $t0, 26768($gp)
	sw   $t0, 26772($gp)
	sw   $t0, 26776($gp)
	sw   $t0, 26780($gp)
	sw   $t0, 26784($gp)
	sw   $t0, 26788($gp)
	sw   $t0, 26792($gp)
	sw   $t0, 26796($gp)
	sw   $t0, 26800($gp)
	sw   $t0, 26804($gp)
	sw   $t0, 26808($gp)
	sw   $t0, 26812($gp)
	sw   $t0, 26816($gp)
	sw   $t0, 26820($gp)
	sw   $t0, 26824($gp)
	sw   $t0, 26828($gp)
	sw   $t0, 26832($gp)
	sw   $t0, 26836($gp)
	sw   $t0, 26840($gp)
	sw   $t0, 26844($gp)
	sw   $t0, 26848($gp)
	sw   $t0, 26852($gp)
	sw   $t0, 26856($gp)
	sw   $t0, 26860($gp)
	sw   $t0, 26864($gp)
	sw   $t0, 26868($gp)
	sw   $t0, 26872($gp)
	sw   $t0, 26876($gp)
	sw   $t0, 26880($gp)
	sw   $t0, 26884($gp)
	sw   $t0, 26888($gp)
	sw   $t0, 26892($gp)
	sw   $t0, 26896($gp)
	sw   $t0, 26900($gp)
	sw   $t0, 26904($gp)
	sw   $t0, 26908($gp)
	sw   $t0, 26912($gp)
	sw   $t0, 26916($gp)
	sw   $t0, 26920($gp)
	sw   $t0, 26924($gp)
	sw   $t0, 26928($gp)
	sw   $t0, 26932($gp)
	sw   $t0, 26936($gp)
	sw   $t0, 26940($gp)
	sw   $t0, 26944($gp)
	sw   $t0, 26948($gp)
	sw   $t0, 26952($gp)
	sw   $t0, 26956($gp)
	sw   $t0, 26960($gp)
	sw   $t0, 26964($gp)
	sw   $t0, 26968($gp)
	sw   $t0, 26972($gp)
	sw   $t0, 26976($gp)
	sw   $t0, 26980($gp)
	sw   $t0, 27032($gp)
	sw   $t0, 27036($gp)
	sw   $t0, 27040($gp)
	sw   $t0, 27044($gp)
	sw   $t0, 27048($gp)
	sw   $t0, 27052($gp)
	sw   $t0, 27056($gp)
	sw   $t0, 27060($gp)
	sw   $t0, 27064($gp)
	sw   $t0, 27068($gp)
	sw   $t0, 27072($gp)
	sw   $t0, 27076($gp)
	sw   $t0, 27080($gp)
	sw   $t0, 27084($gp)
	sw   $t0, 27088($gp)
	sw   $t0, 27092($gp)
	sw   $t0, 27096($gp)
	sw   $t0, 27100($gp)
	sw   $t0, 27104($gp)
	sw   $t0, 27108($gp)
	sw   $t0, 27112($gp)
	sw   $t0, 27116($gp)
	sw   $t0, 27120($gp)
	sw   $t0, 27124($gp)
	sw   $t0, 27128($gp)
	sw   $t0, 27132($gp)
	sw   $t0, 27136($gp)
	sw   $t0, 27140($gp)
	sw   $t0, 27144($gp)
	sw   $t0, 27148($gp)
	sw   $t0, 27152($gp)
	sw   $t0, 27156($gp)
	sw   $t0, 27160($gp)
	sw   $t0, 27164($gp)
	sw   $t0, 27168($gp)
	sw   $t0, 27172($gp)
	sw   $t0, 27176($gp)
	sw   $t0, 27180($gp)
	sw   $t0, 27184($gp)
	sw   $t0, 27188($gp)
	sw   $t0, 27192($gp)
	sw   $t0, 27196($gp)
	sw   $t0, 27200($gp)
	sw   $t0, 27204($gp)
	sw   $t0, 27208($gp)
	sw   $t0, 27212($gp)
	sw   $t0, 27216($gp)
	sw   $t0, 27220($gp)
	sw   $t0, 27224($gp)
	sw   $t0, 27228($gp)
	sw   $t0, 27232($gp)
	sw   $t0, 27236($gp)
	sw   $t0, 27240($gp)
	sw   $t0, 27244($gp)
	sw   $t0, 27248($gp)
	sw   $t0, 27252($gp)
	sw   $t0, 27256($gp)
	sw   $t0, 27260($gp)
	sw   $t0, 27264($gp)
	sw   $t0, 27268($gp)
	sw   $t0, 27272($gp)
	sw   $t0, 27276($gp)
	sw   $t0, 27280($gp)
	sw   $t0, 27284($gp)
	sw   $t0, 27288($gp)
	sw   $t0, 27292($gp)
	sw   $t0, 27296($gp)
	sw   $t0, 27300($gp)
	sw   $t0, 27304($gp)
	sw   $t0, 27308($gp)
	sw   $t0, 27312($gp)
	sw   $t0, 27316($gp)
	sw   $t0, 27320($gp)
	sw   $t0, 27324($gp)
	sw   $t0, 27328($gp)
	sw   $t0, 27332($gp)
	sw   $t0, 27336($gp)
	sw   $t0, 27340($gp)
	sw   $t0, 27344($gp)
	sw   $t0, 27348($gp)
	sw   $t0, 27352($gp)
	sw   $t0, 27356($gp)
	sw   $t0, 27360($gp)
	sw   $t0, 27364($gp)
	sw   $t0, 27368($gp)
	sw   $t0, 27372($gp)
	sw   $t0, 27376($gp)
	sw   $t0, 27380($gp)
	sw   $t0, 27384($gp)
	sw   $t0, 27388($gp)
	sw   $t0, 27392($gp)
	sw   $t0, 27396($gp)
	sw   $t0, 27400($gp)
	sw   $t0, 27404($gp)
	sw   $t0, 27408($gp)
	sw   $t0, 27412($gp)
	sw   $t0, 27416($gp)
	sw   $t0, 27420($gp)
	sw   $t0, 27424($gp)
	sw   $t0, 27428($gp)
	sw   $t0, 27432($gp)
	sw   $t0, 27436($gp)
	sw   $t0, 27440($gp)
	sw   $t0, 27444($gp)
	sw   $t0, 27448($gp)
	sw   $t0, 27452($gp)
	sw   $t0, 27456($gp)
	sw   $t0, 27460($gp)
	sw   $t0, 27464($gp)
	sw   $t0, 27468($gp)
	sw   $t0, 27472($gp)
	sw   $t0, 27476($gp)
	sw   $t0, 27480($gp)
	sw   $t0, 27488($gp)
	sw   $t0, 27492($gp)
	sw   $t0, 27496($gp)
	sw   $t0, 27500($gp)
	sw   $t0, 27504($gp)
	sw   $t0, 27508($gp)
	sw   $t0, 27512($gp)
	sw   $t0, 27516($gp)
	sw   $t0, 27520($gp)
	sw   $t0, 27524($gp)
	sw   $t0, 27528($gp)
	sw   $t0, 27532($gp)
	sw   $t0, 27536($gp)
	sw   $t0, 27540($gp)
	sw   $t0, 27544($gp)
	sw   $t0, 27548($gp)
	sw   $t0, 27552($gp)
	sw   $t0, 27556($gp)
	sw   $t0, 27560($gp)
	sw   $t0, 27564($gp)
	sw   $t0, 27568($gp)
	sw   $t0, 27572($gp)
	sw   $t0, 27576($gp)
	sw   $t0, 27580($gp)
	sw   $t0, 27584($gp)
	sw   $t0, 27588($gp)
	sw   $t0, 27592($gp)
	sw   $t0, 27596($gp)
	sw   $t0, 27600($gp)
	sw   $t0, 27604($gp)
	sw   $t0, 27608($gp)
	sw   $t0, 27612($gp)
	sw   $t0, 27616($gp)
	sw   $t0, 27620($gp)
	sw   $t0, 27624($gp)
	sw   $t0, 27628($gp)
	sw   $t0, 27632($gp)
	sw   $t0, 27636($gp)
	sw   $t0, 27640($gp)
	sw   $t0, 27644($gp)
	sw   $t0, 27648($gp)
	sw   $t0, 27652($gp)
	sw   $t0, 27656($gp)
	sw   $t0, 27660($gp)
	sw   $t0, 27664($gp)
	sw   $t0, 27668($gp)
	sw   $t0, 27672($gp)
	sw   $t0, 27676($gp)
	sw   $t0, 27680($gp)
	sw   $t0, 27684($gp)
	sw   $t0, 27688($gp)
	sw   $t0, 27692($gp)
	sw   $t0, 27696($gp)
	sw   $t0, 27700($gp)
	sw   $t0, 27708($gp)
	sw   $t0, 27712($gp)
	sw   $t0, 27716($gp)
	sw   $t0, 27720($gp)
	sw   $t0, 27724($gp)
	sw   $t0, 27728($gp)
	sw   $t0, 27732($gp)
	sw   $t0, 27736($gp)
	sw   $t0, 27744($gp)
	sw   $t0, 27748($gp)
	sw   $t0, 27752($gp)
	sw   $t0, 27756($gp)
	sw   $t0, 27760($gp)
	sw   $t0, 27764($gp)
	sw   $t0, 27768($gp)
	sw   $t0, 27792($gp)
	sw   $t0, 27796($gp)
	sw   $t0, 27800($gp)
	sw   $t0, 27804($gp)
	sw   $t0, 27808($gp)
	sw   $t0, 27812($gp)
	sw   $t0, 27816($gp)
	sw   $t0, 27820($gp)
	sw   $t0, 27824($gp)
	sw   $t0, 27828($gp)
	sw   $t0, 27832($gp)
	sw   $t0, 27836($gp)
	sw   $t0, 27840($gp)
	sw   $t0, 27844($gp)
	sw   $t0, 27848($gp)
	sw   $t0, 27852($gp)
	sw   $t0, 27856($gp)
	sw   $t0, 27860($gp)
	sw   $t0, 27864($gp)
	sw   $t0, 27868($gp)
	sw   $t0, 27872($gp)
	sw   $t0, 27876($gp)
	sw   $t0, 27880($gp)
	sw   $t0, 27884($gp)
	sw   $t0, 27888($gp)
	sw   $t0, 27892($gp)
	sw   $t0, 27896($gp)
	sw   $t0, 27900($gp)
	sw   $t0, 27904($gp)
	sw   $t0, 27908($gp)
	sw   $t0, 27912($gp)
	sw   $t0, 27916($gp)
	sw   $t0, 27920($gp)
	sw   $t0, 27924($gp)
	sw   $t0, 27928($gp)
	sw   $t0, 27932($gp)
	sw   $t0, 27936($gp)
	sw   $t0, 27940($gp)
	sw   $t0, 27944($gp)
	sw   $t0, 27948($gp)
	sw   $t0, 27952($gp)
	sw   $t0, 27956($gp)
	sw   $t0, 27960($gp)
	sw   $t0, 27964($gp)
	sw   $t0, 27968($gp)
	sw   $t0, 27972($gp)
	sw   $t0, 27976($gp)
	sw   $t0, 27980($gp)
	sw   $t0, 27984($gp)
	sw   $t0, 28008($gp)
	sw   $t0, 28012($gp)
	sw   $t0, 28016($gp)
	sw   $t0, 28020($gp)
	sw   $t0, 28024($gp)
	sw   $t0, 28028($gp)
	sw   $t0, 28032($gp)
	sw   $t0, 28036($gp)
	sw   $t0, 28040($gp)
	sw   $t0, 28044($gp)
	sw   $t0, 28048($gp)
	sw   $t0, 28052($gp)
	sw   $t0, 28060($gp)
	sw   $t0, 28064($gp)
	sw   $t0, 28068($gp)
	sw   $t0, 28072($gp)
	sw   $t0, 28076($gp)
	sw   $t0, 28080($gp)
	sw   $t0, 28084($gp)
	sw   $t0, 28088($gp)
	sw   $t0, 28092($gp)
	sw   $t0, 28096($gp)
	sw   $t0, 28100($gp)
	sw   $t0, 28104($gp)
	sw   $t0, 28108($gp)
	sw   $t0, 28112($gp)
	sw   $t0, 28116($gp)
	sw   $t0, 28120($gp)
	sw   $t0, 28124($gp)
	sw   $t0, 28128($gp)
	sw   $t0, 28132($gp)
	sw   $t0, 28136($gp)
	sw   $t0, 28140($gp)
	sw   $t0, 28144($gp)
	sw   $t0, 28148($gp)
	sw   $t0, 28152($gp)
	sw   $t0, 28156($gp)
	sw   $t0, 28160($gp)
	sw   $t0, 28164($gp)
	sw   $t0, 28168($gp)
	sw   $t0, 28172($gp)
	sw   $t0, 28176($gp)
	sw   $t0, 28180($gp)
	sw   $t0, 28184($gp)
	sw   $t0, 28188($gp)
	sw   $t0, 28192($gp)
	sw   $t0, 28196($gp)
	sw   $t0, 28200($gp)
	sw   $t0, 28204($gp)
	sw   $t0, 28208($gp)
	sw   $t0, 28212($gp)
	sw   $t0, 28216($gp)
	sw   $t0, 28220($gp)
	sw   $t0, 28224($gp)
	sw   $t0, 28228($gp)
	sw   $t0, 28236($gp)
	sw   $t0, 28240($gp)
	sw   $t0, 28244($gp)
	sw   $t0, 28248($gp)
	sw   $t0, 28256($gp)
	sw   $t0, 28260($gp)
	sw   $t0, 28264($gp)
	sw   $t0, 28296($gp)
	sw   $t0, 28300($gp)
	sw   $t0, 28304($gp)
	sw   $t0, 28308($gp)
	sw   $t0, 28312($gp)
	sw   $t0, 28316($gp)
	sw   $t0, 28320($gp)
	sw   $t0, 28324($gp)
	sw   $t0, 28328($gp)
	sw   $t0, 28332($gp)
	sw   $t0, 28336($gp)
	sw   $t0, 28340($gp)
	sw   $t0, 28344($gp)
	sw   $t0, 28348($gp)
	sw   $t0, 28352($gp)
	sw   $t0, 28356($gp)
	sw   $t0, 28360($gp)
	sw   $t0, 28364($gp)
	sw   $t0, 28368($gp)
	sw   $t0, 28372($gp)
	sw   $t0, 28376($gp)
	sw   $t0, 28380($gp)
	sw   $t0, 28384($gp)
	sw   $t0, 28388($gp)
	sw   $t0, 28392($gp)
	sw   $t0, 28396($gp)
	sw   $t0, 28400($gp)
	sw   $t0, 28404($gp)
	sw   $t0, 28408($gp)
	sw   $t0, 28412($gp)
	sw   $t0, 28416($gp)
	sw   $t0, 28420($gp)
	sw   $t0, 28424($gp)
	sw   $t0, 28428($gp)
	sw   $t0, 28432($gp)
	sw   $t0, 28436($gp)
	sw   $t0, 28440($gp)
	sw   $t0, 28444($gp)
	sw   $t0, 28448($gp)
	sw   $t0, 28452($gp)
	sw   $t0, 28456($gp)
	sw   $t0, 28460($gp)
	sw   $t0, 28464($gp)
	sw   $t0, 28468($gp)
	sw   $t0, 28472($gp)
	sw   $t0, 28476($gp)
	sw   $t0, 28480($gp)
	sw   $t0, 28484($gp)
	sw   $t0, 28488($gp)
	sw   $t0, 28492($gp)
	sw   $t0, 28496($gp)
	sw   $t0, 28500($gp)
	sw   $t0, 28504($gp)
	sw   $t0, 28512($gp)
	sw   $t0, 28516($gp)
	sw   $t0, 28524($gp)
	sw   $t0, 28528($gp)
	sw   $t0, 28564($gp)
	sw   $t0, 28568($gp)
	sw   $t0, 28572($gp)
	sw   $t0, 28576($gp)
	sw   $t0, 28580($gp)
	sw   $t0, 28584($gp)
	sw   $t0, 28588($gp)
	sw   $t0, 28592($gp)
	sw   $t0, 28596($gp)
	sw   $t0, 28600($gp)
	sw   $t0, 28604($gp)
	sw   $t0, 28608($gp)
	sw   $t0, 28612($gp)
	sw   $t0, 28616($gp)
	sw   $t0, 28620($gp)
	sw   $t0, 28624($gp)
	sw   $t0, 28628($gp)
	sw   $t0, 28632($gp)
	sw   $t0, 28636($gp)
	sw   $t0, 28640($gp)
	sw   $t0, 28644($gp)
	sw   $t0, 28648($gp)
	sw   $t0, 28652($gp)
	sw   $t0, 28656($gp)
	sw   $t0, 28660($gp)
	sw   $t0, 28664($gp)
	sw   $t0, 28668($gp)
	sw   $t0, 28672($gp)
	sw   $t0, 28676($gp)
	sw   $t0, 28680($gp)
	sw   $t0, 28684($gp)
	sw   $t0, 28688($gp)
	sw   $t0, 28692($gp)
	sw   $t0, 28696($gp)
	sw   $t0, 28700($gp)
	sw   $t0, 28704($gp)
	sw   $t0, 28708($gp)
	sw   $t0, 28712($gp)
	sw   $t0, 28716($gp)
	sw   $t0, 28720($gp)
	sw   $t0, 28724($gp)
	sw   $t0, 28728($gp)
	sw   $t0, 28732($gp)
	sw   $t0, 28736($gp)
	sw   $t0, 28740($gp)
	sw   $t0, 28744($gp)
	sw   $t0, 28748($gp)
	sw   $t0, 28752($gp)
	sw   $t0, 28756($gp)
	sw   $t0, 28760($gp)
	sw   $t0, 28764($gp)
	sw   $t0, 28768($gp)
	sw   $t0, 28772($gp)
	sw   $t0, 28776($gp)
	sw   $t0, 28780($gp)
	sw   $t0, 28784($gp)
	sw   $t0, 28788($gp)
	sw   $t0, 28792($gp)
	sw   $t0, 28796($gp)
	sw   $t0, 28800($gp)
	sw   $t0, 28804($gp)
	sw   $t0, 28808($gp)
	sw   $t0, 28812($gp)
	sw   $t0, 28816($gp)
	sw   $t0, 28820($gp)
	sw   $t0, 28824($gp)
	sw   $t0, 28828($gp)
	sw   $t0, 28832($gp)
	sw   $t0, 28836($gp)
	sw   $t0, 28840($gp)
	sw   $t0, 28844($gp)
	sw   $t0, 28848($gp)
	sw   $t0, 28852($gp)
	sw   $t0, 28856($gp)
	sw   $t0, 28860($gp)
	sw   $t0, 28864($gp)
	sw   $t0, 28868($gp)
	sw   $t0, 28872($gp)
	sw   $t0, 28876($gp)
	sw   $t0, 28880($gp)
	sw   $t0, 28884($gp)
	sw   $t0, 28888($gp)
	sw   $t0, 28892($gp)
	sw   $t0, 28896($gp)
	sw   $t0, 28900($gp)
	sw   $t0, 28904($gp)
	sw   $t0, 28908($gp)
	sw   $t0, 28912($gp)
	sw   $t0, 28916($gp)
	sw   $t0, 28920($gp)
	sw   $t0, 28924($gp)
	sw   $t0, 28928($gp)
	sw   $t0, 28932($gp)
	sw   $t0, 28936($gp)
	sw   $t0, 28940($gp)
	sw   $t0, 28944($gp)
	sw   $t0, 28948($gp)
	sw   $t0, 28952($gp)
	sw   $t0, 28956($gp)
	sw   $t0, 28960($gp)
	sw   $t0, 28964($gp)
	sw   $t0, 28968($gp)
	sw   $t0, 28972($gp)
	sw   $t0, 28976($gp)
	sw   $t0, 28980($gp)
	sw   $t0, 28984($gp)
	sw   $t0, 28988($gp)
	sw   $t0, 28992($gp)
	sw   $t0, 28996($gp)
	sw   $t0, 29000($gp)
	sw   $t0, 29004($gp)
	sw   $t0, 29008($gp)
	sw   $t0, 29012($gp)
	sw   $t0, 29016($gp)
	sw   $t0, 29020($gp)
	sw   $t0, 29024($gp)
	sw   $t0, 29028($gp)
	sw   $t0, 29032($gp)
	sw   $t0, 29036($gp)
	sw   $t0, 29040($gp)
	sw   $t0, 29044($gp)
	sw   $t0, 29048($gp)
	sw   $t0, 29052($gp)
	sw   $t0, 29056($gp)
	sw   $t0, 29060($gp)
	sw   $t0, 29064($gp)
	sw   $t0, 29068($gp)
	sw   $t0, 29072($gp)
	sw   $t0, 29076($gp)
	sw   $t0, 29080($gp)
	sw   $t0, 29084($gp)
	sw   $t0, 29088($gp)
	sw   $t0, 29092($gp)
	sw   $t0, 29096($gp)
	sw   $t0, 29100($gp)
	sw   $t0, 29104($gp)
	sw   $t0, 29108($gp)
	sw   $t0, 29112($gp)
	sw   $t0, 29116($gp)
	sw   $t0, 29120($gp)
	sw   $t0, 29124($gp)
	sw   $t0, 29128($gp)
	sw   $t0, 29132($gp)
	sw   $t0, 29136($gp)
	sw   $t0, 29140($gp)
	sw   $t0, 29144($gp)
	sw   $t0, 29148($gp)
	sw   $t0, 29152($gp)
	sw   $t0, 29156($gp)
	sw   $t0, 29160($gp)
	sw   $t0, 29164($gp)
	sw   $t0, 29168($gp)
	sw   $t0, 29172($gp)
	sw   $t0, 29176($gp)
	sw   $t0, 29180($gp)
	sw   $t0, 29184($gp)
	sw   $t0, 29188($gp)
	sw   $t0, 29192($gp)
	sw   $t0, 29196($gp)
	sw   $t0, 29200($gp)
	sw   $t0, 29204($gp)
	sw   $t0, 29208($gp)
	sw   $t0, 29212($gp)
	sw   $t0, 29216($gp)
	sw   $t0, 29220($gp)
	sw   $t0, 29224($gp)
	sw   $t0, 29228($gp)
	sw   $t0, 29232($gp)
	sw   $t0, 29236($gp)
	sw   $t0, 29240($gp)
	sw   $t0, 29244($gp)
	sw   $t0, 29248($gp)
	sw   $t0, 29252($gp)
	sw   $t0, 29256($gp)
	sw   $t0, 29260($gp)
	sw   $t0, 29264($gp)
	sw   $t0, 29268($gp)
	sw   $t0, 29272($gp)
	sw   $t0, 29276($gp)
	sw   $t0, 29280($gp)
	sw   $t0, 29284($gp)
	sw   $t0, 29288($gp)
	sw   $t0, 29292($gp)
	sw   $t0, 29296($gp)
	sw   $t0, 29324($gp)
	sw   $t0, 29328($gp)
	sw   $t0, 29332($gp)
	sw   $t0, 29336($gp)
	sw   $t0, 29340($gp)
	sw   $t0, 29344($gp)
	sw   $t0, 29348($gp)
	sw   $t0, 29352($gp)
	sw   $t0, 29356($gp)
	sw   $t0, 29360($gp)
	sw   $t0, 29364($gp)
	sw   $t0, 29368($gp)
	sw   $t0, 29372($gp)
	sw   $t0, 29376($gp)
	sw   $t0, 29380($gp)
	sw   $t0, 29384($gp)
	sw   $t0, 29388($gp)
	sw   $t0, 29392($gp)
	sw   $t0, 29396($gp)
	sw   $t0, 29400($gp)
	sw   $t0, 29404($gp)
	sw   $t0, 29408($gp)
	sw   $t0, 29412($gp)
	sw   $t0, 29416($gp)
	sw   $t0, 29420($gp)
	sw   $t0, 29424($gp)
	sw   $t0, 29428($gp)
	sw   $t0, 29432($gp)
	sw   $t0, 29436($gp)
	sw   $t0, 29440($gp)
	sw   $t0, 29444($gp)
	sw   $t0, 29448($gp)
	sw   $t0, 29452($gp)
	sw   $t0, 29456($gp)
	sw   $t0, 29460($gp)
	sw   $t0, 29464($gp)
	sw   $t0, 29468($gp)
	sw   $t0, 29472($gp)
	sw   $t0, 29476($gp)
	sw   $t0, 29480($gp)
	sw   $t0, 29484($gp)
	sw   $t0, 29488($gp)
	sw   $t0, 29492($gp)
	sw   $t0, 29496($gp)
	sw   $t0, 29500($gp)
	sw   $t0, 29504($gp)
	sw   $t0, 29508($gp)
	sw   $t0, 29512($gp)
	sw   $t0, 29516($gp)
	sw   $t0, 29520($gp)
	sw   $t0, 29524($gp)
	sw   $t0, 29528($gp)
	sw   $t0, 29532($gp)
	sw   $t0, 29536($gp)
	sw   $t0, 29540($gp)
	sw   $t0, 29544($gp)
	sw   $t0, 29548($gp)
	sw   $t0, 29552($gp)
	sw   $t0, 29556($gp)
	sw   $t0, 29560($gp)
	sw   $t0, 29564($gp)
	sw   $t0, 29568($gp)
	sw   $t0, 29572($gp)
	sw   $t0, 29592($gp)
	sw   $t0, 29596($gp)
	sw   $t0, 29600($gp)
	sw   $t0, 29604($gp)
	sw   $t0, 29608($gp)
	sw   $t0, 29612($gp)
	sw   $t0, 29616($gp)
	sw   $t0, 29620($gp)
	sw   $t0, 29624($gp)
	sw   $t0, 29628($gp)
	sw   $t0, 29632($gp)
	sw   $t0, 29636($gp)
	sw   $t0, 29640($gp)
	sw   $t0, 29644($gp)
	sw   $t0, 29648($gp)
	sw   $t0, 29652($gp)
	sw   $t0, 29656($gp)
	sw   $t0, 29660($gp)
	sw   $t0, 29664($gp)
	sw   $t0, 29668($gp)
	sw   $t0, 29672($gp)
	sw   $t0, 29676($gp)
	sw   $t0, 29680($gp)
	sw   $t0, 29684($gp)
	sw   $t0, 29688($gp)
	sw   $t0, 29692($gp)
	sw   $t0, 29696($gp)
	sw   $t0, 29700($gp)
	sw   $t0, 29704($gp)
	sw   $t0, 29708($gp)
	sw   $t0, 29712($gp)
	sw   $t0, 29716($gp)
	sw   $t0, 29720($gp)
	sw   $t0, 29724($gp)
	sw   $t0, 29728($gp)
	sw   $t0, 29732($gp)
	sw   $t0, 29736($gp)
	sw   $t0, 29740($gp)
	sw   $t0, 29744($gp)
	sw   $t0, 29748($gp)
	sw   $t0, 29752($gp)
	sw   $t0, 29756($gp)
	sw   $t0, 29760($gp)
	sw   $t0, 29764($gp)
	sw   $t0, 29768($gp)
	sw   $t0, 29772($gp)
	sw   $t0, 29776($gp)
	sw   $t0, 29780($gp)
	sw   $t0, 29784($gp)
	sw   $t0, 29788($gp)
	sw   $t0, 29792($gp)
	sw   $t0, 29796($gp)
	sw   $t0, 29804($gp)
	sw   $t0, 29808($gp)
	sw   $t0, 29812($gp)
	sw   $t0, 29816($gp)
	sw   $t0, 29820($gp)
	sw   $t0, 29824($gp)
	sw   $t0, 29828($gp)
	sw   $t0, 29832($gp)
	sw   $t0, 29836($gp)
	sw   $t0, 29840($gp)
	sw   $t0, 29848($gp)
	sw   $t0, 29852($gp)
	sw   $t0, 29856($gp)
	sw   $t0, 29860($gp)
	sw   $t0, 29868($gp)
	sw   $t0, 29872($gp)
	sw   $t0, 29876($gp)
	sw   $t0, 29880($gp)
	sw   $t0, 29884($gp)
	sw   $t0, 29888($gp)
	sw   $t0, 29892($gp)
	sw   $t0, 29896($gp)
	sw   $t0, 29900($gp)
	sw   $t0, 29904($gp)
	sw   $t0, 29908($gp)
	sw   $t0, 29912($gp)
	sw   $t0, 29916($gp)
	sw   $t0, 29920($gp)
	sw   $t0, 29924($gp)
	sw   $t0, 29928($gp)
	sw   $t0, 29932($gp)
	sw   $t0, 29936($gp)
	sw   $t0, 29940($gp)
	sw   $t0, 29944($gp)
	sw   $t0, 29948($gp)
	sw   $t0, 29952($gp)
	sw   $t0, 29956($gp)
	sw   $t0, 29960($gp)
	sw   $t0, 29964($gp)
	sw   $t0, 29968($gp)
	sw   $t0, 29972($gp)
	sw   $t0, 29976($gp)
	sw   $t0, 29980($gp)
	sw   $t0, 29984($gp)
	sw   $t0, 29988($gp)
	sw   $t0, 29992($gp)
	sw   $t0, 29996($gp)
	sw   $t0, 30000($gp)
	sw   $t0, 30004($gp)
	sw   $t0, 30008($gp)
	sw   $t0, 30012($gp)
	sw   $t0, 30016($gp)
	sw   $t0, 30020($gp)
	sw   $t0, 30024($gp)
	sw   $t0, 30028($gp)
	sw   $t0, 30032($gp)
	sw   $t0, 30036($gp)
	sw   $t0, 30040($gp)
	sw   $t0, 30044($gp)
	sw   $t0, 30048($gp)
	sw   $t0, 30052($gp)
	sw   $t0, 30056($gp)
	sw   $t0, 30060($gp)
	sw   $t0, 30064($gp)
	sw   $t0, 30068($gp)
	sw   $t0, 30072($gp)
	sw   $t0, 30076($gp)
	sw   $t0, 30080($gp)
	sw   $t0, 30084($gp)
	sw   $t0, 30088($gp)
	sw   $t0, 30112($gp)
	sw   $t0, 30116($gp)
	sw   $t0, 30120($gp)
	sw   $t0, 30124($gp)
	sw   $t0, 30128($gp)
	sw   $t0, 30132($gp)
	sw   $t0, 30136($gp)
	sw   $t0, 30140($gp)
	sw   $t0, 30144($gp)
	sw   $t0, 30148($gp)
	sw   $t0, 30152($gp)
	sw   $t0, 30156($gp)
	sw   $t0, 30160($gp)
	sw   $t0, 30164($gp)
	sw   $t0, 30168($gp)
	sw   $t0, 30172($gp)
	sw   $t0, 30176($gp)
	sw   $t0, 30180($gp)
	sw   $t0, 30184($gp)
	sw   $t0, 30188($gp)
	sw   $t0, 30192($gp)
	sw   $t0, 30196($gp)
	sw   $t0, 30200($gp)
	sw   $t0, 30204($gp)
	sw   $t0, 30208($gp)
	sw   $t0, 30212($gp)
	sw   $t0, 30216($gp)
	sw   $t0, 30220($gp)
	sw   $t0, 30224($gp)
	sw   $t0, 30228($gp)
	sw   $t0, 30232($gp)
	sw   $t0, 30236($gp)
	sw   $t0, 30240($gp)
	sw   $t0, 30244($gp)
	sw   $t0, 30248($gp)
	sw   $t0, 30252($gp)
	sw   $t0, 30256($gp)
	sw   $t0, 30260($gp)
	sw   $t0, 30264($gp)
	sw   $t0, 30268($gp)
	sw   $t0, 30272($gp)
	sw   $t0, 30276($gp)
	sw   $t0, 30280($gp)
	sw   $t0, 30284($gp)
	sw   $t0, 30288($gp)
	sw   $t0, 30292($gp)
	sw   $t0, 30296($gp)
	sw   $t0, 30300($gp)
	sw   $t0, 30304($gp)
	sw   $t0, 30308($gp)
	sw   $t0, 30312($gp)
	sw   $t0, 30316($gp)
	sw   $t0, 30320($gp)
	sw   $t0, 30324($gp)
	sw   $t0, 30352($gp)
	sw   $t0, 30360($gp)
	sw   $t0, 30364($gp)
	sw   $t0, 30368($gp)
	sw   $t0, 30372($gp)
	sw   $t0, 30376($gp)
	sw   $t0, 30380($gp)
	sw   $t0, 30384($gp)
	sw   $t0, 30388($gp)
	sw   $t0, 30392($gp)
	sw   $t0, 30396($gp)
	sw   $t0, 30400($gp)
	sw   $t0, 30404($gp)
	sw   $t0, 30408($gp)
	sw   $t0, 30412($gp)
	sw   $t0, 30416($gp)
	sw   $t0, 30420($gp)
	sw   $t0, 30424($gp)
	sw   $t0, 30428($gp)
	sw   $t0, 30432($gp)
	sw   $t0, 30436($gp)
	sw   $t0, 30440($gp)
	sw   $t0, 30444($gp)
	sw   $t0, 30448($gp)
	sw   $t0, 30452($gp)
	sw   $t0, 30456($gp)
	sw   $t0, 30460($gp)
	sw   $t0, 30464($gp)
	sw   $t0, 30468($gp)
	sw   $t0, 30472($gp)
	sw   $t0, 30476($gp)
	sw   $t0, 30480($gp)
	sw   $t0, 30484($gp)
	sw   $t0, 30488($gp)
	sw   $t0, 30492($gp)
	sw   $t0, 30496($gp)
	sw   $t0, 30500($gp)
	sw   $t0, 30504($gp)
	sw   $t0, 30508($gp)
	sw   $t0, 30512($gp)
	sw   $t0, 30516($gp)
	sw   $t0, 30520($gp)
	sw   $t0, 30524($gp)
	sw   $t0, 30528($gp)
	sw   $t0, 30532($gp)
	sw   $t0, 30536($gp)
	sw   $t0, 30540($gp)
	sw   $t0, 30544($gp)
	sw   $t0, 30548($gp)
	sw   $t0, 30552($gp)
	sw   $t0, 30556($gp)
	sw   $t0, 30560($gp)
	sw   $t0, 30564($gp)
	sw   $t0, 30568($gp)
	sw   $t0, 30572($gp)
	sw   $t0, 30576($gp)
	sw   $t0, 30580($gp)
	sw   $t0, 30584($gp)
	sw   $t0, 30588($gp)
	sw   $t0, 30592($gp)
	sw   $t0, 30596($gp)
	sw   $t0, 30600($gp)
	sw   $t0, 30604($gp)
	sw   $t0, 30608($gp)
	sw   $t0, 30616($gp)
	sw   $t0, 30620($gp)
	sw   $t0, 30624($gp)
	sw   $t0, 30628($gp)
	sw   $t0, 30632($gp)
	sw   $t0, 30636($gp)
	sw   $t0, 30640($gp)
	sw   $t0, 30644($gp)
	sw   $t0, 30648($gp)
	sw   $t0, 30652($gp)
	sw   $t0, 30656($gp)
	sw   $t0, 30660($gp)
	sw   $t0, 30664($gp)
	sw   $t0, 30668($gp)
	sw   $t0, 30672($gp)
	sw   $t0, 30676($gp)
	sw   $t0, 30680($gp)
	sw   $t0, 30684($gp)
	sw   $t0, 30688($gp)
	sw   $t0, 30692($gp)
	sw   $t0, 30696($gp)
	sw   $t0, 30700($gp)
	sw   $t0, 30704($gp)
	sw   $t0, 30708($gp)
	sw   $t0, 30712($gp)
	sw   $t0, 30716($gp)
	sw   $t0, 30720($gp)
	sw   $t0, 30724($gp)
	sw   $t0, 30728($gp)
	sw   $t0, 30732($gp)
	sw   $t0, 30736($gp)
	sw   $t0, 30740($gp)
	sw   $t0, 30744($gp)
	sw   $t0, 30748($gp)
	sw   $t0, 30752($gp)
	sw   $t0, 30756($gp)
	sw   $t0, 30760($gp)
	sw   $t0, 30764($gp)
	sw   $t0, 30768($gp)
	sw   $t0, 30772($gp)
	sw   $t0, 30776($gp)
	sw   $t0, 30780($gp)
	sw   $t0, 30784($gp)
	sw   $t0, 30788($gp)
	sw   $t0, 30792($gp)
	sw   $t0, 30796($gp)
	sw   $t0, 30800($gp)
	sw   $t0, 30804($gp)
	sw   $t0, 30808($gp)
	sw   $t0, 30812($gp)
	sw   $t0, 30816($gp)
	sw   $t0, 30820($gp)
	sw   $t0, 30824($gp)
	sw   $t0, 30828($gp)
	sw   $t0, 30832($gp)
	sw   $t0, 30836($gp)
	sw   $t0, 30840($gp)
	sw   $t0, 30844($gp)
	sw   $t0, 30856($gp)
	sw   $t0, 30860($gp)
	sw   $t0, 30864($gp)
	sw   $t0, 30868($gp)
	sw   $t0, 30872($gp)
	sw   $t0, 30876($gp)
	sw   $t0, 30880($gp)
	sw   $t0, 30884($gp)
	sw   $t0, 30888($gp)
	sw   $t0, 30892($gp)
	sw   $t0, 30896($gp)
	sw   $t0, 30900($gp)
	sw   $t0, 30904($gp)
	sw   $t0, 30908($gp)
	sw   $t0, 30912($gp)
	sw   $t0, 30916($gp)
	sw   $t0, 30920($gp)
	sw   $t0, 30924($gp)
	sw   $t0, 30928($gp)
	sw   $t0, 30932($gp)
	sw   $t0, 30936($gp)
	sw   $t0, 30940($gp)
	sw   $t0, 30944($gp)
	sw   $t0, 30948($gp)
	sw   $t0, 30952($gp)
	sw   $t0, 30956($gp)
	sw   $t0, 30960($gp)
	sw   $t0, 30964($gp)
	sw   $t0, 30968($gp)
	sw   $t0, 30972($gp)
	sw   $t0, 30976($gp)
	sw   $t0, 30980($gp)
	sw   $t0, 30984($gp)
	sw   $t0, 30988($gp)
	sw   $t0, 30992($gp)
	sw   $t0, 30996($gp)
	sw   $t0, 31000($gp)
	sw   $t0, 31004($gp)
	sw   $t0, 31008($gp)
	sw   $t0, 31012($gp)
	sw   $t0, 31016($gp)
	sw   $t0, 31020($gp)
	sw   $t0, 31024($gp)
	sw   $t0, 31028($gp)
	sw   $t0, 31032($gp)
	sw   $t0, 31036($gp)
	sw   $t0, 31040($gp)
	sw   $t0, 31044($gp)
	sw   $t0, 31048($gp)
	sw   $t0, 31052($gp)
	sw   $t0, 31056($gp)
	sw   $t0, 31060($gp)
	sw   $t0, 31064($gp)
	sw   $t0, 31068($gp)
	sw   $t0, 31072($gp)
	sw   $t0, 31076($gp)
	sw   $t0, 31080($gp)
	sw   $t0, 31084($gp)
	sw   $t0, 31088($gp)
	sw   $t0, 31092($gp)
	sw   $t0, 31096($gp)
	sw   $t0, 31100($gp)
	sw   $t0, 31104($gp)
	sw   $t0, 31108($gp)
	sw   $t0, 31112($gp)
	sw   $t0, 31116($gp)
	sw   $t0, 31120($gp)
	sw   $t0, 31124($gp)
	sw   $t0, 31128($gp)
	sw   $t0, 31132($gp)
	sw   $t0, 31136($gp)
	sw   $t0, 31140($gp)
	sw   $t0, 31144($gp)
	sw   $t0, 31148($gp)
	sw   $t0, 31152($gp)
	sw   $t0, 31156($gp)
	sw   $t0, 31160($gp)
	sw   $t0, 31164($gp)
	sw   $t0, 31168($gp)
	sw   $t0, 31172($gp)
	sw   $t0, 31176($gp)
	sw   $t0, 31180($gp)
	sw   $t0, 31184($gp)
	sw   $t0, 31188($gp)
	sw   $t0, 31192($gp)
	sw   $t0, 31196($gp)
	sw   $t0, 31200($gp)
	sw   $t0, 31204($gp)
	sw   $t0, 31208($gp)
	sw   $t0, 31212($gp)
	sw   $t0, 31216($gp)
	sw   $t0, 31220($gp)
	sw   $t0, 31224($gp)
	sw   $t0, 31228($gp)
	sw   $t0, 31232($gp)
	sw   $t0, 31236($gp)
	sw   $t0, 31240($gp)
	sw   $t0, 31244($gp)
	sw   $t0, 31248($gp)
	sw   $t0, 31252($gp)
	sw   $t0, 31256($gp)
	sw   $t0, 31260($gp)
	sw   $t0, 31264($gp)
	sw   $t0, 31268($gp)
	sw   $t0, 31272($gp)
	sw   $t0, 31276($gp)
	sw   $t0, 31280($gp)
	sw   $t0, 31284($gp)
	sw   $t0, 31288($gp)
	sw   $t0, 31292($gp)
	sw   $t0, 31296($gp)
	sw   $t0, 31300($gp)
	sw   $t0, 31304($gp)
	sw   $t0, 31308($gp)
	sw   $t0, 31312($gp)
	sw   $t0, 31316($gp)
	sw   $t0, 31320($gp)
	sw   $t0, 31324($gp)
	sw   $t0, 31328($gp)
	sw   $t0, 31332($gp)
	sw   $t0, 31336($gp)
	sw   $t0, 31340($gp)
	sw   $t0, 31344($gp)
	sw   $t0, 31352($gp)
	sw   $t0, 31356($gp)
	sw   $t0, 31360($gp)
	sw   $t0, 31364($gp)
	sw   $t0, 31368($gp)
	sw   $t0, 31372($gp)
	sw   $t0, 31376($gp)
	sw   $t0, 31380($gp)
	sw   $t0, 31384($gp)
	sw   $t0, 31388($gp)
	sw   $t0, 31392($gp)
	sw   $t0, 31396($gp)
	sw   $t0, 31400($gp)
	sw   $t0, 31404($gp)
	sw   $t0, 31408($gp)
	sw   $t0, 31412($gp)
	sw   $t0, 31416($gp)
	sw   $t0, 31420($gp)
	sw   $t0, 31424($gp)
	sw   $t0, 31428($gp)
	sw   $t0, 31432($gp)
	sw   $t0, 31436($gp)
	sw   $t0, 31440($gp)
	sw   $t0, 31444($gp)
	sw   $t0, 31448($gp)
	sw   $t0, 31452($gp)
	sw   $t0, 31456($gp)
	sw   $t0, 31460($gp)
	sw   $t0, 31464($gp)
	sw   $t0, 31468($gp)
	sw   $t0, 31472($gp)
	sw   $t0, 31476($gp)
	sw   $t0, 31480($gp)
	sw   $t0, 31484($gp)
	sw   $t0, 31488($gp)
	sw   $t0, 31492($gp)
	sw   $t0, 31496($gp)
	sw   $t0, 31500($gp)
	sw   $t0, 31504($gp)
	sw   $t0, 31508($gp)
	sw   $t0, 31512($gp)
	sw   $t0, 31516($gp)
	sw   $t0, 31520($gp)
	sw   $t0, 31524($gp)
	sw   $t0, 31528($gp)
	sw   $t0, 31532($gp)
	sw   $t0, 31536($gp)
	sw   $t0, 31540($gp)
	sw   $t0, 31544($gp)
	sw   $t0, 31548($gp)
	sw   $t0, 31552($gp)
	sw   $t0, 31556($gp)
	sw   $t0, 31560($gp)
	sw   $t0, 31564($gp)
	sw   $t0, 31568($gp)
	sw   $t0, 31572($gp)
	sw   $t0, 31576($gp)
	sw   $t0, 31580($gp)
	sw   $t0, 31588($gp)
	sw   $t0, 31592($gp)
	sw   $t0, 31596($gp)
	sw   $t0, 31600($gp)
	sw   $t0, 31608($gp)
	sw   $t0, 31612($gp)
	sw   $t0, 31624($gp)
	sw   $t0, 31628($gp)
	sw   $t0, 31632($gp)
	sw   $t0, 31636($gp)
	sw   $t0, 31640($gp)
	sw   $t0, 31644($gp)
	sw   $t0, 31648($gp)
	sw   $t0, 31652($gp)
	sw   $t0, 31656($gp)
	sw   $t0, 31660($gp)
	sw   $t0, 31664($gp)
	sw   $t0, 31668($gp)
	sw   $t0, 31672($gp)
	sw   $t0, 31676($gp)
	sw   $t0, 31680($gp)
	sw   $t0, 31684($gp)
	sw   $t0, 31688($gp)
	sw   $t0, 31692($gp)
	sw   $t0, 31696($gp)
	sw   $t0, 31700($gp)
	sw   $t0, 31704($gp)
	sw   $t0, 31708($gp)
	sw   $t0, 31712($gp)
	sw   $t0, 31716($gp)
	sw   $t0, 31720($gp)
	sw   $t0, 31724($gp)
	sw   $t0, 31728($gp)
	sw   $t0, 31732($gp)
	sw   $t0, 31736($gp)
	sw   $t0, 31740($gp)
	sw   $t0, 31744($gp)
	sw   $t0, 31748($gp)
	sw   $t0, 31752($gp)
	sw   $t0, 31756($gp)
	sw   $t0, 31760($gp)
	sw   $t0, 31764($gp)
	sw   $t0, 31768($gp)
	sw   $t0, 31772($gp)
	sw   $t0, 31776($gp)
	sw   $t0, 31780($gp)
	sw   $t0, 31784($gp)
	sw   $t0, 31788($gp)
	sw   $t0, 31792($gp)
	sw   $t0, 31796($gp)
	sw   $t0, 31800($gp)
	sw   $t0, 31804($gp)
	sw   $t0, 31808($gp)
	sw   $t0, 31812($gp)
	sw   $t0, 31816($gp)
	sw   $t0, 31824($gp)
	sw   $t0, 31828($gp)
	sw   $t0, 31832($gp)
	sw   $t0, 31836($gp)
	sw   $t0, 31840($gp)
	sw   $t0, 31844($gp)
	sw   $t0, 31848($gp)
	sw   $t0, 31872($gp)
	sw   $t0, 31876($gp)
	sw   $t0, 31880($gp)
	sw   $t0, 31884($gp)
	sw   $t0, 31888($gp)
	sw   $t0, 31892($gp)
	sw   $t0, 31896($gp)
	sw   $t0, 31900($gp)
	sw   $t0, 31904($gp)
	sw   $t0, 31908($gp)
	sw   $t0, 31912($gp)
	sw   $t0, 31916($gp)
	sw   $t0, 31920($gp)
	sw   $t0, 31924($gp)
	sw   $t0, 31928($gp)
	sw   $t0, 31932($gp)
	sw   $t0, 31936($gp)
	sw   $t0, 31940($gp)
	sw   $t0, 31944($gp)
	sw   $t0, 31948($gp)
	sw   $t0, 31952($gp)
	sw   $t0, 31956($gp)
	sw   $t0, 31960($gp)
	sw   $t0, 31964($gp)
	sw   $t0, 31968($gp)
	sw   $t0, 31972($gp)
	sw   $t0, 31976($gp)
	sw   $t0, 31980($gp)
	sw   $t0, 31984($gp)
	sw   $t0, 31988($gp)
	sw   $t0, 31992($gp)
	sw   $t0, 31996($gp)
	sw   $t0, 32000($gp)
	sw   $t0, 32004($gp)
	sw   $t0, 32008($gp)
	sw   $t0, 32012($gp)
	sw   $t0, 32016($gp)
	sw   $t0, 32020($gp)
	sw   $t0, 32024($gp)
	sw   $t0, 32028($gp)
	sw   $t0, 32032($gp)
	sw   $t0, 32036($gp)
	sw   $t0, 32040($gp)
	sw   $t0, 32044($gp)
	sw   $t0, 32048($gp)
	sw   $t0, 32052($gp)
	sw   $t0, 32056($gp)
	sw   $t0, 32060($gp)
	sw   $t0, 32064($gp)
	sw   $t0, 32068($gp)
	sw   $t0, 32072($gp)
	sw   $t0, 32076($gp)
	sw   $t0, 32080($gp)
	sw   $t0, 32084($gp)
	sw   $t0, 32088($gp)
	sw   $t0, 32092($gp)
	sw   $t0, 32096($gp)
	sw   $t0, 32100($gp)
	sw   $t0, 32104($gp)
	sw   $t0, 32108($gp)
	sw   $t0, 32112($gp)
	sw   $t0, 32120($gp)
	sw   $t0, 32124($gp)
	sw   $t0, 32128($gp)
	sw   $t0, 32132($gp)
	sw   $t0, 32136($gp)
	sw   $t0, 32140($gp)
	sw   $t0, 32144($gp)
	sw   $t0, 32148($gp)
	sw   $t0, 32152($gp)
	sw   $t0, 32156($gp)
	sw   $t0, 32160($gp)
	sw   $t0, 32164($gp)
	sw   $t0, 32168($gp)
	sw   $t0, 32172($gp)
	sw   $t0, 32176($gp)
	sw   $t0, 32180($gp)
	sw   $t0, 32184($gp)
	sw   $t0, 32188($gp)
	sw   $t0, 32192($gp)
	sw   $t0, 32196($gp)
	sw   $t0, 32200($gp)
	sw   $t0, 32204($gp)
	sw   $t0, 32208($gp)
	sw   $t0, 32212($gp)
	sw   $t0, 32216($gp)
	sw   $t0, 32220($gp)
	sw   $t0, 32224($gp)
	sw   $t0, 32228($gp)
	sw   $t0, 32232($gp)
	sw   $t0, 32236($gp)
	sw   $t0, 32240($gp)
	sw   $t0, 32244($gp)
	sw   $t0, 32248($gp)
	sw   $t0, 32252($gp)
	sw   $t0, 32256($gp)
	sw   $t0, 32260($gp)
	sw   $t0, 32264($gp)
	sw   $t0, 32268($gp)
	sw   $t0, 32272($gp)
	sw   $t0, 32276($gp)
	sw   $t0, 32280($gp)
	sw   $t0, 32284($gp)
	sw   $t0, 32288($gp)
	sw   $t0, 32292($gp)
	sw   $t0, 32296($gp)
	sw   $t0, 32300($gp)
	sw   $t0, 32304($gp)
	sw   $t0, 32308($gp)
	sw   $t0, 32312($gp)
	sw   $t0, 32316($gp)
	sw   $t0, 32320($gp)
	sw   $t0, 32324($gp)
	sw   $t0, 32328($gp)
	sw   $t0, 32332($gp)
	sw   $t0, 32336($gp)
	sw   $t0, 32340($gp)
	sw   $t0, 32344($gp)
	sw   $t0, 32348($gp)
	sw   $t0, 32352($gp)
	sw   $t0, 32356($gp)
	sw   $t0, 32360($gp)
	sw   $t0, 32364($gp)
	sw   $t0, 32368($gp)
	sw   $t0, 32376($gp)
	sw   $t0, 32380($gp)
	sw   $t0, 32384($gp)
	sw   $t0, 32388($gp)
	sw   $t0, 32392($gp)
	sw   $t0, 32396($gp)
	sw   $t0, 32400($gp)
	sw   $t0, 32404($gp)
	sw   $t0, 32408($gp)
	sw   $t0, 32412($gp)
	sw   $t0, 32416($gp)
	sw   $t0, 32420($gp)
	sw   $t0, 32424($gp)
	sw   $t0, 32428($gp)
	sw   $t0, 32432($gp)
	sw   $t0, 32436($gp)
	sw   $t0, 32440($gp)
	sw   $t0, 32444($gp)
	sw   $t0, 32448($gp)
	sw   $t0, 32452($gp)
	sw   $t0, 32456($gp)
	sw   $t0, 32460($gp)
	sw   $t0, 32464($gp)
	sw   $t0, 32468($gp)
	sw   $t0, 32472($gp)
	sw   $t0, 32476($gp)
	sw   $t0, 32480($gp)
	sw   $t0, 32484($gp)
	sw   $t0, 32488($gp)
	sw   $t0, 32492($gp)
	sw   $t0, 32496($gp)
	sw   $t0, 32500($gp)
	sw   $t0, 32504($gp)
	sw   $t0, 32508($gp)
	sw   $t0, 32512($gp)
	sw   $t0, 32516($gp)
	sw   $t0, 32520($gp)
	sw   $t0, 32524($gp)
	sw   $t0, 32528($gp)
	sw   $t0, 32532($gp)
	sw   $t0, 32536($gp)
	sw   $t0, 32540($gp)
	sw   $t0, 32544($gp)
	sw   $t0, 32548($gp)
	sw   $t0, 32552($gp)
	sw   $t0, 32556($gp)
	sw   $t0, 32560($gp)
	sw   $t0, 32564($gp)
	sw   $t0, 32568($gp)
	sw   $t0, 32572($gp)
	sw   $t0, 32576($gp)
	sw   $t0, 32580($gp)
	sw   $t0, 32584($gp)
	sw   $t0, 32588($gp)
	sw   $t0, 32592($gp)
	sw   $t0, 32596($gp)
	sw   $t0, 32600($gp)
	sw   $t0, 32604($gp)
	sw   $t0, 32608($gp)
	sw   $t0, 32612($gp)
	sw   $t0, 32616($gp)
	sw   $t0, 32620($gp)
	sw   $t0, 32624($gp)
	sw   $t0, 32628($gp)
	sw   $t0, 32632($gp)
	sw   $t0, 32636($gp)
	sw   $t0, 32640($gp)
	sw   $t0, 32644($gp)
	sw   $t0, 32648($gp)
	sw   $t0, 32652($gp)
	sw   $t0, 32656($gp)
	sw   $t0, 32660($gp)
	sw   $t0, 32664($gp)
	sw   $t0, 32668($gp)
	sw   $t0, 32672($gp)
	sw   $t0, 32676($gp)
	sw   $t0, 32680($gp)
	sw   $t0, 32684($gp)
	sw   $t0, 32688($gp)
	sw   $t0, 32692($gp)
	sw   $t0, 32696($gp)
	sw   $t0, 32700($gp)
	sw   $t0, 32704($gp)
	sw   $t0, 32708($gp)
	sw   $t0, 32712($gp)
	sw   $t0, 32716($gp)
	sw   $t0, 32720($gp)
	sw   $t0, 32724($gp)
	sw   $t0, 32728($gp)
	sw   $t0, 32732($gp)
	sw   $t0, 32736($gp)
	sw   $t0, 32740($gp)
	sw   $t0, 32744($gp)
	sw   $t0, 32748($gp)
	sw   $t0, 32752($gp)
	sw   $t0, 32756($gp)
	sw   $t0, 32760($gp)
	sw   $t0, 32764($gp)

	# Pale Yellow
	li   $t0, 0x00ffd342
	sw   $t0, 19576($gp)
	sw   $t0, 19580($gp)
	sw   $t0, 19584($gp)
	sw   $t0, 19588($gp)
	sw   $t0, 19592($gp)
	sw   $t0, 19824($gp)
	sw   $t0, 19828($gp)
	sw   $t0, 19832($gp)
	sw   $t0, 19836($gp)
	sw   $t0, 19840($gp)
	sw   $t0, 19844($gp)
	sw   $t0, 19848($gp)
	sw   $t0, 19852($gp)
	sw   $t0, 19856($gp)
	sw   $t0, 20076($gp)
	sw   $t0, 20080($gp)
	sw   $t0, 20084($gp)
	sw   $t0, 20088($gp)
	sw   $t0, 20092($gp)
	sw   $t0, 20096($gp)
	sw   $t0, 20100($gp)
	sw   $t0, 20104($gp)
	sw   $t0, 20108($gp)
	sw   $t0, 20112($gp)
	sw   $t0, 20116($gp)
	sw   $t0, 20328($gp)
	sw   $t0, 20332($gp)
	sw   $t0, 20336($gp)
	sw   $t0, 20340($gp)
	sw   $t0, 20344($gp)
	sw   $t0, 20348($gp)
	sw   $t0, 20352($gp)
	sw   $t0, 20356($gp)
	sw   $t0, 20360($gp)
	sw   $t0, 20364($gp)
	sw   $t0, 20368($gp)
	sw   $t0, 20372($gp)
	sw   $t0, 20376($gp)
	sw   $t0, 20584($gp)
	sw   $t0, 20588($gp)
	sw   $t0, 20592($gp)
	sw   $t0, 20596($gp)
	sw   $t0, 20600($gp)
	sw   $t0, 20604($gp)
	sw   $t0, 20608($gp)
	sw   $t0, 20612($gp)
	sw   $t0, 20616($gp)
	sw   $t0, 20620($gp)
	sw   $t0, 20624($gp)
	sw   $t0, 20628($gp)
	sw   $t0, 20632($gp)
	sw   $t0, 20836($gp)
	sw   $t0, 20840($gp)
	sw   $t0, 20844($gp)
	sw   $t0, 20848($gp)
	sw   $t0, 20852($gp)
	sw   $t0, 20856($gp)
	sw   $t0, 20860($gp)
	sw   $t0, 20864($gp)
	sw   $t0, 20868($gp)
	sw   $t0, 20872($gp)
	sw   $t0, 20876($gp)
	sw   $t0, 20880($gp)
	sw   $t0, 20884($gp)
	sw   $t0, 20888($gp)
	sw   $t0, 20892($gp)
	sw   $t0, 21092($gp)
	sw   $t0, 21096($gp)
	sw   $t0, 21100($gp)
	sw   $t0, 21104($gp)
	sw   $t0, 21108($gp)
	sw   $t0, 21112($gp)
	sw   $t0, 21116($gp)
	sw   $t0, 21120($gp)
	sw   $t0, 21124($gp)
	sw   $t0, 21128($gp)
	sw   $t0, 21132($gp)
	sw   $t0, 21136($gp)
	sw   $t0, 21140($gp)
	sw   $t0, 21144($gp)
	sw   $t0, 21148($gp)
	sw   $t0, 21348($gp)
	sw   $t0, 21352($gp)
	sw   $t0, 21356($gp)
	sw   $t0, 21360($gp)
	sw   $t0, 21364($gp)
	sw   $t0, 21368($gp)
	sw   $t0, 21372($gp)
	sw   $t0, 21376($gp)
	sw   $t0, 21380($gp)
	sw   $t0, 21384($gp)
	sw   $t0, 21388($gp)
	sw   $t0, 21392($gp)
	sw   $t0, 21396($gp)
	sw   $t0, 21400($gp)
	sw   $t0, 21404($gp)
	sw   $t0, 21604($gp)
	sw   $t0, 21608($gp)
	sw   $t0, 21612($gp)
	sw   $t0, 21616($gp)
	sw   $t0, 21620($gp)
	sw   $t0, 21624($gp)
	sw   $t0, 21628($gp)
	sw   $t0, 21632($gp)
	sw   $t0, 21636($gp)
	sw   $t0, 21640($gp)
	sw   $t0, 21644($gp)
	sw   $t0, 21648($gp)
	sw   $t0, 21652($gp)
	sw   $t0, 21656($gp)
	sw   $t0, 21660($gp)
	sw   $t0, 21872($gp)
	sw   $t0, 21876($gp)
	sw   $t0, 21880($gp)
	sw   $t0, 21884($gp)
	sw   $t0, 21888($gp)
	sw   $t0, 21892($gp)
	sw   $t0, 21896($gp)
	sw   $t0, 21900($gp)
	sw   $t0, 21904($gp)
	sw   $t0, 21908($gp)
	sw   $t0, 21912($gp)
	sw   $t0, 21916($gp)
	sw   $t0, 22136($gp)
	sw   $t0, 22140($gp)
	sw   $t0, 22144($gp)
	sw   $t0, 22148($gp)
	sw   $t0, 22152($gp)
	sw   $t0, 22156($gp)
	sw   $t0, 22160($gp)
	sw   $t0, 22164($gp)
	sw   $t0, 22168($gp)
	sw   $t0, 22396($gp)
	sw   $t0, 22400($gp)
	sw   $t0, 22404($gp)
	sw   $t0, 22408($gp)
	sw   $t0, 22412($gp)
	sw   $t0, 22416($gp)
	sw   $t0, 22420($gp)
	sw   $t0, 22424($gp)
	sw   $t0, 22656($gp)
	sw   $t0, 22660($gp)
	sw   $t0, 22664($gp)
	sw   $t0, 22668($gp)
	sw   $t0, 22672($gp)
	sw   $t0, 22676($gp)
	sw   $t0, 22916($gp)
	sw   $t0, 22920($gp)
	sw   $t0, 22924($gp)
	sw   $t0, 24460($gp)
	sw   $t0, 24464($gp)
	sw   $t0, 24468($gp)
	sw   $t0, 24476($gp)
	sw   $t0, 24488($gp)
	sw   $t0, 24492($gp)
	sw   $t0, 24496($gp)
	sw   $t0, 24700($gp)
	sw   $t0, 24704($gp)
	sw   $t0, 24708($gp)
	sw   $t0, 24712($gp)
	sw   $t0, 24728($gp)
	sw   $t0, 24732($gp)
	sw   $t0, 24736($gp)
	sw   $t0, 24740($gp)
	sw   $t0, 24744($gp)
	sw   $t0, 24748($gp)
	sw   $t0, 24752($gp)
	sw   $t0, 24756($gp)
	sw   $t0, 24760($gp)
	sw   $t0, 24764($gp)
	sw   $t0, 25712($gp)
	sw   $t0, 25716($gp)
	sw   $t0, 25720($gp)
	sw   $t0, 25724($gp)
	sw   $t0, 25732($gp)
	sw   $t0, 25736($gp)
	sw   $t0, 25740($gp)
	sw   $t0, 25744($gp)
	sw   $t0, 25960($gp)
	sw   $t0, 25976($gp)
	sw   $t0, 25980($gp)
	sw   $t0, 25984($gp)
	sw   $t0, 25988($gp)
	sw   $t0, 26004($gp)
	sw   $t0, 26008($gp)
	sw   $t0, 26012($gp)
	sw   $t0, 26200($gp)
	sw   $t0, 26204($gp)
	sw   $t0, 26208($gp)
	sw   $t0, 26212($gp)
	sw   $t0, 26216($gp)
	sw   $t0, 26220($gp)
	sw   $t0, 26224($gp)
	sw   $t0, 26228($gp)
	sw   $t0, 26236($gp)
	sw   $t0, 26240($gp)
	sw   $t0, 26244($gp)
	sw   $t0, 26248($gp)
	sw   $t0, 26260($gp)
	sw   $t0, 26264($gp)
	sw   $t0, 26268($gp)
	sw   $t0, 26736($gp)
	sw   $t0, 26740($gp)
	sw   $t0, 26744($gp)
	sw   $t0, 26748($gp)
	sw   $t0, 26752($gp)
	sw   $t0, 26984($gp)
	sw   $t0, 27000($gp)
	sw   $t0, 27004($gp)
	sw   $t0, 27008($gp)
	sw   $t0, 27012($gp)
	sw   $t0, 27016($gp)
	sw   $t0, 27020($gp)
	sw   $t0, 27024($gp)
	sw   $t0, 27028($gp)
	sw   $t0, 27772($gp)
	sw   $t0, 27776($gp)
	sw   $t0, 27780($gp)
	sw   $t0, 27784($gp)
	sw   $t0, 27788($gp)
	sw   $t0, 28268($gp)
	sw   $t0, 28272($gp)
	sw   $t0, 28276($gp)
	sw   $t0, 28288($gp)
	sw   $t0, 28292($gp)
	sw   $t0, 28532($gp)
	sw   $t0, 28536($gp)
	sw   $t0, 28548($gp)
	sw   $t0, 28552($gp)
	sw   $t0, 28556($gp)
	sw   $t0, 28560($gp)
	sw   $t0, 29300($gp)
	sw   $t0, 29304($gp)
	sw   $t0, 29308($gp)
	sw   $t0, 29316($gp)
	sw   $t0, 29320($gp)
	sw   $t0, 29576($gp)
	sw   $t0, 29580($gp)
	sw   $t0, 29584($gp)
	sw   $t0, 30328($gp)
	sw   $t0, 30332($gp)
	sw   $t0, 30336($gp)
	sw   $t0, 30340($gp)
	sw   $t0, 30344($gp)
	sw   $t0, 30348($gp)
	sw   $t0, 30848($gp)
	sw   $t0, 30852($gp)
	sw   $t0, 31616($gp)
	sw   $t0, 31620($gp)

	# Light Grey
	li   $t0, 0x00525252
	sw   $t0, 20736($gp)
	sw   $t0, 20740($gp)
	sw   $t0, 20992($gp)
	sw   $t0, 20996($gp)
	sw   $t0, 21000($gp)
	sw   $t0, 21004($gp)
	sw   $t0, 21008($gp)
	sw   $t0, 21012($gp)
	sw   $t0, 21016($gp)
	sw   $t0, 21020($gp)
	sw   $t0, 21024($gp)
	sw   $t0, 21028($gp)
	sw   $t0, 21032($gp)
	sw   $t0, 21036($gp)
	sw   $t0, 21040($gp)
	sw   $t0, 21248($gp)
	sw   $t0, 21252($gp)
	sw   $t0, 21256($gp)
	sw   $t0, 21260($gp)
	sw   $t0, 21264($gp)
	sw   $t0, 21268($gp)
	sw   $t0, 21272($gp)
	sw   $t0, 21276($gp)
	sw   $t0, 21280($gp)
	sw   $t0, 21284($gp)
	sw   $t0, 21288($gp)
	sw   $t0, 21292($gp)
	sw   $t0, 21296($gp)
	sw   $t0, 21300($gp)
	sw   $t0, 21304($gp)
	sw   $t0, 21308($gp)
	sw   $t0, 21312($gp)
	sw   $t0, 21504($gp)
	sw   $t0, 21508($gp)
	sw   $t0, 21512($gp)
	sw   $t0, 21516($gp)
	sw   $t0, 21520($gp)
	sw   $t0, 21524($gp)
	sw   $t0, 21528($gp)
	sw   $t0, 21532($gp)
	sw   $t0, 21536($gp)
	sw   $t0, 21540($gp)
	sw   $t0, 21544($gp)
	sw   $t0, 21548($gp)
	sw   $t0, 21552($gp)
	sw   $t0, 21556($gp)
	sw   $t0, 21560($gp)
	sw   $t0, 21564($gp)
	sw   $t0, 21568($gp)
	sw   $t0, 21572($gp)
	sw   $t0, 21576($gp)
	sw   $t0, 21580($gp)
	sw   $t0, 21584($gp)
	sw   $t0, 21588($gp)
	sw   $t0, 21592($gp)
	sw   $t0, 21596($gp)
	sw   $t0, 21600($gp)
	sw   $t0, 21760($gp)
	sw   $t0, 21764($gp)
	sw   $t0, 21768($gp)
	sw   $t0, 21772($gp)
	sw   $t0, 21776($gp)
	sw   $t0, 21780($gp)
	sw   $t0, 21784($gp)
	sw   $t0, 21788($gp)
	sw   $t0, 21792($gp)
	sw   $t0, 21796($gp)
	sw   $t0, 21800($gp)
	sw   $t0, 21804($gp)
	sw   $t0, 21808($gp)
	sw   $t0, 21812($gp)
	sw   $t0, 21816($gp)
	sw   $t0, 21820($gp)
	sw   $t0, 21824($gp)
	sw   $t0, 21828($gp)
	sw   $t0, 21832($gp)
	sw   $t0, 21836($gp)
	sw   $t0, 21840($gp)
	sw   $t0, 21844($gp)
	sw   $t0, 21848($gp)
	sw   $t0, 21852($gp)
	sw   $t0, 21856($gp)
	sw   $t0, 21860($gp)
	sw   $t0, 21864($gp)
	sw   $t0, 21868($gp)
	sw   $t0, 22016($gp)
	sw   $t0, 22020($gp)
	sw   $t0, 22024($gp)
	sw   $t0, 22028($gp)
	sw   $t0, 22032($gp)
	sw   $t0, 22036($gp)
	sw   $t0, 22052($gp)
	sw   $t0, 22056($gp)
	sw   $t0, 22060($gp)
	sw   $t0, 22064($gp)
	sw   $t0, 22068($gp)
	sw   $t0, 22072($gp)
	sw   $t0, 22076($gp)
	sw   $t0, 22080($gp)
	sw   $t0, 22120($gp)
	sw   $t0, 22124($gp)
	sw   $t0, 22128($gp)
	sw   $t0, 22132($gp)
	sw   $t0, 22272($gp)
	sw   $t0, 22284($gp)
	sw   $t0, 22288($gp)
	sw   $t0, 22384($gp)
	sw   $t0, 22388($gp)
	sw   $t0, 22392($gp)
	sw   $t0, 22644($gp)
	sw   $t0, 22648($gp)
	sw   $t0, 22652($gp)
	sw   $t0, 22904($gp)
	sw   $t0, 22908($gp)
	sw   $t0, 22912($gp)
	sw   $t0, 23168($gp)
	sw   $t0, 23172($gp)
	sw   $t0, 23176($gp)
	sw   $t0, 23424($gp)
	sw   $t0, 23428($gp)
	sw   $t0, 23436($gp)
	sw   $t0, 23684($gp)
	sw   $t0, 23688($gp)
	sw   $t0, 23692($gp)
	sw   $t0, 23944($gp)
	sw   $t0, 24448($gp)
	sw   $t0, 24452($gp)

	# Dark Grey
	li   $t0, 0x00383838
	sw   $t0, 22040($gp)
	sw   $t0, 22044($gp)
	sw   $t0, 22048($gp)
	sw   $t0, 22084($gp)
	sw   $t0, 22088($gp)
	sw   $t0, 22092($gp)
	sw   $t0, 22096($gp)
	sw   $t0, 22100($gp)
	sw   $t0, 22104($gp)
	sw   $t0, 22108($gp)
	sw   $t0, 22112($gp)
	sw   $t0, 22116($gp)
	sw   $t0, 22276($gp)
	sw   $t0, 22280($gp)
	sw   $t0, 22292($gp)
	sw   $t0, 22296($gp)
	sw   $t0, 22300($gp)
	sw   $t0, 22304($gp)
	sw   $t0, 22308($gp)
	sw   $t0, 22312($gp)
	sw   $t0, 22316($gp)
	sw   $t0, 22320($gp)
	sw   $t0, 22324($gp)
	sw   $t0, 22328($gp)
	sw   $t0, 22332($gp)
	sw   $t0, 22336($gp)
	sw   $t0, 22340($gp)
	sw   $t0, 22344($gp)
	sw   $t0, 22348($gp)
	sw   $t0, 22352($gp)
	sw   $t0, 22356($gp)
	sw   $t0, 22360($gp)
	sw   $t0, 22364($gp)
	sw   $t0, 22368($gp)
	sw   $t0, 22372($gp)
	sw   $t0, 22376($gp)
	sw   $t0, 22380($gp)
	sw   $t0, 22528($gp)
	sw   $t0, 22532($gp)
	sw   $t0, 22536($gp)
	sw   $t0, 22540($gp)
	sw   $t0, 22544($gp)
	sw   $t0, 22548($gp)
	sw   $t0, 22552($gp)
	sw   $t0, 22556($gp)
	sw   $t0, 22560($gp)
	sw   $t0, 22564($gp)
	sw   $t0, 22568($gp)
	sw   $t0, 22572($gp)
	sw   $t0, 22576($gp)
	sw   $t0, 22580($gp)
	sw   $t0, 22584($gp)
	sw   $t0, 22588($gp)
	sw   $t0, 22592($gp)
	sw   $t0, 22596($gp)
	sw   $t0, 22600($gp)
	sw   $t0, 22604($gp)
	sw   $t0, 22608($gp)
	sw   $t0, 22612($gp)
	sw   $t0, 22616($gp)
	sw   $t0, 22620($gp)
	sw   $t0, 22624($gp)
	sw   $t0, 22628($gp)
	sw   $t0, 22632($gp)
	sw   $t0, 22636($gp)
	sw   $t0, 22640($gp)
	sw   $t0, 22784($gp)
	sw   $t0, 22788($gp)
	sw   $t0, 22792($gp)
	sw   $t0, 22796($gp)
	sw   $t0, 22800($gp)
	sw   $t0, 22804($gp)
	sw   $t0, 22808($gp)
	sw   $t0, 22812($gp)
	sw   $t0, 22816($gp)
	sw   $t0, 22820($gp)
	sw   $t0, 22824($gp)
	sw   $t0, 22828($gp)
	sw   $t0, 22832($gp)
	sw   $t0, 22836($gp)
	sw   $t0, 22840($gp)
	sw   $t0, 22844($gp)
	sw   $t0, 22848($gp)
	sw   $t0, 22852($gp)
	sw   $t0, 22856($gp)
	sw   $t0, 22860($gp)
	sw   $t0, 22864($gp)
	sw   $t0, 22868($gp)
	sw   $t0, 22872($gp)
	sw   $t0, 22876($gp)
	sw   $t0, 22880($gp)
	sw   $t0, 22884($gp)
	sw   $t0, 22888($gp)
	sw   $t0, 22892($gp)
	sw   $t0, 22896($gp)
	sw   $t0, 22900($gp)
	sw   $t0, 23040($gp)
	sw   $t0, 23044($gp)
	sw   $t0, 23048($gp)
	sw   $t0, 23052($gp)
	sw   $t0, 23056($gp)
	sw   $t0, 23060($gp)
	sw   $t0, 23064($gp)
	sw   $t0, 23068($gp)
	sw   $t0, 23072($gp)
	sw   $t0, 23076($gp)
	sw   $t0, 23080($gp)
	sw   $t0, 23084($gp)
	sw   $t0, 23088($gp)
	sw   $t0, 23092($gp)
	sw   $t0, 23096($gp)
	sw   $t0, 23100($gp)
	sw   $t0, 23104($gp)
	sw   $t0, 23108($gp)
	sw   $t0, 23112($gp)
	sw   $t0, 23116($gp)
	sw   $t0, 23120($gp)
	sw   $t0, 23124($gp)
	sw   $t0, 23128($gp)
	sw   $t0, 23132($gp)
	sw   $t0, 23136($gp)
	sw   $t0, 23140($gp)
	sw   $t0, 23144($gp)
	sw   $t0, 23148($gp)
	sw   $t0, 23152($gp)
	sw   $t0, 23156($gp)
	sw   $t0, 23160($gp)
	sw   $t0, 23164($gp)
	sw   $t0, 23296($gp)
	sw   $t0, 23300($gp)
	sw   $t0, 23304($gp)
	sw   $t0, 23308($gp)
	sw   $t0, 23312($gp)
	sw   $t0, 23316($gp)
	sw   $t0, 23320($gp)
	sw   $t0, 23324($gp)
	sw   $t0, 23328($gp)
	sw   $t0, 23332($gp)
	sw   $t0, 23336($gp)
	sw   $t0, 23340($gp)
	sw   $t0, 23344($gp)
	sw   $t0, 23348($gp)
	sw   $t0, 23352($gp)
	sw   $t0, 23356($gp)
	sw   $t0, 23360($gp)
	sw   $t0, 23364($gp)
	sw   $t0, 23368($gp)
	sw   $t0, 23372($gp)
	sw   $t0, 23376($gp)
	sw   $t0, 23380($gp)
	sw   $t0, 23384($gp)
	sw   $t0, 23388($gp)
	sw   $t0, 23392($gp)
	sw   $t0, 23396($gp)
	sw   $t0, 23400($gp)
	sw   $t0, 23404($gp)
	sw   $t0, 23408($gp)
	sw   $t0, 23412($gp)
	sw   $t0, 23416($gp)
	sw   $t0, 23420($gp)
	sw   $t0, 23552($gp)
	sw   $t0, 23556($gp)
	sw   $t0, 23560($gp)
	sw   $t0, 23564($gp)
	sw   $t0, 23568($gp)
	sw   $t0, 23572($gp)
	sw   $t0, 23576($gp)
	sw   $t0, 23580($gp)
	sw   $t0, 23584($gp)
	sw   $t0, 23588($gp)
	sw   $t0, 23592($gp)
	sw   $t0, 23596($gp)
	sw   $t0, 23600($gp)
	sw   $t0, 23604($gp)
	sw   $t0, 23608($gp)
	sw   $t0, 23612($gp)
	sw   $t0, 23616($gp)
	sw   $t0, 23620($gp)
	sw   $t0, 23624($gp)
	sw   $t0, 23628($gp)
	sw   $t0, 23632($gp)
	sw   $t0, 23636($gp)
	sw   $t0, 23640($gp)
	sw   $t0, 23644($gp)
	sw   $t0, 23648($gp)
	sw   $t0, 23652($gp)
	sw   $t0, 23656($gp)
	sw   $t0, 23660($gp)
	sw   $t0, 23664($gp)
	sw   $t0, 23668($gp)
	sw   $t0, 23672($gp)
	sw   $t0, 23676($gp)
	sw   $t0, 23680($gp)
	sw   $t0, 23808($gp)
	sw   $t0, 23812($gp)
	sw   $t0, 23816($gp)
	sw   $t0, 23820($gp)
	sw   $t0, 23824($gp)
	sw   $t0, 23828($gp)
	sw   $t0, 23832($gp)
	sw   $t0, 23836($gp)
	sw   $t0, 23840($gp)
	sw   $t0, 23844($gp)
	sw   $t0, 23848($gp)
	sw   $t0, 23852($gp)
	sw   $t0, 23856($gp)
	sw   $t0, 23860($gp)
	sw   $t0, 23864($gp)
	sw   $t0, 23868($gp)
	sw   $t0, 23872($gp)
	sw   $t0, 23876($gp)
	sw   $t0, 23880($gp)
	sw   $t0, 23884($gp)
	sw   $t0, 23888($gp)
	sw   $t0, 23892($gp)
	sw   $t0, 23896($gp)
	sw   $t0, 23900($gp)
	sw   $t0, 23904($gp)
	sw   $t0, 23908($gp)
	sw   $t0, 23912($gp)
	sw   $t0, 23916($gp)
	sw   $t0, 23920($gp)
	sw   $t0, 23924($gp)
	sw   $t0, 23928($gp)
	sw   $t0, 23936($gp)
	sw   $t0, 24064($gp)
	sw   $t0, 24068($gp)
	sw   $t0, 24072($gp)
	sw   $t0, 24076($gp)
	sw   $t0, 24080($gp)
	sw   $t0, 24084($gp)
	sw   $t0, 24088($gp)
	sw   $t0, 24092($gp)
	sw   $t0, 24096($gp)
	sw   $t0, 24100($gp)
	sw   $t0, 24104($gp)
	sw   $t0, 24108($gp)
	sw   $t0, 24112($gp)
	sw   $t0, 24116($gp)
	sw   $t0, 24120($gp)
	sw   $t0, 24124($gp)
	sw   $t0, 24128($gp)
	sw   $t0, 24132($gp)
	sw   $t0, 24136($gp)
	sw   $t0, 24140($gp)
	sw   $t0, 24144($gp)
	sw   $t0, 24148($gp)
	sw   $t0, 24152($gp)
	sw   $t0, 24156($gp)
	sw   $t0, 24160($gp)
	sw   $t0, 24164($gp)
	sw   $t0, 24168($gp)
	sw   $t0, 24172($gp)
	sw   $t0, 24176($gp)
	sw   $t0, 24180($gp)
	sw   $t0, 24184($gp)
	sw   $t0, 24188($gp)
	sw   $t0, 24192($gp)
	sw   $t0, 24196($gp)
	sw   $t0, 24320($gp)
	sw   $t0, 24324($gp)
	sw   $t0, 24328($gp)
	sw   $t0, 24332($gp)
	sw   $t0, 24336($gp)
	sw   $t0, 24340($gp)
	sw   $t0, 24344($gp)
	sw   $t0, 24348($gp)
	sw   $t0, 24352($gp)
	sw   $t0, 24356($gp)
	sw   $t0, 24360($gp)
	sw   $t0, 24364($gp)
	sw   $t0, 24368($gp)
	sw   $t0, 24372($gp)
	sw   $t0, 24376($gp)
	sw   $t0, 24380($gp)
	sw   $t0, 24384($gp)
	sw   $t0, 24388($gp)
	sw   $t0, 24392($gp)
	sw   $t0, 24396($gp)
	sw   $t0, 24400($gp)
	sw   $t0, 24404($gp)
	sw   $t0, 24412($gp)
	sw   $t0, 24416($gp)
	sw   $t0, 24420($gp)
	sw   $t0, 24424($gp)
	sw   $t0, 24428($gp)
	sw   $t0, 24432($gp)
	sw   $t0, 24436($gp)
	sw   $t0, 24440($gp)
	sw   $t0, 24444($gp)
	sw   $t0, 24576($gp)
	sw   $t0, 24580($gp)
	sw   $t0, 24584($gp)
	sw   $t0, 24588($gp)
	sw   $t0, 24592($gp)
	sw   $t0, 24596($gp)
	sw   $t0, 24600($gp)
	sw   $t0, 24604($gp)
	sw   $t0, 24608($gp)
	sw   $t0, 24612($gp)
	sw   $t0, 24616($gp)
	sw   $t0, 24620($gp)
	sw   $t0, 24624($gp)
	sw   $t0, 24628($gp)
	sw   $t0, 24632($gp)
	sw   $t0, 24636($gp)
	sw   $t0, 24640($gp)
	sw   $t0, 24644($gp)
	sw   $t0, 24652($gp)
	sw   $t0, 24656($gp)
	sw   $t0, 24660($gp)
	sw   $t0, 24664($gp)
	sw   $t0, 24668($gp)
	sw   $t0, 24672($gp)
	sw   $t0, 24676($gp)
	sw   $t0, 24680($gp)
	sw   $t0, 24684($gp)
	sw   $t0, 24688($gp)
	sw   $t0, 24832($gp)
	sw   $t0, 24836($gp)
	sw   $t0, 24840($gp)
	sw   $t0, 24844($gp)
	sw   $t0, 24848($gp)
	sw   $t0, 24852($gp)
	sw   $t0, 24856($gp)
	sw   $t0, 24860($gp)
	sw   $t0, 24864($gp)
	sw   $t0, 24868($gp)
	sw   $t0, 24872($gp)
	sw   $t0, 24876($gp)
	sw   $t0, 24880($gp)
	sw   $t0, 24884($gp)
	sw   $t0, 24888($gp)
	sw   $t0, 24892($gp)
	sw   $t0, 24896($gp)
	sw   $t0, 24900($gp)
	sw   $t0, 24904($gp)
	sw   $t0, 24908($gp)
	sw   $t0, 24916($gp)
	sw   $t0, 24920($gp)
	sw   $t0, 24924($gp)
	sw   $t0, 24928($gp)
	sw   $t0, 24932($gp)
	sw   $t0, 24936($gp)
	sw   $t0, 24940($gp)
	sw   $t0, 25088($gp)
	sw   $t0, 25092($gp)
	sw   $t0, 25096($gp)
	sw   $t0, 25100($gp)
	sw   $t0, 25104($gp)
	sw   $t0, 25108($gp)
	sw   $t0, 25112($gp)
	sw   $t0, 25116($gp)
	sw   $t0, 25124($gp)
	sw   $t0, 25132($gp)
	sw   $t0, 25136($gp)
	sw   $t0, 25140($gp)
	sw   $t0, 25144($gp)
	sw   $t0, 25148($gp)
	sw   $t0, 25152($gp)
	sw   $t0, 25156($gp)
	sw   $t0, 25160($gp)
	sw   $t0, 25164($gp)
	sw   $t0, 25168($gp)
	sw   $t0, 25184($gp)
	sw   $t0, 25344($gp)
	sw   $t0, 25348($gp)
	sw   $t0, 25352($gp)
	sw   $t0, 25356($gp)
	sw   $t0, 25360($gp)
	sw   $t0, 25364($gp)
	sw   $t0, 25368($gp)
	sw   $t0, 25372($gp)
	sw   $t0, 25376($gp)
	sw   $t0, 25380($gp)
	sw   $t0, 25384($gp)
	sw   $t0, 25388($gp)
	sw   $t0, 25392($gp)
	sw   $t0, 25396($gp)
	sw   $t0, 25400($gp)
	sw   $t0, 25404($gp)
	sw   $t0, 25408($gp)
	sw   $t0, 25412($gp)
	sw   $t0, 25416($gp)
	sw   $t0, 25420($gp)
	sw   $t0, 25600($gp)
	sw   $t0, 25604($gp)
	sw   $t0, 25608($gp)
	sw   $t0, 25612($gp)
	sw   $t0, 25616($gp)
	sw   $t0, 25620($gp)
	sw   $t0, 25624($gp)
	sw   $t0, 25628($gp)
	sw   $t0, 25632($gp)
	sw   $t0, 25636($gp)
	sw   $t0, 25652($gp)
	sw   $t0, 25656($gp)
	sw   $t0, 25660($gp)
	sw   $t0, 25664($gp)

	# Pale Orange
	li   $t0, 0x00dc9224
	sw   $t0, 16512($gp)
	sw   $t0, 16516($gp)
	sw   $t0, 16768($gp)
	sw   $t0, 16772($gp)
	sw   $t0, 17536($gp)
	sw   $t0, 17540($gp)
	sw   $t0, 17788($gp)
	sw   $t0, 17792($gp)
	sw   $t0, 17796($gp)
	sw   $t0, 17800($gp)
	sw   $t0, 18004($gp)
	sw   $t0, 18008($gp)
	sw   $t0, 18024($gp)
	sw   $t0, 18028($gp)
	sw   $t0, 18040($gp)
	sw   $t0, 18044($gp)
	sw   $t0, 18048($gp)
	sw   $t0, 18052($gp)
	sw   $t0, 18056($gp)
	sw   $t0, 18060($gp)
	sw   $t0, 18244($gp)
	sw   $t0, 18256($gp)
	sw   $t0, 18260($gp)
	sw   $t0, 18264($gp)
	sw   $t0, 18268($gp)
	sw   $t0, 18276($gp)
	sw   $t0, 18280($gp)
	sw   $t0, 18284($gp)
	sw   $t0, 18288($gp)
	sw   $t0, 18296($gp)
	sw   $t0, 18300($gp)
	sw   $t0, 18304($gp)
	sw   $t0, 18308($gp)
	sw   $t0, 18312($gp)
	sw   $t0, 18316($gp)
	sw   $t0, 18320($gp)
	sw   $t0, 18332($gp)
	sw   $t0, 18336($gp)
	sw   $t0, 18492($gp)
	sw   $t0, 18496($gp)
	sw   $t0, 18500($gp)
	sw   $t0, 18504($gp)
	sw   $t0, 18508($gp)
	sw   $t0, 18512($gp)
	sw   $t0, 18516($gp)
	sw   $t0, 18520($gp)
	sw   $t0, 18524($gp)
	sw   $t0, 18528($gp)
	sw   $t0, 18532($gp)
	sw   $t0, 18536($gp)
	sw   $t0, 18540($gp)
	sw   $t0, 18544($gp)
	sw   $t0, 18548($gp)
	sw   $t0, 18552($gp)
	sw   $t0, 18556($gp)
	sw   $t0, 18560($gp)
	sw   $t0, 18564($gp)
	sw   $t0, 18568($gp)
	sw   $t0, 18572($gp)
	sw   $t0, 18576($gp)
	sw   $t0, 18584($gp)
	sw   $t0, 18588($gp)
	sw   $t0, 18592($gp)
	sw   $t0, 18596($gp)
	sw   $t0, 18608($gp)
	sw   $t0, 18612($gp)
	sw   $t0, 18616($gp)
	sw   $t0, 18620($gp)
	sw   $t0, 18724($gp)
	sw   $t0, 18728($gp)
	sw   $t0, 18732($gp)
	sw   $t0, 18744($gp)
	sw   $t0, 18748($gp)
	sw   $t0, 18752($gp)
	sw   $t0, 18756($gp)
	sw   $t0, 18760($gp)
	sw   $t0, 18764($gp)
	sw   $t0, 18768($gp)
	sw   $t0, 18772($gp)
	sw   $t0, 18776($gp)
	sw   $t0, 18780($gp)
	sw   $t0, 18784($gp)
	sw   $t0, 18788($gp)
	sw   $t0, 18792($gp)
	sw   $t0, 18796($gp)
	sw   $t0, 18800($gp)
	sw   $t0, 18804($gp)
	sw   $t0, 18808($gp)
	sw   $t0, 18812($gp)
	sw   $t0, 18816($gp)
	sw   $t0, 18820($gp)
	sw   $t0, 18824($gp)
	sw   $t0, 18828($gp)
	sw   $t0, 18832($gp)
	sw   $t0, 18836($gp)
	sw   $t0, 18840($gp)
	sw   $t0, 18844($gp)
	sw   $t0, 18848($gp)
	sw   $t0, 18852($gp)
	sw   $t0, 18856($gp)
	sw   $t0, 18860($gp)
	sw   $t0, 18864($gp)
	sw   $t0, 18868($gp)
	sw   $t0, 18872($gp)
	sw   $t0, 18876($gp)
	sw   $t0, 18880($gp)
	sw   $t0, 18896($gp)
	sw   $t0, 18900($gp)
	sw   $t0, 18992($gp)
	sw   $t0, 18996($gp)
	sw   $t0, 19000($gp)
	sw   $t0, 19004($gp)
	sw   $t0, 19008($gp)
	sw   $t0, 19012($gp)
	sw   $t0, 19016($gp)
	sw   $t0, 19020($gp)
	sw   $t0, 19024($gp)
	sw   $t0, 19028($gp)
	sw   $t0, 19032($gp)
	sw   $t0, 19036($gp)
	sw   $t0, 19040($gp)
	sw   $t0, 19044($gp)
	sw   $t0, 19048($gp)
	sw   $t0, 19052($gp)
	sw   $t0, 19056($gp)
	sw   $t0, 19060($gp)
	sw   $t0, 19064($gp)
	sw   $t0, 19068($gp)
	sw   $t0, 19072($gp)
	sw   $t0, 19076($gp)
	sw   $t0, 19080($gp)
	sw   $t0, 19084($gp)
	sw   $t0, 19088($gp)
	sw   $t0, 19092($gp)
	sw   $t0, 19096($gp)
	sw   $t0, 19100($gp)
	sw   $t0, 19104($gp)
	sw   $t0, 19108($gp)
	sw   $t0, 19112($gp)
	sw   $t0, 19116($gp)
	sw   $t0, 19120($gp)
	sw   $t0, 19124($gp)
	sw   $t0, 19128($gp)
	sw   $t0, 19132($gp)
	sw   $t0, 19136($gp)
	sw   $t0, 19140($gp)
	sw   $t0, 19144($gp)
	sw   $t0, 19148($gp)
	sw   $t0, 19264($gp)
	sw   $t0, 19268($gp)
	sw   $t0, 19272($gp)
	sw   $t0, 19276($gp)
	sw   $t0, 19280($gp)
	sw   $t0, 19284($gp)
	sw   $t0, 19288($gp)
	sw   $t0, 19292($gp)
	sw   $t0, 19296($gp)
	sw   $t0, 19300($gp)
	sw   $t0, 19304($gp)
	sw   $t0, 19308($gp)
	sw   $t0, 19312($gp)
	sw   $t0, 19316($gp)
	sw   $t0, 19320($gp)
	sw   $t0, 19324($gp)
	sw   $t0, 19328($gp)
	sw   $t0, 19332($gp)
	sw   $t0, 19336($gp)
	sw   $t0, 19340($gp)
	sw   $t0, 19344($gp)
	sw   $t0, 19348($gp)
	sw   $t0, 19352($gp)
	sw   $t0, 19356($gp)
	sw   $t0, 19360($gp)
	sw   $t0, 19364($gp)
	sw   $t0, 19368($gp)
	sw   $t0, 19556($gp)
	sw   $t0, 19560($gp)
	sw   $t0, 19564($gp)
	sw   $t0, 19568($gp)
	sw   $t0, 19572($gp)
	sw   $t0, 19596($gp)
	sw   $t0, 19600($gp)
	sw   $t0, 19604($gp)
	sw   $t0, 19608($gp)
	sw   $t0, 19804($gp)
	sw   $t0, 19808($gp)
	sw   $t0, 19812($gp)
	sw   $t0, 19816($gp)
	sw   $t0, 19820($gp)
	sw   $t0, 19860($gp)
	sw   $t0, 19864($gp)
	sw   $t0, 19868($gp)
	sw   $t0, 19872($gp)
	sw   $t0, 20020($gp)
	sw   $t0, 20024($gp)
	sw   $t0, 20028($gp)
	sw   $t0, 20040($gp)
	sw   $t0, 20044($gp)
	sw   $t0, 20048($gp)
	sw   $t0, 20052($gp)
	sw   $t0, 20060($gp)
	sw   $t0, 20064($gp)
	sw   $t0, 20068($gp)
	sw   $t0, 20072($gp)
	sw   $t0, 20120($gp)
	sw   $t0, 20124($gp)
	sw   $t0, 20128($gp)
	sw   $t0, 20132($gp)
	sw   $t0, 20140($gp)
	sw   $t0, 20144($gp)
	sw   $t0, 20148($gp)
	sw   $t0, 20168($gp)
	sw   $t0, 20172($gp)
	sw   $t0, 20252($gp)
	sw   $t0, 20256($gp)
	sw   $t0, 20260($gp)
	sw   $t0, 20264($gp)
	sw   $t0, 20276($gp)
	sw   $t0, 20280($gp)
	sw   $t0, 20284($gp)
	sw   $t0, 20288($gp)
	sw   $t0, 20292($gp)
	sw   $t0, 20296($gp)
	sw   $t0, 20300($gp)
	sw   $t0, 20304($gp)
	sw   $t0, 20308($gp)
	sw   $t0, 20312($gp)
	sw   $t0, 20316($gp)
	sw   $t0, 20320($gp)
	sw   $t0, 20324($gp)
	sw   $t0, 20380($gp)
	sw   $t0, 20384($gp)
	sw   $t0, 20388($gp)
	sw   $t0, 20392($gp)
	sw   $t0, 20396($gp)
	sw   $t0, 20400($gp)
	sw   $t0, 20404($gp)
	sw   $t0, 20408($gp)
	sw   $t0, 20412($gp)
	sw   $t0, 20420($gp)
	sw   $t0, 20424($gp)
	sw   $t0, 20428($gp)
	sw   $t0, 20432($gp)
	sw   $t0, 20436($gp)
	sw   $t0, 20504($gp)
	sw   $t0, 20508($gp)
	sw   $t0, 20512($gp)
	sw   $t0, 20516($gp)
	sw   $t0, 20520($gp)
	sw   $t0, 20524($gp)
	sw   $t0, 20528($gp)
	sw   $t0, 20532($gp)
	sw   $t0, 20536($gp)
	sw   $t0, 20540($gp)
	sw   $t0, 20544($gp)
	sw   $t0, 20548($gp)
	sw   $t0, 20552($gp)
	sw   $t0, 20556($gp)
	sw   $t0, 20560($gp)
	sw   $t0, 20564($gp)
	sw   $t0, 20568($gp)
	sw   $t0, 20572($gp)
	sw   $t0, 20576($gp)
	sw   $t0, 20580($gp)
	sw   $t0, 20636($gp)
	sw   $t0, 20640($gp)
	sw   $t0, 20644($gp)
	sw   $t0, 20648($gp)
	sw   $t0, 20652($gp)
	sw   $t0, 20656($gp)
	sw   $t0, 20660($gp)
	sw   $t0, 20664($gp)
	sw   $t0, 20668($gp)
	sw   $t0, 20672($gp)
	sw   $t0, 20676($gp)
	sw   $t0, 20680($gp)
	sw   $t0, 20684($gp)
	sw   $t0, 20688($gp)
	sw   $t0, 20692($gp)
	sw   $t0, 20696($gp)
	sw   $t0, 20704($gp)
	sw   $t0, 20708($gp)
	sw   $t0, 20768($gp)
	sw   $t0, 20772($gp)
	sw   $t0, 20776($gp)
	sw   $t0, 20780($gp)
	sw   $t0, 20784($gp)
	sw   $t0, 20788($gp)
	sw   $t0, 20792($gp)
	sw   $t0, 20796($gp)
	sw   $t0, 20800($gp)
	sw   $t0, 20804($gp)
	sw   $t0, 20808($gp)
	sw   $t0, 20812($gp)
	sw   $t0, 20816($gp)
	sw   $t0, 20820($gp)
	sw   $t0, 20824($gp)
	sw   $t0, 20828($gp)
	sw   $t0, 20832($gp)
	sw   $t0, 20896($gp)
	sw   $t0, 20900($gp)
	sw   $t0, 20904($gp)
	sw   $t0, 20908($gp)
	sw   $t0, 20912($gp)
	sw   $t0, 20916($gp)
	sw   $t0, 20920($gp)
	sw   $t0, 20924($gp)
	sw   $t0, 20928($gp)
	sw   $t0, 20932($gp)
	sw   $t0, 20936($gp)
	sw   $t0, 20940($gp)
	sw   $t0, 20944($gp)
	sw   $t0, 20948($gp)
	sw   $t0, 20952($gp)
	sw   $t0, 20956($gp)
	sw   $t0, 20960($gp)
	sw   $t0, 21044($gp)
	sw   $t0, 21048($gp)
	sw   $t0, 21052($gp)
	sw   $t0, 21056($gp)
	sw   $t0, 21060($gp)
	sw   $t0, 21064($gp)
	sw   $t0, 21068($gp)
	sw   $t0, 21072($gp)
	sw   $t0, 21076($gp)
	sw   $t0, 21080($gp)
	sw   $t0, 21084($gp)
	sw   $t0, 21088($gp)
	sw   $t0, 21152($gp)
	sw   $t0, 21156($gp)
	sw   $t0, 21160($gp)
	sw   $t0, 21164($gp)
	sw   $t0, 21168($gp)
	sw   $t0, 21172($gp)
	sw   $t0, 21176($gp)
	sw   $t0, 21180($gp)
	sw   $t0, 21184($gp)
	sw   $t0, 21188($gp)
	sw   $t0, 21192($gp)
	sw   $t0, 21316($gp)
	sw   $t0, 21320($gp)
	sw   $t0, 21324($gp)
	sw   $t0, 21328($gp)
	sw   $t0, 21332($gp)
	sw   $t0, 21336($gp)
	sw   $t0, 21340($gp)
	sw   $t0, 21344($gp)
	sw   $t0, 21408($gp)
	sw   $t0, 21412($gp)
	sw   $t0, 21416($gp)
	sw   $t0, 21420($gp)
	sw   $t0, 21424($gp)
	sw   $t0, 21428($gp)
	sw   $t0, 21664($gp)
	sw   $t0, 21668($gp)
	sw   $t0, 21672($gp)
	sw   $t0, 21676($gp)
	sw   $t0, 21696($gp)
	sw   $t0, 21700($gp)
	sw   $t0, 21704($gp)
	sw   $t0, 21708($gp)
	sw   $t0, 21724($gp)
	sw   $t0, 21728($gp)
	sw   $t0, 21732($gp)
	sw   $t0, 21920($gp)
	sw   $t0, 21924($gp)
	sw   $t0, 21928($gp)
	sw   $t0, 21932($gp)
	sw   $t0, 21936($gp)
	sw   $t0, 21940($gp)
	sw   $t0, 21944($gp)
	sw   $t0, 21948($gp)
	sw   $t0, 21952($gp)
	sw   $t0, 21956($gp)
	sw   $t0, 21960($gp)
	sw   $t0, 21964($gp)
	sw   $t0, 21968($gp)
	sw   $t0, 21976($gp)
	sw   $t0, 21980($gp)
	sw   $t0, 21984($gp)
	sw   $t0, 21988($gp)
	sw   $t0, 21992($gp)
	sw   $t0, 21996($gp)
	sw   $t0, 22172($gp)
	sw   $t0, 22176($gp)
	sw   $t0, 22180($gp)
	sw   $t0, 22188($gp)
	sw   $t0, 22192($gp)
	sw   $t0, 22196($gp)
	sw   $t0, 22200($gp)
	sw   $t0, 22204($gp)
	sw   $t0, 22208($gp)
	sw   $t0, 22212($gp)
	sw   $t0, 22216($gp)
	sw   $t0, 22220($gp)
	sw   $t0, 22224($gp)
	sw   $t0, 22228($gp)
	sw   $t0, 22232($gp)
	sw   $t0, 22236($gp)
	sw   $t0, 22240($gp)
	sw   $t0, 22248($gp)
	sw   $t0, 22252($gp)
	sw   $t0, 22428($gp)
	sw   $t0, 22432($gp)
	sw   $t0, 22436($gp)
	sw   $t0, 22440($gp)
	sw   $t0, 22444($gp)
	sw   $t0, 22448($gp)
	sw   $t0, 22456($gp)
	sw   $t0, 22460($gp)
	sw   $t0, 22464($gp)
	sw   $t0, 22468($gp)
	sw   $t0, 22472($gp)
	sw   $t0, 22488($gp)
	sw   $t0, 22492($gp)
	sw   $t0, 22496($gp)
	sw   $t0, 22500($gp)
	sw   $t0, 22504($gp)
	sw   $t0, 22704($gp)
	sw   $t0, 22708($gp)
	sw   $t0, 22712($gp)
	sw   $t0, 22716($gp)
	sw   $t0, 22720($gp)
	sw   $t0, 22740($gp)
	sw   $t0, 22748($gp)
	sw   $t0, 22752($gp)
	sw   $t0, 22756($gp)
	sw   $t0, 22956($gp)
	sw   $t0, 22964($gp)
	sw   $t0, 22968($gp)
	sw   $t0, 22972($gp)
	sw   $t0, 23216($gp)
	sw   $t0, 23220($gp)
	sw   $t0, 24472($gp)
	sw   $t0, 24480($gp)
	sw   $t0, 24484($gp)
	sw   $t0, 24716($gp)
	sw   $t0, 24720($gp)
	sw   $t0, 24724($gp)
	sw   $t0, 25728($gp)
	sw   $t0, 25964($gp)
	sw   $t0, 25968($gp)
	sw   $t0, 25972($gp)
	sw   $t0, 25992($gp)
	sw   $t0, 25996($gp)
	sw   $t0, 26000($gp)
	sw   $t0, 26988($gp)
	sw   $t0, 26992($gp)
	sw   $t0, 26996($gp)
	sw   $t0, 28280($gp)
	sw   $t0, 28284($gp)
	sw   $t0, 28540($gp)
	sw   $t0, 28544($gp)

	# Deep Orange
	li   $t0, 0x00b94e18
	sw   $t0, 14964($gp)
	sw   $t0, 14988($gp)
	sw   $t0, 15224($gp)
	sw   $t0, 15228($gp)
	sw   $t0, 15232($gp)
	sw   $t0, 15236($gp)
	sw   $t0, 15240($gp)
	sw   $t0, 15484($gp)
	sw   $t0, 15488($gp)
	sw   $t0, 15492($gp)
	sw   $t0, 16220($gp)
	sw   $t0, 16240($gp)
	sw   $t0, 16244($gp)
	sw   $t0, 16248($gp)
	sw   $t0, 16252($gp)
	sw   $t0, 16256($gp)
	sw   $t0, 16260($gp)
	sw   $t0, 16264($gp)
	sw   $t0, 16268($gp)
	sw   $t0, 16292($gp)
	sw   $t0, 16480($gp)
	sw   $t0, 16484($gp)
	sw   $t0, 16488($gp)
	sw   $t0, 16492($gp)
	sw   $t0, 16496($gp)
	sw   $t0, 16500($gp)
	sw   $t0, 16504($gp)
	sw   $t0, 16508($gp)
	sw   $t0, 16520($gp)
	sw   $t0, 16524($gp)
	sw   $t0, 16528($gp)
	sw   $t0, 16532($gp)
	sw   $t0, 16536($gp)
	sw   $t0, 16540($gp)
	sw   $t0, 16544($gp)
	sw   $t0, 16740($gp)
	sw   $t0, 16744($gp)
	sw   $t0, 16748($gp)
	sw   $t0, 16752($gp)
	sw   $t0, 16756($gp)
	sw   $t0, 16760($gp)
	sw   $t0, 16764($gp)
	sw   $t0, 16776($gp)
	sw   $t0, 16780($gp)
	sw   $t0, 16784($gp)
	sw   $t0, 16788($gp)
	sw   $t0, 16792($gp)
	sw   $t0, 16796($gp)
	sw   $t0, 16956($gp)
	sw   $t0, 16972($gp)
	sw   $t0, 17004($gp)
	sw   $t0, 17008($gp)
	sw   $t0, 17012($gp)
	sw   $t0, 17016($gp)
	sw   $t0, 17020($gp)
	sw   $t0, 17024($gp)
	sw   $t0, 17028($gp)
	sw   $t0, 17032($gp)
	sw   $t0, 17036($gp)
	sw   $t0, 17040($gp)
	sw   $t0, 17044($gp)
	sw   $t0, 17048($gp)
	sw   $t0, 17064($gp)
	sw   $t0, 17088($gp)
	sw   $t0, 17216($gp)
	sw   $t0, 17220($gp)
	sw   $t0, 17224($gp)
	sw   $t0, 17256($gp)
	sw   $t0, 17260($gp)
	sw   $t0, 17264($gp)
	sw   $t0, 17268($gp)
	sw   $t0, 17272($gp)
	sw   $t0, 17276($gp)
	sw   $t0, 17280($gp)
	sw   $t0, 17284($gp)
	sw   $t0, 17288($gp)
	sw   $t0, 17292($gp)
	sw   $t0, 17296($gp)
	sw   $t0, 17300($gp)
	sw   $t0, 17304($gp)
	sw   $t0, 17324($gp)
	sw   $t0, 17328($gp)
	sw   $t0, 17332($gp)
	sw   $t0, 17336($gp)
	sw   $t0, 17340($gp)
	sw   $t0, 17488($gp)
	sw   $t0, 17492($gp)
	sw   $t0, 17496($gp)
	sw   $t0, 17508($gp)
	sw   $t0, 17512($gp)
	sw   $t0, 17516($gp)
	sw   $t0, 17520($gp)
	sw   $t0, 17524($gp)
	sw   $t0, 17528($gp)
	sw   $t0, 17532($gp)
	sw   $t0, 17544($gp)
	sw   $t0, 17548($gp)
	sw   $t0, 17552($gp)
	sw   $t0, 17556($gp)
	sw   $t0, 17560($gp)
	sw   $t0, 17564($gp)
	sw   $t0, 17568($gp)
	sw   $t0, 17672($gp)
	sw   $t0, 17692($gp)
	sw   $t0, 17712($gp)
	sw   $t0, 17728($gp)
	sw   $t0, 17732($gp)
	sw   $t0, 17740($gp)
	sw   $t0, 17744($gp)
	sw   $t0, 17748($gp)
	sw   $t0, 17752($gp)
	sw   $t0, 17756($gp)
	sw   $t0, 17764($gp)
	sw   $t0, 17768($gp)
	sw   $t0, 17772($gp)
	sw   $t0, 17776($gp)
	sw   $t0, 17780($gp)
	sw   $t0, 17784($gp)
	sw   $t0, 17804($gp)
	sw   $t0, 17808($gp)
	sw   $t0, 17812($gp)
	sw   $t0, 17816($gp)
	sw   $t0, 17820($gp)
	sw   $t0, 17824($gp)
	sw   $t0, 17832($gp)
	sw   $t0, 17836($gp)
	sw   $t0, 17840($gp)
	sw   $t0, 17844($gp)
	sw   $t0, 17852($gp)
	sw   $t0, 17856($gp)
	sw   $t0, 17860($gp)
	sw   $t0, 17932($gp)
	sw   $t0, 17936($gp)
	sw   $t0, 17940($gp)
	sw   $t0, 17944($gp)
	sw   $t0, 17964($gp)
	sw   $t0, 17968($gp)
	sw   $t0, 17972($gp)
	sw   $t0, 17980($gp)
	sw   $t0, 17984($gp)
	sw   $t0, 17988($gp)
	sw   $t0, 17992($gp)
	sw   $t0, 17996($gp)
	sw   $t0, 18000($gp)
	sw   $t0, 18012($gp)
	sw   $t0, 18016($gp)
	sw   $t0, 18020($gp)
	sw   $t0, 18032($gp)
	sw   $t0, 18036($gp)
	sw   $t0, 18064($gp)
	sw   $t0, 18068($gp)
	sw   $t0, 18072($gp)
	sw   $t0, 18076($gp)
	sw   $t0, 18080($gp)
	sw   $t0, 18084($gp)
	sw   $t0, 18088($gp)
	sw   $t0, 18092($gp)
	sw   $t0, 18096($gp)
	sw   $t0, 18100($gp)
	sw   $t0, 18108($gp)
	sw   $t0, 18112($gp)
	sw   $t0, 18116($gp)
	sw   $t0, 18120($gp)
	sw   $t0, 18132($gp)
	sw   $t0, 18144($gp)
	sw   $t0, 18160($gp)
	sw   $t0, 18196($gp)
	sw   $t0, 18220($gp)
	sw   $t0, 18224($gp)
	sw   $t0, 18228($gp)
	sw   $t0, 18232($gp)
	sw   $t0, 18236($gp)
	sw   $t0, 18240($gp)
	sw   $t0, 18248($gp)
	sw   $t0, 18252($gp)
	sw   $t0, 18272($gp)
	sw   $t0, 18292($gp)
	sw   $t0, 18324($gp)
	sw   $t0, 18328($gp)
	sw   $t0, 18340($gp)
	sw   $t0, 18344($gp)
	sw   $t0, 18348($gp)
	sw   $t0, 18352($gp)
	sw   $t0, 18356($gp)
	sw   $t0, 18360($gp)
	sw   $t0, 18364($gp)
	sw   $t0, 18368($gp)
	sw   $t0, 18372($gp)
	sw   $t0, 18376($gp)
	sw   $t0, 18384($gp)
	sw   $t0, 18388($gp)
	sw   $t0, 18404($gp)
	sw   $t0, 18408($gp)
	sw   $t0, 18412($gp)
	sw   $t0, 18452($gp)
	sw   $t0, 18456($gp)
	sw   $t0, 18460($gp)
	sw   $t0, 18464($gp)
	sw   $t0, 18468($gp)
	sw   $t0, 18472($gp)
	sw   $t0, 18476($gp)
	sw   $t0, 18480($gp)
	sw   $t0, 18484($gp)
	sw   $t0, 18488($gp)
	sw   $t0, 18580($gp)
	sw   $t0, 18600($gp)
	sw   $t0, 18604($gp)
	sw   $t0, 18624($gp)
	sw   $t0, 18628($gp)
	sw   $t0, 18632($gp)
	sw   $t0, 18636($gp)
	sw   $t0, 18640($gp)
	sw   $t0, 18644($gp)
	sw   $t0, 18648($gp)
	sw   $t0, 18652($gp)
	sw   $t0, 18656($gp)
	sw   $t0, 18712($gp)
	sw   $t0, 18716($gp)
	sw   $t0, 18720($gp)
	sw   $t0, 18736($gp)
	sw   $t0, 18740($gp)
	sw   $t0, 18884($gp)
	sw   $t0, 18888($gp)
	sw   $t0, 18892($gp)
	sw   $t0, 18904($gp)
	sw   $t0, 18908($gp)
	sw   $t0, 18912($gp)
	sw   $t0, 18972($gp)
	sw   $t0, 18976($gp)
	sw   $t0, 18980($gp)
	sw   $t0, 18984($gp)
	sw   $t0, 18988($gp)
	sw   $t0, 19152($gp)
	sw   $t0, 19156($gp)
	sw   $t0, 19160($gp)
	sw   $t0, 19164($gp)
	sw   $t0, 19248($gp)
	sw   $t0, 19252($gp)
	sw   $t0, 19256($gp)
	sw   $t0, 19260($gp)
	sw   $t0, 19372($gp)
	sw   $t0, 19376($gp)
	sw   $t0, 19380($gp)
	sw   $t0, 19384($gp)
	sw   $t0, 19388($gp)
	sw   $t0, 19392($gp)
	sw   $t0, 19396($gp)
	sw   $t0, 19400($gp)
	sw   $t0, 19404($gp)
	sw   $t0, 19460($gp)
	sw   $t0, 19464($gp)
	sw   $t0, 19520($gp)
	sw   $t0, 19524($gp)
	sw   $t0, 19528($gp)
	sw   $t0, 19532($gp)
	sw   $t0, 19536($gp)
	sw   $t0, 19540($gp)
	sw   $t0, 19544($gp)
	sw   $t0, 19548($gp)
	sw   $t0, 19552($gp)
	sw   $t0, 19612($gp)
	sw   $t0, 19616($gp)
	sw   $t0, 19620($gp)
	sw   $t0, 19624($gp)
	sw   $t0, 19628($gp)
	sw   $t0, 19632($gp)
	sw   $t0, 19636($gp)
	sw   $t0, 19640($gp)
	sw   $t0, 19644($gp)
	sw   $t0, 19648($gp)
	sw   $t0, 19652($gp)
	sw   $t0, 19656($gp)
	sw   $t0, 19704($gp)
	sw   $t0, 19712($gp)
	sw   $t0, 19716($gp)
	sw   $t0, 19720($gp)
	sw   $t0, 19724($gp)
	sw   $t0, 19732($gp)
	sw   $t0, 19736($gp)
	sw   $t0, 19744($gp)
	sw   $t0, 19748($gp)
	sw   $t0, 19752($gp)
	sw   $t0, 19768($gp)
	sw   $t0, 19772($gp)
	sw   $t0, 19788($gp)
	sw   $t0, 19792($gp)
	sw   $t0, 19796($gp)
	sw   $t0, 19800($gp)
	sw   $t0, 19876($gp)
	sw   $t0, 19880($gp)
	sw   $t0, 19884($gp)
	sw   $t0, 19888($gp)
	sw   $t0, 19892($gp)
	sw   $t0, 19896($gp)
	sw   $t0, 19900($gp)
	sw   $t0, 19904($gp)
	sw   $t0, 19908($gp)
	sw   $t0, 19912($gp)
	sw   $t0, 19916($gp)
	sw   $t0, 19920($gp)
	sw   $t0, 19924($gp)
	sw   $t0, 19932($gp)
	sw   $t0, 19936($gp)
	sw   $t0, 19940($gp)
	sw   $t0, 19944($gp)
	sw   $t0, 19952($gp)
	sw   $t0, 19956($gp)
	sw   $t0, 19960($gp)
	sw   $t0, 19968($gp)
	sw   $t0, 19972($gp)
	sw   $t0, 19976($gp)
	sw   $t0, 19980($gp)
	sw   $t0, 19984($gp)
	sw   $t0, 19988($gp)
	sw   $t0, 19992($gp)
	sw   $t0, 19996($gp)
	sw   $t0, 20000($gp)
	sw   $t0, 20004($gp)
	sw   $t0, 20008($gp)
	sw   $t0, 20012($gp)
	sw   $t0, 20032($gp)
	sw   $t0, 20036($gp)
	sw   $t0, 20056($gp)
	sw   $t0, 20136($gp)
	sw   $t0, 20152($gp)
	sw   $t0, 20156($gp)
	sw   $t0, 20160($gp)
	sw   $t0, 20164($gp)
	sw   $t0, 20176($gp)
	sw   $t0, 20180($gp)
	sw   $t0, 20184($gp)
	sw   $t0, 20188($gp)
	sw   $t0, 20192($gp)
	sw   $t0, 20196($gp)
	sw   $t0, 20200($gp)
	sw   $t0, 20204($gp)
	sw   $t0, 20208($gp)
	sw   $t0, 20212($gp)
	sw   $t0, 20216($gp)
	sw   $t0, 20228($gp)
	sw   $t0, 20232($gp)
	sw   $t0, 20236($gp)
	sw   $t0, 20240($gp)
	sw   $t0, 20244($gp)
	sw   $t0, 20248($gp)
	sw   $t0, 20268($gp)
	sw   $t0, 20272($gp)
	sw   $t0, 20416($gp)
	sw   $t0, 20440($gp)
	sw   $t0, 20444($gp)
	sw   $t0, 20448($gp)
	sw   $t0, 20452($gp)
	sw   $t0, 20456($gp)
	sw   $t0, 20460($gp)
	sw   $t0, 20464($gp)
	sw   $t0, 20468($gp)
	sw   $t0, 20492($gp)
	sw   $t0, 20496($gp)
	sw   $t0, 20500($gp)
	sw   $t0, 20700($gp)
	sw   $t0, 20712($gp)
	sw   $t0, 20756($gp)
	sw   $t0, 20760($gp)
	sw   $t0, 20764($gp)
	sw   $t0, 20988($gp)
	sw   $t0, 21196($gp)
	sw   $t0, 21200($gp)
	sw   $t0, 21204($gp)
	sw   $t0, 21208($gp)
	sw   $t0, 21236($gp)
	sw   $t0, 21240($gp)
	sw   $t0, 21244($gp)
	sw   $t0, 21432($gp)
	sw   $t0, 21436($gp)
	sw   $t0, 21440($gp)
	sw   $t0, 21444($gp)
	sw   $t0, 21448($gp)
	sw   $t0, 21452($gp)
	sw   $t0, 21456($gp)
	sw   $t0, 21484($gp)
	sw   $t0, 21488($gp)
	sw   $t0, 21492($gp)
	sw   $t0, 21496($gp)
	sw   $t0, 21500($gp)
	sw   $t0, 21680($gp)
	sw   $t0, 21684($gp)
	sw   $t0, 21688($gp)
	sw   $t0, 21692($gp)
	sw   $t0, 21712($gp)
	sw   $t0, 21716($gp)
	sw   $t0, 21720($gp)
	sw   $t0, 21736($gp)
	sw   $t0, 21740($gp)
	sw   $t0, 21744($gp)
	sw   $t0, 21748($gp)
	sw   $t0, 21752($gp)
	sw   $t0, 21756($gp)
	sw   $t0, 21972($gp)
	sw   $t0, 22004($gp)
	sw   $t0, 22008($gp)
	sw   $t0, 22012($gp)
	sw   $t0, 22256($gp)
	sw   $t0, 22260($gp)
	sw   $t0, 22268($gp)
	sw   $t0, 22512($gp)
	sw   $t0, 22516($gp)
	sw   $t0, 22520($gp)
	sw   $t0, 22524($gp)
	sw   $t0, 22760($gp)
	sw   $t0, 22776($gp)
	sw   $t0, 22780($gp)
	sw   $t0, 22996($gp)
	sw   $t0, 23000($gp)
	sw   $t0, 23004($gp)
	sw   $t0, 23008($gp)
	sw   $t0, 23012($gp)
	sw   $t0, 23036($gp)
	sw   $t0, 23256($gp)
	sw   $t0, 23260($gp)

	# Red
	li   $t0, 0x0052131c
	sw   $t0, 11368($gp)
	sw   $t0, 11384($gp)
	sw   $t0, 11628($gp)
	sw   $t0, 11632($gp)
	sw   $t0, 11636($gp)
	sw   $t0, 11888($gp)
	sw   $t0, 11912($gp)
	sw   $t0, 12148($gp)
	sw   $t0, 12152($gp)
	sw   $t0, 12156($gp)
	sw   $t0, 12160($gp)
	sw   $t0, 12164($gp)
	sw   $t0, 12688($gp)
	sw   $t0, 12708($gp)
	sw   $t0, 12948($gp)
	sw   $t0, 12952($gp)
	sw   $t0, 12956($gp)
	sw   $t0, 12960($gp)
	sw   $t0, 13168($gp)
	sw   $t0, 13172($gp)
	sw   $t0, 13176($gp)
	sw   $t0, 13180($gp)
	sw   $t0, 13184($gp)
	sw   $t0, 13188($gp)
	sw   $t0, 13192($gp)
	sw   $t0, 13196($gp)
	sw   $t0, 13416($gp)
	sw   $t0, 13420($gp)
	sw   $t0, 13424($gp)
	sw   $t0, 13428($gp)
	sw   $t0, 13432($gp)
	sw   $t0, 13436($gp)
	sw   $t0, 13440($gp)
	sw   $t0, 13444($gp)
	sw   $t0, 13448($gp)
	sw   $t0, 13452($gp)
	sw   $t0, 13456($gp)
	sw   $t0, 13676($gp)
	sw   $t0, 13680($gp)
	sw   $t0, 13684($gp)
	sw   $t0, 13688($gp)
	sw   $t0, 13692($gp)
	sw   $t0, 13696($gp)
	sw   $t0, 13700($gp)
	sw   $t0, 13704($gp)
	sw   $t0, 13708($gp)
	sw   $t0, 13936($gp)
	sw   $t0, 13940($gp)
	sw   $t0, 13944($gp)
	sw   $t0, 13948($gp)
	sw   $t0, 13952($gp)
	sw   $t0, 13956($gp)
	sw   $t0, 13960($gp)
	sw   $t0, 14692($gp)
	sw   $t0, 14696($gp)
	sw   $t0, 14700($gp)
	sw   $t0, 14704($gp)
	sw   $t0, 14708($gp)
	sw   $t0, 14712($gp)
	sw   $t0, 14716($gp)
	sw   $t0, 14720($gp)
	sw   $t0, 14724($gp)
	sw   $t0, 14728($gp)
	sw   $t0, 14732($gp)
	sw   $t0, 14736($gp)
	sw   $t0, 14740($gp)
	sw   $t0, 14944($gp)
	sw   $t0, 14948($gp)
	sw   $t0, 14952($gp)
	sw   $t0, 14956($gp)
	sw   $t0, 14960($gp)
	sw   $t0, 14968($gp)
	sw   $t0, 14972($gp)
	sw   $t0, 14976($gp)
	sw   $t0, 14980($gp)
	sw   $t0, 14984($gp)
	sw   $t0, 14992($gp)
	sw   $t0, 14996($gp)
	sw   $t0, 15000($gp)
	sw   $t0, 15176($gp)
	sw   $t0, 15192($gp)
	sw   $t0, 15204($gp)
	sw   $t0, 15208($gp)
	sw   $t0, 15212($gp)
	sw   $t0, 15216($gp)
	sw   $t0, 15220($gp)
	sw   $t0, 15244($gp)
	sw   $t0, 15248($gp)
	sw   $t0, 15252($gp)
	sw   $t0, 15256($gp)
	sw   $t0, 15436($gp)
	sw   $t0, 15440($gp)
	sw   $t0, 15444($gp)
	sw   $t0, 15464($gp)
	sw   $t0, 15468($gp)
	sw   $t0, 15472($gp)
	sw   $t0, 15476($gp)
	sw   $t0, 15480($gp)
	sw   $t0, 15496($gp)
	sw   $t0, 15500($gp)
	sw   $t0, 15504($gp)
	sw   $t0, 15708($gp)
	sw   $t0, 15712($gp)
	sw   $t0, 15716($gp)
	sw   $t0, 15720($gp)
	sw   $t0, 15724($gp)
	sw   $t0, 15728($gp)
	sw   $t0, 15732($gp)
	sw   $t0, 15736($gp)
	sw   $t0, 15740($gp)
	sw   $t0, 15744($gp)
	sw   $t0, 15748($gp)
	sw   $t0, 15752($gp)
	sw   $t0, 15756($gp)
	sw   $t0, 15760($gp)
	sw   $t0, 15764($gp)
	sw   $t0, 15768($gp)
	sw   $t0, 15772($gp)
	sw   $t0, 15776($gp)
	sw   $t0, 15780($gp)
	sw   $t0, 15784($gp)
	sw   $t0, 15808($gp)
	sw   $t0, 15828($gp)
	sw   $t0, 15896($gp)
	sw   $t0, 15916($gp)
	sw   $t0, 15960($gp)
	sw   $t0, 15964($gp)
	sw   $t0, 15968($gp)
	sw   $t0, 15972($gp)
	sw   $t0, 15976($gp)
	sw   $t0, 15980($gp)
	sw   $t0, 15984($gp)
	sw   $t0, 15988($gp)
	sw   $t0, 15992($gp)
	sw   $t0, 15996($gp)
	sw   $t0, 16000($gp)
	sw   $t0, 16004($gp)
	sw   $t0, 16008($gp)
	sw   $t0, 16012($gp)
	sw   $t0, 16016($gp)
	sw   $t0, 16020($gp)
	sw   $t0, 16024($gp)
	sw   $t0, 16028($gp)
	sw   $t0, 16032($gp)
	sw   $t0, 16036($gp)
	sw   $t0, 16040($gp)
	sw   $t0, 16044($gp)
	sw   $t0, 16048($gp)
	sw   $t0, 16068($gp)
	sw   $t0, 16072($gp)
	sw   $t0, 16076($gp)
	sw   $t0, 16080($gp)
	sw   $t0, 16156($gp)
	sw   $t0, 16160($gp)
	sw   $t0, 16164($gp)
	sw   $t0, 16168($gp)
	sw   $t0, 16216($gp)
	sw   $t0, 16224($gp)
	sw   $t0, 16228($gp)
	sw   $t0, 16232($gp)
	sw   $t0, 16236($gp)
	sw   $t0, 16272($gp)
	sw   $t0, 16276($gp)
	sw   $t0, 16280($gp)
	sw   $t0, 16284($gp)
	sw   $t0, 16288($gp)
	sw   $t0, 16296($gp)
	sw   $t0, 16300($gp)
	sw   $t0, 16304($gp)
	sw   $t0, 16308($gp)
	sw   $t0, 16312($gp)
	sw   $t0, 16316($gp)
	sw   $t0, 16320($gp)
	sw   $t0, 16324($gp)
	sw   $t0, 16392($gp)
	sw   $t0, 16396($gp)
	sw   $t0, 16400($gp)
	sw   $t0, 16404($gp)
	sw   $t0, 16408($gp)
	sw   $t0, 16448($gp)
	sw   $t0, 16452($gp)
	sw   $t0, 16456($gp)
	sw   $t0, 16460($gp)
	sw   $t0, 16468($gp)
	sw   $t0, 16472($gp)
	sw   $t0, 16476($gp)
	sw   $t0, 16548($gp)
	sw   $t0, 16552($gp)
	sw   $t0, 16556($gp)
	sw   $t0, 16560($gp)
	sw   $t0, 16564($gp)
	sw   $t0, 16568($gp)
	sw   $t0, 16572($gp)
	sw   $t0, 16576($gp)
	sw   $t0, 16580($gp)
	sw   $t0, 16584($gp)
	sw   $t0, 16604($gp)
	sw   $t0, 16608($gp)
	sw   $t0, 16640($gp)
	sw   $t0, 16644($gp)
	sw   $t0, 16648($gp)
	sw   $t0, 16652($gp)
	sw   $t0, 16656($gp)
	sw   $t0, 16660($gp)
	sw   $t0, 16664($gp)
	sw   $t0, 16676($gp)
	sw   $t0, 16680($gp)
	sw   $t0, 16684($gp)
	sw   $t0, 16688($gp)
	sw   $t0, 16692($gp)
	sw   $t0, 16700($gp)
	sw   $t0, 16704($gp)
	sw   $t0, 16708($gp)
	sw   $t0, 16712($gp)
	sw   $t0, 16716($gp)
	sw   $t0, 16720($gp)
	sw   $t0, 16724($gp)
	sw   $t0, 16728($gp)
	sw   $t0, 16732($gp)
	sw   $t0, 16736($gp)
	sw   $t0, 16800($gp)
	sw   $t0, 16804($gp)
	sw   $t0, 16808($gp)
	sw   $t0, 16812($gp)
	sw   $t0, 16816($gp)
	sw   $t0, 16820($gp)
	sw   $t0, 16824($gp)
	sw   $t0, 16828($gp)
	sw   $t0, 16832($gp)
	sw   $t0, 16836($gp)
	sw   $t0, 16840($gp)
	sw   $t0, 16844($gp)
	sw   $t0, 16852($gp)
	sw   $t0, 16856($gp)
	sw   $t0, 16860($gp)
	sw   $t0, 16864($gp)
	sw   $t0, 16868($gp)
	sw   $t0, 16872($gp)
	sw   $t0, 16896($gp)
	sw   $t0, 16900($gp)
	sw   $t0, 16904($gp)
	sw   $t0, 16908($gp)
	sw   $t0, 16912($gp)
	sw   $t0, 16916($gp)
	sw   $t0, 16920($gp)
	sw   $t0, 16924($gp)
	sw   $t0, 16932($gp)
	sw   $t0, 16936($gp)
	sw   $t0, 16940($gp)
	sw   $t0, 16944($gp)
	sw   $t0, 16948($gp)
	sw   $t0, 16952($gp)
	sw   $t0, 16960($gp)
	sw   $t0, 16964($gp)
	sw   $t0, 16968($gp)
	sw   $t0, 16976($gp)
	sw   $t0, 16980($gp)
	sw   $t0, 16984($gp)
	sw   $t0, 16988($gp)
	sw   $t0, 16992($gp)
	sw   $t0, 16996($gp)
	sw   $t0, 17000($gp)
	sw   $t0, 17052($gp)
	sw   $t0, 17056($gp)
	sw   $t0, 17060($gp)
	sw   $t0, 17068($gp)
	sw   $t0, 17072($gp)
	sw   $t0, 17076($gp)
	sw   $t0, 17080($gp)
	sw   $t0, 17084($gp)
	sw   $t0, 17092($gp)
	sw   $t0, 17096($gp)
	sw   $t0, 17100($gp)
	sw   $t0, 17108($gp)
	sw   $t0, 17112($gp)
	sw   $t0, 17116($gp)
	sw   $t0, 17120($gp)
	sw   $t0, 17124($gp)
	sw   $t0, 17128($gp)
	sw   $t0, 17136($gp)
	sw   $t0, 17140($gp)
	sw   $t0, 17144($gp)
	sw   $t0, 17148($gp)
	sw   $t0, 17152($gp)
	sw   $t0, 17156($gp)
	sw   $t0, 17160($gp)
	sw   $t0, 17164($gp)
	sw   $t0, 17168($gp)
	sw   $t0, 17172($gp)
	sw   $t0, 17176($gp)
	sw   $t0, 17180($gp)
	sw   $t0, 17184($gp)
	sw   $t0, 17188($gp)
	sw   $t0, 17192($gp)
	sw   $t0, 17196($gp)
	sw   $t0, 17200($gp)
	sw   $t0, 17204($gp)
	sw   $t0, 17208($gp)
	sw   $t0, 17212($gp)
	sw   $t0, 17228($gp)
	sw   $t0, 17232($gp)
	sw   $t0, 17236($gp)
	sw   $t0, 17240($gp)
	sw   $t0, 17244($gp)
	sw   $t0, 17248($gp)
	sw   $t0, 17252($gp)
	sw   $t0, 17308($gp)
	sw   $t0, 17312($gp)
	sw   $t0, 17316($gp)
	sw   $t0, 17320($gp)
	sw   $t0, 17344($gp)
	sw   $t0, 17348($gp)
	sw   $t0, 17352($gp)
	sw   $t0, 17356($gp)
	sw   $t0, 17360($gp)
	sw   $t0, 17364($gp)
	sw   $t0, 17368($gp)
	sw   $t0, 17372($gp)
	sw   $t0, 17376($gp)
	sw   $t0, 17380($gp)
	sw   $t0, 17384($gp)
	sw   $t0, 17388($gp)
	sw   $t0, 17392($gp)
	sw   $t0, 17396($gp)
	sw   $t0, 17400($gp)
	sw   $t0, 17404($gp)
	sw   $t0, 17408($gp)
	sw   $t0, 17412($gp)
	sw   $t0, 17416($gp)
	sw   $t0, 17420($gp)
	sw   $t0, 17424($gp)
	sw   $t0, 17428($gp)
	sw   $t0, 17432($gp)
	sw   $t0, 17436($gp)
	sw   $t0, 17440($gp)
	sw   $t0, 17444($gp)
	sw   $t0, 17448($gp)
	sw   $t0, 17452($gp)
	sw   $t0, 17456($gp)
	sw   $t0, 17460($gp)
	sw   $t0, 17464($gp)
	sw   $t0, 17468($gp)
	sw   $t0, 17472($gp)
	sw   $t0, 17476($gp)
	sw   $t0, 17480($gp)
	sw   $t0, 17484($gp)
	sw   $t0, 17500($gp)
	sw   $t0, 17504($gp)
	sw   $t0, 17572($gp)
	sw   $t0, 17576($gp)
	sw   $t0, 17580($gp)
	sw   $t0, 17584($gp)
	sw   $t0, 17588($gp)
	sw   $t0, 17592($gp)
	sw   $t0, 17596($gp)
	sw   $t0, 17600($gp)
	sw   $t0, 17604($gp)
	sw   $t0, 17608($gp)
	sw   $t0, 17612($gp)
	sw   $t0, 17616($gp)
	sw   $t0, 17620($gp)
	sw   $t0, 17624($gp)
	sw   $t0, 17628($gp)
	sw   $t0, 17632($gp)
	sw   $t0, 17636($gp)
	sw   $t0, 17640($gp)
	sw   $t0, 17644($gp)
	sw   $t0, 17648($gp)
	sw   $t0, 17652($gp)
	sw   $t0, 17656($gp)
	sw   $t0, 17660($gp)
	sw   $t0, 17664($gp)
	sw   $t0, 17668($gp)
	sw   $t0, 17676($gp)
	sw   $t0, 17680($gp)
	sw   $t0, 17684($gp)
	sw   $t0, 17688($gp)
	sw   $t0, 17696($gp)
	sw   $t0, 17700($gp)
	sw   $t0, 17704($gp)
	sw   $t0, 17708($gp)
	sw   $t0, 17716($gp)
	sw   $t0, 17720($gp)
	sw   $t0, 17724($gp)
	sw   $t0, 17736($gp)
	sw   $t0, 17760($gp)
	sw   $t0, 17828($gp)
	sw   $t0, 17848($gp)
	sw   $t0, 17864($gp)
	sw   $t0, 17868($gp)
	sw   $t0, 17872($gp)
	sw   $t0, 17876($gp)
	sw   $t0, 17880($gp)
	sw   $t0, 17884($gp)
	sw   $t0, 17888($gp)
	sw   $t0, 17892($gp)
	sw   $t0, 17896($gp)
	sw   $t0, 17900($gp)
	sw   $t0, 17904($gp)
	sw   $t0, 17908($gp)
	sw   $t0, 17912($gp)
	sw   $t0, 17916($gp)
	sw   $t0, 17924($gp)
	sw   $t0, 17928($gp)
	sw   $t0, 17948($gp)
	sw   $t0, 17952($gp)
	sw   $t0, 17956($gp)
	sw   $t0, 17960($gp)
	sw   $t0, 17976($gp)
	sw   $t0, 18104($gp)
	sw   $t0, 18124($gp)
	sw   $t0, 18128($gp)
	sw   $t0, 18136($gp)
	sw   $t0, 18140($gp)
	sw   $t0, 18148($gp)
	sw   $t0, 18152($gp)
	sw   $t0, 18156($gp)
	sw   $t0, 18164($gp)
	sw   $t0, 18168($gp)
	sw   $t0, 18172($gp)
	sw   $t0, 18180($gp)
	sw   $t0, 18184($gp)
	sw   $t0, 18188($gp)
	sw   $t0, 18192($gp)
	sw   $t0, 18200($gp)
	sw   $t0, 18204($gp)
	sw   $t0, 18208($gp)
	sw   $t0, 18212($gp)
	sw   $t0, 18216($gp)
	sw   $t0, 18380($gp)
	sw   $t0, 18392($gp)
	sw   $t0, 18396($gp)
	sw   $t0, 18400($gp)
	sw   $t0, 18416($gp)
	sw   $t0, 18420($gp)
	sw   $t0, 18424($gp)
	sw   $t0, 18440($gp)
	sw   $t0, 18444($gp)
	sw   $t0, 18448($gp)
	sw   $t0, 18660($gp)
	sw   $t0, 18664($gp)
	sw   $t0, 18668($gp)
	sw   $t0, 18672($gp)
	sw   $t0, 18676($gp)
	sw   $t0, 18680($gp)
	sw   $t0, 18700($gp)
	sw   $t0, 18704($gp)
	sw   $t0, 18708($gp)
	sw   $t0, 18916($gp)
	sw   $t0, 18920($gp)
	sw   $t0, 18924($gp)
	sw   $t0, 18928($gp)
	sw   $t0, 18944($gp)
	sw   $t0, 18948($gp)
	sw   $t0, 18952($gp)
	sw   $t0, 18964($gp)
	sw   $t0, 18968($gp)
	sw   $t0, 19168($gp)
	sw   $t0, 19172($gp)
	sw   $t0, 19176($gp)
	sw   $t0, 19200($gp)
	sw   $t0, 19204($gp)
	sw   $t0, 19208($gp)
	sw   $t0, 19212($gp)
	sw   $t0, 19216($gp)
	sw   $t0, 19220($gp)
	sw   $t0, 19224($gp)
	sw   $t0, 19228($gp)
	sw   $t0, 19232($gp)
	sw   $t0, 19236($gp)
	sw   $t0, 19240($gp)
	sw   $t0, 19244($gp)
	sw   $t0, 19408($gp)
	sw   $t0, 19412($gp)
	sw   $t0, 19416($gp)
	sw   $t0, 19420($gp)
	sw   $t0, 19436($gp)
	sw   $t0, 19440($gp)
	sw   $t0, 19444($gp)
	sw   $t0, 19448($gp)
	sw   $t0, 19452($gp)
	sw   $t0, 19456($gp)
	sw   $t0, 19468($gp)
	sw   $t0, 19472($gp)
	sw   $t0, 19476($gp)
	sw   $t0, 19480($gp)
	sw   $t0, 19484($gp)
	sw   $t0, 19488($gp)
	sw   $t0, 19492($gp)
	sw   $t0, 19496($gp)
	sw   $t0, 19500($gp)
	sw   $t0, 19504($gp)
	sw   $t0, 19508($gp)
	sw   $t0, 19512($gp)
	sw   $t0, 19516($gp)
	sw   $t0, 19660($gp)
	sw   $t0, 19664($gp)
	sw   $t0, 19668($gp)
	sw   $t0, 19672($gp)
	sw   $t0, 19676($gp)
	sw   $t0, 19680($gp)
	sw   $t0, 19684($gp)
	sw   $t0, 19688($gp)
	sw   $t0, 19692($gp)
	sw   $t0, 19696($gp)
	sw   $t0, 19700($gp)
	sw   $t0, 19708($gp)
	sw   $t0, 19728($gp)
	sw   $t0, 19740($gp)
	sw   $t0, 19756($gp)
	sw   $t0, 19760($gp)
	sw   $t0, 19764($gp)
	sw   $t0, 19776($gp)
	sw   $t0, 19780($gp)
	sw   $t0, 19784($gp)
	sw   $t0, 19928($gp)
	sw   $t0, 19948($gp)
	sw   $t0, 19964($gp)
	sw   $t0, 20016($gp)
	sw   $t0, 20220($gp)
	sw   $t0, 20224($gp)
	sw   $t0, 20472($gp)
	sw   $t0, 20476($gp)
	sw   $t0, 20480($gp)
	sw   $t0, 20484($gp)
	sw   $t0, 20488($gp)
	sw   $t0, 20716($gp)
	sw   $t0, 20720($gp)
	sw   $t0, 20724($gp)
	sw   $t0, 20728($gp)
	sw   $t0, 20732($gp)
	sw   $t0, 20744($gp)
	sw   $t0, 20748($gp)
	sw   $t0, 20752($gp)
	sw   $t0, 20964($gp)
	sw   $t0, 20968($gp)
	sw   $t0, 20972($gp)
	sw   $t0, 20976($gp)
	sw   $t0, 20980($gp)
	sw   $t0, 20984($gp)
	sw   $t0, 21212($gp)
	sw   $t0, 21216($gp)
	sw   $t0, 21220($gp)
	sw   $t0, 21224($gp)
	sw   $t0, 21228($gp)
	sw   $t0, 21232($gp)
	sw   $t0, 21460($gp)
	sw   $t0, 21464($gp)
	sw   $t0, 21468($gp)
	sw   $t0, 21472($gp)
	sw   $t0, 21476($gp)
	sw   $t0, 21480($gp)

	# Purple
	li   $t0, 0x003b1455
	sw   $t0, 7816($gp)
	sw   $t0, 7836($gp)
	sw   $t0, 8076($gp)
	sw   $t0, 8080($gp)
	sw   $t0, 8084($gp)
	sw   $t0, 8088($gp)
	sw   $t0, 8308($gp)
	sw   $t0, 8336($gp)
	sw   $t0, 8568($gp)
	sw   $t0, 8572($gp)
	sw   $t0, 8576($gp)
	sw   $t0, 8580($gp)
	sw   $t0, 8584($gp)
	sw   $t0, 8588($gp)
	sw   $t0, 9568($gp)
	sw   $t0, 9588($gp)
	sw   $t0, 9736($gp)
	sw   $t0, 9828($gp)
	sw   $t0, 9832($gp)
	sw   $t0, 9836($gp)
	sw   $t0, 9840($gp)
	sw   $t0, 9852($gp)
	sw   $t0, 9856($gp)
	sw   $t0, 9860($gp)
	sw   $t0, 9984($gp)
	sw   $t0, 9988($gp)
	sw   $t0, 10052($gp)
	sw   $t0, 10068($gp)
	sw   $t0, 10104($gp)
	sw   $t0, 10108($gp)
	sw   $t0, 10112($gp)
	sw   $t0, 10116($gp)
	sw   $t0, 10120($gp)
	sw   $t0, 10312($gp)
	sw   $t0, 10316($gp)
	sw   $t0, 10320($gp)
	sw   $t0, 10360($gp)
	sw   $t0, 10364($gp)
	sw   $t0, 10368($gp)
	sw   $t0, 10372($gp)
	sw   $t0, 10376($gp)
	sw   $t0, 10408($gp)
	sw   $t0, 10428($gp)
	sw   $t0, 10484($gp)
	sw   $t0, 10620($gp)
	sw   $t0, 10624($gp)
	sw   $t0, 10628($gp)
	sw   $t0, 10632($gp)
	sw   $t0, 10668($gp)
	sw   $t0, 10672($gp)
	sw   $t0, 10676($gp)
	sw   $t0, 10680($gp)
	sw   $t0, 10744($gp)
	sw   $t0, 10748($gp)
	sw   $t0, 10836($gp)
	sw   $t0, 10840($gp)
	sw   $t0, 10856($gp)
	sw   $t0, 10860($gp)
	sw   $t0, 10864($gp)
	sw   $t0, 10868($gp)
	sw   $t0, 10876($gp)
	sw   $t0, 10880($gp)
	sw   $t0, 10884($gp)
	sw   $t0, 10900($gp)
	sw   $t0, 10904($gp)
	sw   $t0, 10908($gp)
	sw   $t0, 10916($gp)
	sw   $t0, 10920($gp)
	sw   $t0, 11084($gp)
	sw   $t0, 11088($gp)
	sw   $t0, 11092($gp)
	sw   $t0, 11096($gp)
	sw   $t0, 11100($gp)
	sw   $t0, 11108($gp)
	sw   $t0, 11112($gp)
	sw   $t0, 11116($gp)
	sw   $t0, 11120($gp)
	sw   $t0, 11124($gp)
	sw   $t0, 11128($gp)
	sw   $t0, 11132($gp)
	sw   $t0, 11136($gp)
	sw   $t0, 11140($gp)
	sw   $t0, 11144($gp)
	sw   $t0, 11152($gp)
	sw   $t0, 11156($gp)
	sw   $t0, 11160($gp)
	sw   $t0, 11164($gp)
	sw   $t0, 11168($gp)
	sw   $t0, 11172($gp)
	sw   $t0, 11176($gp)
	sw   $t0, 11180($gp)
	sw   $t0, 11340($gp)
	sw   $t0, 11344($gp)
	sw   $t0, 11348($gp)
	sw   $t0, 11352($gp)
	sw   $t0, 11356($gp)
	sw   $t0, 11364($gp)
	sw   $t0, 11372($gp)
	sw   $t0, 11376($gp)
	sw   $t0, 11380($gp)
	sw   $t0, 11388($gp)
	sw   $t0, 11392($gp)
	sw   $t0, 11396($gp)
	sw   $t0, 11400($gp)
	sw   $t0, 11404($gp)
	sw   $t0, 11408($gp)
	sw   $t0, 11412($gp)
	sw   $t0, 11416($gp)
	sw   $t0, 11420($gp)
	sw   $t0, 11424($gp)
	sw   $t0, 11428($gp)
	sw   $t0, 11432($gp)
	sw   $t0, 11436($gp)
	sw   $t0, 11596($gp)
	sw   $t0, 11600($gp)
	sw   $t0, 11604($gp)
	sw   $t0, 11608($gp)
	sw   $t0, 11612($gp)
	sw   $t0, 11616($gp)
	sw   $t0, 11620($gp)
	sw   $t0, 11624($gp)
	sw   $t0, 11640($gp)
	sw   $t0, 11644($gp)
	sw   $t0, 11648($gp)
	sw   $t0, 11652($gp)
	sw   $t0, 11656($gp)
	sw   $t0, 11660($gp)
	sw   $t0, 11664($gp)
	sw   $t0, 11668($gp)
	sw   $t0, 11672($gp)
	sw   $t0, 11676($gp)
	sw   $t0, 11680($gp)
	sw   $t0, 11684($gp)
	sw   $t0, 11688($gp)
	sw   $t0, 11720($gp)
	sw   $t0, 11736($gp)
	sw   $t0, 11812($gp)
	sw   $t0, 11832($gp)
	sw   $t0, 11864($gp)
	sw   $t0, 11868($gp)
	sw   $t0, 11872($gp)
	sw   $t0, 11876($gp)
	sw   $t0, 11880($gp)
	sw   $t0, 11884($gp)
	sw   $t0, 11892($gp)
	sw   $t0, 11896($gp)
	sw   $t0, 11900($gp)
	sw   $t0, 11904($gp)
	sw   $t0, 11908($gp)
	sw   $t0, 11916($gp)
	sw   $t0, 11920($gp)
	sw   $t0, 11924($gp)
	sw   $t0, 11928($gp)
	sw   $t0, 11932($gp)
	sw   $t0, 11936($gp)
	sw   $t0, 11980($gp)
	sw   $t0, 11984($gp)
	sw   $t0, 11988($gp)
	sw   $t0, 12072($gp)
	sw   $t0, 12076($gp)
	sw   $t0, 12080($gp)
	sw   $t0, 12084($gp)
	sw   $t0, 12128($gp)
	sw   $t0, 12132($gp)
	sw   $t0, 12136($gp)
	sw   $t0, 12140($gp)
	sw   $t0, 12144($gp)
	sw   $t0, 12168($gp)
	sw   $t0, 12172($gp)
	sw   $t0, 12176($gp)
	sw   $t0, 12180($gp)
	sw   $t0, 12184($gp)
	sw   $t0, 12204($gp)
	sw   $t0, 12208($gp)
	sw   $t0, 12212($gp)
	sw   $t0, 12224($gp)
	sw   $t0, 12228($gp)
	sw   $t0, 12232($gp)
	sw   $t0, 12252($gp)
	sw   $t0, 12256($gp)
	sw   $t0, 12260($gp)
	sw   $t0, 12272($gp)
	sw   $t0, 12300($gp)
	sw   $t0, 12304($gp)
	sw   $t0, 12316($gp)
	sw   $t0, 12320($gp)
	sw   $t0, 12324($gp)
	sw   $t0, 12348($gp)
	sw   $t0, 12352($gp)
	sw   $t0, 12388($gp)
	sw   $t0, 12392($gp)
	sw   $t0, 12396($gp)
	sw   $t0, 12400($gp)
	sw   $t0, 12404($gp)
	sw   $t0, 12408($gp)
	sw   $t0, 12412($gp)
	sw   $t0, 12416($gp)
	sw   $t0, 12420($gp)
	sw   $t0, 12424($gp)
	sw   $t0, 12428($gp)
	sw   $t0, 12432($gp)
	sw   $t0, 12436($gp)
	sw   $t0, 12440($gp)
	sw   $t0, 12444($gp)
	sw   $t0, 12448($gp)
	sw   $t0, 12452($gp)
	sw   $t0, 12456($gp)
	sw   $t0, 12460($gp)
	sw   $t0, 12464($gp)
	sw   $t0, 12468($gp)
	sw   $t0, 12472($gp)
	sw   $t0, 12480($gp)
	sw   $t0, 12484($gp)
	sw   $t0, 12488($gp)
	sw   $t0, 12492($gp)
	sw   $t0, 12504($gp)
	sw   $t0, 12508($gp)
	sw   $t0, 12512($gp)
	sw   $t0, 12516($gp)
	sw   $t0, 12520($gp)
	sw   $t0, 12524($gp)
	sw   $t0, 12528($gp)
	sw   $t0, 12560($gp)
	sw   $t0, 12564($gp)
	sw   $t0, 12568($gp)
	sw   $t0, 12572($gp)
	sw   $t0, 12576($gp)
	sw   $t0, 12580($gp)
	sw   $t0, 12584($gp)
	sw   $t0, 12588($gp)
	sw   $t0, 12600($gp)
	sw   $t0, 12604($gp)
	sw   $t0, 12608($gp)
	sw   $t0, 12612($gp)
	sw   $t0, 12616($gp)
	sw   $t0, 12628($gp)
	sw   $t0, 12632($gp)
	sw   $t0, 12636($gp)
	sw   $t0, 12640($gp)
	sw   $t0, 12644($gp)
	sw   $t0, 12648($gp)
	sw   $t0, 12652($gp)
	sw   $t0, 12656($gp)
	sw   $t0, 12660($gp)
	sw   $t0, 12664($gp)
	sw   $t0, 12668($gp)
	sw   $t0, 12672($gp)
	sw   $t0, 12676($gp)
	sw   $t0, 12680($gp)
	sw   $t0, 12684($gp)
	sw   $t0, 12692($gp)
	sw   $t0, 12696($gp)
	sw   $t0, 12700($gp)
	sw   $t0, 12704($gp)
	sw   $t0, 12712($gp)
	sw   $t0, 12716($gp)
	sw   $t0, 12720($gp)
	sw   $t0, 12724($gp)
	sw   $t0, 12728($gp)
	sw   $t0, 12732($gp)
	sw   $t0, 12736($gp)
	sw   $t0, 12740($gp)
	sw   $t0, 12744($gp)
	sw   $t0, 12748($gp)
	sw   $t0, 12756($gp)
	sw   $t0, 12760($gp)
	sw   $t0, 12764($gp)
	sw   $t0, 12768($gp)
	sw   $t0, 12772($gp)
	sw   $t0, 12776($gp)
	sw   $t0, 12820($gp)
	sw   $t0, 12824($gp)
	sw   $t0, 12828($gp)
	sw   $t0, 12832($gp)
	sw   $t0, 12836($gp)
	sw   $t0, 12840($gp)
	sw   $t0, 12844($gp)
	sw   $t0, 12852($gp)
	sw   $t0, 12856($gp)
	sw   $t0, 12860($gp)
	sw   $t0, 12864($gp)
	sw   $t0, 12868($gp)
	sw   $t0, 12872($gp)
	sw   $t0, 12880($gp)
	sw   $t0, 12884($gp)
	sw   $t0, 12888($gp)
	sw   $t0, 12892($gp)
	sw   $t0, 12896($gp)
	sw   $t0, 12900($gp)
	sw   $t0, 12904($gp)
	sw   $t0, 12908($gp)
	sw   $t0, 12912($gp)
	sw   $t0, 12916($gp)
	sw   $t0, 12920($gp)
	sw   $t0, 12924($gp)
	sw   $t0, 12928($gp)
	sw   $t0, 12932($gp)
	sw   $t0, 12936($gp)
	sw   $t0, 12940($gp)
	sw   $t0, 12944($gp)
	sw   $t0, 12964($gp)
	sw   $t0, 12968($gp)
	sw   $t0, 12972($gp)
	sw   $t0, 12976($gp)
	sw   $t0, 12980($gp)
	sw   $t0, 12984($gp)
	sw   $t0, 12988($gp)
	sw   $t0, 12992($gp)
	sw   $t0, 12996($gp)
	sw   $t0, 13000($gp)
	sw   $t0, 13004($gp)
	sw   $t0, 13008($gp)
	sw   $t0, 13012($gp)
	sw   $t0, 13016($gp)
	sw   $t0, 13020($gp)
	sw   $t0, 13024($gp)
	sw   $t0, 13088($gp)
	sw   $t0, 13092($gp)
	sw   $t0, 13096($gp)
	sw   $t0, 13100($gp)
	sw   $t0, 13104($gp)
	sw   $t0, 13108($gp)
	sw   $t0, 13112($gp)
	sw   $t0, 13116($gp)
	sw   $t0, 13120($gp)
	sw   $t0, 13124($gp)
	sw   $t0, 13128($gp)
	sw   $t0, 13132($gp)
	sw   $t0, 13136($gp)
	sw   $t0, 13140($gp)
	sw   $t0, 13144($gp)
	sw   $t0, 13148($gp)
	sw   $t0, 13152($gp)
	sw   $t0, 13156($gp)
	sw   $t0, 13160($gp)
	sw   $t0, 13164($gp)
	sw   $t0, 13200($gp)
	sw   $t0, 13204($gp)
	sw   $t0, 13208($gp)
	sw   $t0, 13212($gp)
	sw   $t0, 13216($gp)
	sw   $t0, 13220($gp)
	sw   $t0, 13224($gp)
	sw   $t0, 13228($gp)
	sw   $t0, 13232($gp)
	sw   $t0, 13236($gp)
	sw   $t0, 13240($gp)
	sw   $t0, 13244($gp)
	sw   $t0, 13248($gp)
	sw   $t0, 13252($gp)
	sw   $t0, 13256($gp)
	sw   $t0, 13260($gp)
	sw   $t0, 13264($gp)
	sw   $t0, 13268($gp)
	sw   $t0, 13272($gp)
	sw   $t0, 13276($gp)
	sw   $t0, 13348($gp)
	sw   $t0, 13352($gp)
	sw   $t0, 13356($gp)
	sw   $t0, 13360($gp)
	sw   $t0, 13364($gp)
	sw   $t0, 13368($gp)
	sw   $t0, 13372($gp)
	sw   $t0, 13376($gp)
	sw   $t0, 13380($gp)
	sw   $t0, 13384($gp)
	sw   $t0, 13388($gp)
	sw   $t0, 13392($gp)
	sw   $t0, 13396($gp)
	sw   $t0, 13400($gp)
	sw   $t0, 13404($gp)
	sw   $t0, 13408($gp)
	sw   $t0, 13412($gp)
	sw   $t0, 13460($gp)
	sw   $t0, 13464($gp)
	sw   $t0, 13468($gp)
	sw   $t0, 13472($gp)
	sw   $t0, 13476($gp)
	sw   $t0, 13480($gp)
	sw   $t0, 13484($gp)
	sw   $t0, 13488($gp)
	sw   $t0, 13492($gp)
	sw   $t0, 13496($gp)
	sw   $t0, 13500($gp)
	sw   $t0, 13504($gp)
	sw   $t0, 13508($gp)
	sw   $t0, 13512($gp)
	sw   $t0, 13516($gp)
	sw   $t0, 13616($gp)
	sw   $t0, 13620($gp)
	sw   $t0, 13624($gp)
	sw   $t0, 13628($gp)
	sw   $t0, 13632($gp)
	sw   $t0, 13636($gp)
	sw   $t0, 13652($gp)
	sw   $t0, 13656($gp)
	sw   $t0, 13660($gp)
	sw   $t0, 13664($gp)
	sw   $t0, 13668($gp)
	sw   $t0, 13672($gp)
	sw   $t0, 13712($gp)
	sw   $t0, 13716($gp)
	sw   $t0, 13720($gp)
	sw   $t0, 13724($gp)
	sw   $t0, 13920($gp)
	sw   $t0, 13924($gp)
	sw   $t0, 13928($gp)
	sw   $t0, 13932($gp)
	sw   $t0, 13964($gp)
	sw   $t0, 13968($gp)
	sw   $t0, 13972($gp)
	sw   $t0, 13976($gp)
	sw   $t0, 13980($gp)
	sw   $t0, 13984($gp)
	sw   $t0, 13988($gp)
	sw   $t0, 14000($gp)
	sw   $t0, 14004($gp)
	sw   $t0, 14008($gp)
	sw   $t0, 14148($gp)
	sw   $t0, 14172($gp)
	sw   $t0, 14176($gp)
	sw   $t0, 14180($gp)
	sw   $t0, 14184($gp)
	sw   $t0, 14188($gp)
	sw   $t0, 14192($gp)
	sw   $t0, 14196($gp)
	sw   $t0, 14200($gp)
	sw   $t0, 14204($gp)
	sw   $t0, 14208($gp)
	sw   $t0, 14212($gp)
	sw   $t0, 14216($gp)
	sw   $t0, 14220($gp)
	sw   $t0, 14224($gp)
	sw   $t0, 14228($gp)
	sw   $t0, 14232($gp)
	sw   $t0, 14236($gp)
	sw   $t0, 14240($gp)
	sw   $t0, 14244($gp)
	sw   $t0, 14252($gp)
	sw   $t0, 14256($gp)
	sw   $t0, 14260($gp)
	sw   $t0, 14264($gp)
	sw   $t0, 14268($gp)
	sw   $t0, 14284($gp)
	sw   $t0, 14288($gp)
	sw   $t0, 14396($gp)
	sw   $t0, 14400($gp)
	sw   $t0, 14404($gp)
	sw   $t0, 14408($gp)
	sw   $t0, 14416($gp)
	sw   $t0, 14420($gp)
	sw   $t0, 14424($gp)
	sw   $t0, 14428($gp)
	sw   $t0, 14432($gp)
	sw   $t0, 14436($gp)
	sw   $t0, 14440($gp)
	sw   $t0, 14444($gp)
	sw   $t0, 14448($gp)
	sw   $t0, 14452($gp)
	sw   $t0, 14456($gp)
	sw   $t0, 14460($gp)
	sw   $t0, 14464($gp)
	sw   $t0, 14468($gp)
	sw   $t0, 14472($gp)
	sw   $t0, 14476($gp)
	sw   $t0, 14480($gp)
	sw   $t0, 14484($gp)
	sw   $t0, 14488($gp)
	sw   $t0, 14492($gp)
	sw   $t0, 14496($gp)
	sw   $t0, 14500($gp)
	sw   $t0, 14504($gp)
	sw   $t0, 14508($gp)
	sw   $t0, 14512($gp)
	sw   $t0, 14516($gp)
	sw   $t0, 14520($gp)
	sw   $t0, 14524($gp)
	sw   $t0, 14528($gp)
	sw   $t0, 14536($gp)
	sw   $t0, 14540($gp)
	sw   $t0, 14544($gp)
	sw   $t0, 14548($gp)
	sw   $t0, 14596($gp)
	sw   $t0, 14612($gp)
	sw   $t0, 14648($gp)
	sw   $t0, 14652($gp)
	sw   $t0, 14656($gp)
	sw   $t0, 14660($gp)
	sw   $t0, 14664($gp)
	sw   $t0, 14668($gp)
	sw   $t0, 14672($gp)
	sw   $t0, 14676($gp)
	sw   $t0, 14680($gp)
	sw   $t0, 14684($gp)
	sw   $t0, 14688($gp)
	sw   $t0, 14744($gp)
	sw   $t0, 14748($gp)
	sw   $t0, 14752($gp)
	sw   $t0, 14756($gp)
	sw   $t0, 14760($gp)
	sw   $t0, 14764($gp)
	sw   $t0, 14768($gp)
	sw   $t0, 14772($gp)
	sw   $t0, 14776($gp)
	sw   $t0, 14780($gp)
	sw   $t0, 14784($gp)
	sw   $t0, 14788($gp)
	sw   $t0, 14792($gp)
	sw   $t0, 14796($gp)
	sw   $t0, 14800($gp)
	sw   $t0, 14804($gp)
	sw   $t0, 14808($gp)
	sw   $t0, 14856($gp)
	sw   $t0, 14860($gp)
	sw   $t0, 14864($gp)
	sw   $t0, 14880($gp)
	sw   $t0, 14884($gp)
	sw   $t0, 14888($gp)
	sw   $t0, 14892($gp)
	sw   $t0, 14904($gp)
	sw   $t0, 14908($gp)
	sw   $t0, 14912($gp)
	sw   $t0, 14916($gp)
	sw   $t0, 14920($gp)
	sw   $t0, 14924($gp)
	sw   $t0, 14928($gp)
	sw   $t0, 14932($gp)
	sw   $t0, 14936($gp)
	sw   $t0, 14940($gp)
	sw   $t0, 15004($gp)
	sw   $t0, 15008($gp)
	sw   $t0, 15012($gp)
	sw   $t0, 15016($gp)
	sw   $t0, 15020($gp)
	sw   $t0, 15024($gp)
	sw   $t0, 15028($gp)
	sw   $t0, 15032($gp)
	sw   $t0, 15036($gp)
	sw   $t0, 15040($gp)
	sw   $t0, 15044($gp)
	sw   $t0, 15048($gp)
	sw   $t0, 15052($gp)
	sw   $t0, 15056($gp)
	sw   $t0, 15060($gp)
	sw   $t0, 15064($gp)
	sw   $t0, 15068($gp)
	sw   $t0, 15072($gp)
	sw   $t0, 15076($gp)
	sw   $t0, 15080($gp)
	sw   $t0, 15084($gp)
	sw   $t0, 15132($gp)
	sw   $t0, 15136($gp)
	sw   $t0, 15140($gp)
	sw   $t0, 15144($gp)
	sw   $t0, 15148($gp)
	sw   $t0, 15152($gp)
	sw   $t0, 15160($gp)
	sw   $t0, 15164($gp)
	sw   $t0, 15168($gp)
	sw   $t0, 15172($gp)
	sw   $t0, 15180($gp)
	sw   $t0, 15184($gp)
	sw   $t0, 15188($gp)
	sw   $t0, 15196($gp)
	sw   $t0, 15200($gp)
	sw   $t0, 15260($gp)
	sw   $t0, 15264($gp)
	sw   $t0, 15268($gp)
	sw   $t0, 15272($gp)
	sw   $t0, 15276($gp)
	sw   $t0, 15280($gp)
	sw   $t0, 15284($gp)
	sw   $t0, 15288($gp)
	sw   $t0, 15292($gp)
	sw   $t0, 15296($gp)
	sw   $t0, 15300($gp)
	sw   $t0, 15304($gp)
	sw   $t0, 15308($gp)
	sw   $t0, 15312($gp)
	sw   $t0, 15316($gp)
	sw   $t0, 15320($gp)
	sw   $t0, 15324($gp)
	sw   $t0, 15328($gp)
	sw   $t0, 15332($gp)
	sw   $t0, 15336($gp)
	sw   $t0, 15340($gp)
	sw   $t0, 15344($gp)
	sw   $t0, 15384($gp)
	sw   $t0, 15388($gp)
	sw   $t0, 15392($gp)
	sw   $t0, 15396($gp)
	sw   $t0, 15400($gp)
	sw   $t0, 15404($gp)
	sw   $t0, 15408($gp)
	sw   $t0, 15412($gp)
	sw   $t0, 15416($gp)
	sw   $t0, 15420($gp)
	sw   $t0, 15424($gp)
	sw   $t0, 15428($gp)
	sw   $t0, 15432($gp)
	sw   $t0, 15448($gp)
	sw   $t0, 15452($gp)
	sw   $t0, 15456($gp)
	sw   $t0, 15460($gp)
	sw   $t0, 15508($gp)
	sw   $t0, 15512($gp)
	sw   $t0, 15516($gp)
	sw   $t0, 15520($gp)
	sw   $t0, 15524($gp)
	sw   $t0, 15528($gp)
	sw   $t0, 15532($gp)
	sw   $t0, 15536($gp)
	sw   $t0, 15540($gp)
	sw   $t0, 15544($gp)
	sw   $t0, 15548($gp)
	sw   $t0, 15552($gp)
	sw   $t0, 15556($gp)
	sw   $t0, 15560($gp)
	sw   $t0, 15564($gp)
	sw   $t0, 15568($gp)
	sw   $t0, 15572($gp)
	sw   $t0, 15576($gp)
	sw   $t0, 15580($gp)
	sw   $t0, 15584($gp)
	sw   $t0, 15588($gp)
	sw   $t0, 15592($gp)
	sw   $t0, 15596($gp)
	sw   $t0, 15600($gp)
	sw   $t0, 15616($gp)
	sw   $t0, 15620($gp)
	sw   $t0, 15624($gp)
	sw   $t0, 15628($gp)
	sw   $t0, 15632($gp)
	sw   $t0, 15636($gp)
	sw   $t0, 15640($gp)
	sw   $t0, 15644($gp)
	sw   $t0, 15648($gp)
	sw   $t0, 15652($gp)
	sw   $t0, 15656($gp)
	sw   $t0, 15660($gp)
	sw   $t0, 15664($gp)
	sw   $t0, 15668($gp)
	sw   $t0, 15672($gp)
	sw   $t0, 15676($gp)
	sw   $t0, 15680($gp)
	sw   $t0, 15684($gp)
	sw   $t0, 15688($gp)
	sw   $t0, 15692($gp)
	sw   $t0, 15696($gp)
	sw   $t0, 15700($gp)
	sw   $t0, 15704($gp)
	sw   $t0, 15788($gp)
	sw   $t0, 15792($gp)
	sw   $t0, 15796($gp)
	sw   $t0, 15800($gp)
	sw   $t0, 15804($gp)
	sw   $t0, 15812($gp)
	sw   $t0, 15816($gp)
	sw   $t0, 15820($gp)
	sw   $t0, 15824($gp)
	sw   $t0, 15832($gp)
	sw   $t0, 15836($gp)
	sw   $t0, 15840($gp)
	sw   $t0, 15844($gp)
	sw   $t0, 15848($gp)
	sw   $t0, 15852($gp)
	sw   $t0, 15856($gp)
	sw   $t0, 15872($gp)
	sw   $t0, 15876($gp)
	sw   $t0, 15880($gp)
	sw   $t0, 15884($gp)
	sw   $t0, 15888($gp)
	sw   $t0, 15892($gp)
	sw   $t0, 15900($gp)
	sw   $t0, 15904($gp)
	sw   $t0, 15908($gp)
	sw   $t0, 15912($gp)
	sw   $t0, 15920($gp)
	sw   $t0, 15924($gp)
	sw   $t0, 15928($gp)
	sw   $t0, 15932($gp)
	sw   $t0, 15936($gp)
	sw   $t0, 15940($gp)
	sw   $t0, 15944($gp)
	sw   $t0, 15948($gp)
	sw   $t0, 15952($gp)
	sw   $t0, 15956($gp)
	sw   $t0, 16052($gp)
	sw   $t0, 16056($gp)
	sw   $t0, 16060($gp)
	sw   $t0, 16064($gp)
	sw   $t0, 16084($gp)
	sw   $t0, 16088($gp)
	sw   $t0, 16092($gp)
	sw   $t0, 16096($gp)
	sw   $t0, 16100($gp)
	sw   $t0, 16104($gp)
	sw   $t0, 16108($gp)
	sw   $t0, 16128($gp)
	sw   $t0, 16132($gp)
	sw   $t0, 16136($gp)
	sw   $t0, 16140($gp)
	sw   $t0, 16144($gp)
	sw   $t0, 16148($gp)
	sw   $t0, 16152($gp)
	sw   $t0, 16172($gp)
	sw   $t0, 16176($gp)
	sw   $t0, 16180($gp)
	sw   $t0, 16184($gp)
	sw   $t0, 16188($gp)
	sw   $t0, 16192($gp)
	sw   $t0, 16196($gp)
	sw   $t0, 16200($gp)
	sw   $t0, 16204($gp)
	sw   $t0, 16208($gp)
	sw   $t0, 16212($gp)
	sw   $t0, 16328($gp)
	sw   $t0, 16332($gp)
	sw   $t0, 16336($gp)
	sw   $t0, 16340($gp)
	sw   $t0, 16344($gp)
	sw   $t0, 16348($gp)
	sw   $t0, 16352($gp)
	sw   $t0, 16356($gp)
	sw   $t0, 16360($gp)
	sw   $t0, 16364($gp)
	sw   $t0, 16384($gp)
	sw   $t0, 16388($gp)
	sw   $t0, 16412($gp)
	sw   $t0, 16416($gp)
	sw   $t0, 16420($gp)
	sw   $t0, 16424($gp)
	sw   $t0, 16428($gp)
	sw   $t0, 16432($gp)
	sw   $t0, 16436($gp)
	sw   $t0, 16440($gp)
	sw   $t0, 16444($gp)
	sw   $t0, 16464($gp)
	sw   $t0, 16588($gp)
	sw   $t0, 16592($gp)
	sw   $t0, 16596($gp)
	sw   $t0, 16600($gp)
	sw   $t0, 16612($gp)
	sw   $t0, 16616($gp)
	sw   $t0, 16620($gp)
	sw   $t0, 16624($gp)
	sw   $t0, 16628($gp)
	sw   $t0, 16632($gp)
	sw   $t0, 16636($gp)
	sw   $t0, 16668($gp)
	sw   $t0, 16672($gp)
	sw   $t0, 16696($gp)
	sw   $t0, 16848($gp)
	sw   $t0, 16876($gp)
	sw   $t0, 16880($gp)
	sw   $t0, 16884($gp)
	sw   $t0, 16888($gp)
	sw   $t0, 16892($gp)
	sw   $t0, 16928($gp)
	sw   $t0, 17104($gp)
	sw   $t0, 17132($gp)
	sw   $t0, 17920($gp)
	sw   $t0, 18176($gp)
	sw   $t0, 18428($gp)
	sw   $t0, 18432($gp)
	sw   $t0, 18436($gp)
	sw   $t0, 18684($gp)
	sw   $t0, 18688($gp)
	sw   $t0, 18692($gp)
	sw   $t0, 18696($gp)
	sw   $t0, 18932($gp)
	sw   $t0, 18936($gp)
	sw   $t0, 18940($gp)
	sw   $t0, 18956($gp)
	sw   $t0, 18960($gp)
	sw   $t0, 19180($gp)
	sw   $t0, 19184($gp)
	sw   $t0, 19188($gp)
	sw   $t0, 19192($gp)
	sw   $t0, 19196($gp)
	sw   $t0, 19424($gp)
	sw   $t0, 19428($gp)
	sw   $t0, 19432($gp)

	# Mid Blue
	li   $t0, 0x00141538
	sw   $t0, 264($gp)
	sw   $t0, 288($gp)
	sw   $t0, 480($gp)
	sw   $t0, 876($gp)
	sw   $t0, 940($gp)
	sw   $t0, 964($gp)
	sw   $t0, 1108($gp)
	sw   $t0, 1372($gp)
	sw   $t0, 1520($gp)
	sw   $t0, 1616($gp)
	sw   $t0, 1672($gp)
	sw   $t0, 1828($gp)
	sw   $t0, 2580($gp)
	sw   $t0, 2732($gp)
	sw   $t0, 2928($gp)
	sw   $t0, 3156($gp)
	sw   $t0, 3228($gp)
	sw   $t0, 3540($gp)
	sw   $t0, 3884($gp)
	sw   $t0, 4444($gp)
	sw   $t0, 4484($gp)
	sw   $t0, 4612($gp)
	sw   $t0, 4924($gp)
	sw   $t0, 5360($gp)
	sw   $t0, 5524($gp)
	sw   $t0, 5544($gp)
	sw   $t0, 5732($gp)
	sw   $t0, 5964($gp)
	sw   $t0, 6012($gp)
	sw   $t0, 6016($gp)
	sw   $t0, 6164($gp)
	sw   $t0, 6260($gp)
	sw   $t0, 6264($gp)
	sw   $t0, 6268($gp)
	sw   $t0, 6272($gp)
	sw   $t0, 6276($gp)
	sw   $t0, 6348($gp)
	sw   $t0, 6464($gp)
	sw   $t0, 6512($gp)
	sw   $t0, 6516($gp)
	sw   $t0, 6520($gp)
	sw   $t0, 6524($gp)
	sw   $t0, 6528($gp)
	sw   $t0, 6532($gp)
	sw   $t0, 6536($gp)
	sw   $t0, 6636($gp)
	sw   $t0, 6768($gp)
	sw   $t0, 6772($gp)
	sw   $t0, 6776($gp)
	sw   $t0, 6780($gp)
	sw   $t0, 6784($gp)
	sw   $t0, 6788($gp)
	sw   $t0, 6792($gp)
	sw   $t0, 7008($gp)
	sw   $t0, 7012($gp)
	sw   $t0, 7016($gp)
	sw   $t0, 7024($gp)
	sw   $t0, 7028($gp)
	sw   $t0, 7032($gp)
	sw   $t0, 7036($gp)
	sw   $t0, 7040($gp)
	sw   $t0, 7044($gp)
	sw   $t0, 7048($gp)
	sw   $t0, 7052($gp)
	sw   $t0, 7056($gp)
	sw   $t0, 7060($gp)
	sw   $t0, 7076($gp)
	sw   $t0, 7080($gp)
	sw   $t0, 7256($gp)
	sw   $t0, 7260($gp)
	sw   $t0, 7264($gp)
	sw   $t0, 7268($gp)
	sw   $t0, 7272($gp)
	sw   $t0, 7276($gp)
	sw   $t0, 7280($gp)
	sw   $t0, 7284($gp)
	sw   $t0, 7288($gp)
	sw   $t0, 7292($gp)
	sw   $t0, 7296($gp)
	sw   $t0, 7300($gp)
	sw   $t0, 7304($gp)
	sw   $t0, 7308($gp)
	sw   $t0, 7312($gp)
	sw   $t0, 7316($gp)
	sw   $t0, 7320($gp)
	sw   $t0, 7324($gp)
	sw   $t0, 7328($gp)
	sw   $t0, 7332($gp)
	sw   $t0, 7336($gp)
	sw   $t0, 7340($gp)
	sw   $t0, 7412($gp)
	sw   $t0, 7416($gp)
	sw   $t0, 7420($gp)
	sw   $t0, 7512($gp)
	sw   $t0, 7516($gp)
	sw   $t0, 7520($gp)
	sw   $t0, 7524($gp)
	sw   $t0, 7528($gp)
	sw   $t0, 7532($gp)
	sw   $t0, 7536($gp)
	sw   $t0, 7540($gp)
	sw   $t0, 7544($gp)
	sw   $t0, 7548($gp)
	sw   $t0, 7552($gp)
	sw   $t0, 7556($gp)
	sw   $t0, 7560($gp)
	sw   $t0, 7564($gp)
	sw   $t0, 7568($gp)
	sw   $t0, 7572($gp)
	sw   $t0, 7576($gp)
	sw   $t0, 7580($gp)
	sw   $t0, 7584($gp)
	sw   $t0, 7588($gp)
	sw   $t0, 7592($gp)
	sw   $t0, 7596($gp)
	sw   $t0, 7660($gp)
	sw   $t0, 7664($gp)
	sw   $t0, 7668($gp)
	sw   $t0, 7672($gp)
	sw   $t0, 7676($gp)
	sw   $t0, 7684($gp)
	sw   $t0, 7700($gp)
	sw   $t0, 7764($gp)
	sw   $t0, 7768($gp)
	sw   $t0, 7772($gp)
	sw   $t0, 7776($gp)
	sw   $t0, 7780($gp)
	sw   $t0, 7784($gp)
	sw   $t0, 7788($gp)
	sw   $t0, 7792($gp)
	sw   $t0, 7796($gp)
	sw   $t0, 7800($gp)
	sw   $t0, 7804($gp)
	sw   $t0, 7808($gp)
	sw   $t0, 7812($gp)
	sw   $t0, 7820($gp)
	sw   $t0, 7824($gp)
	sw   $t0, 7828($gp)
	sw   $t0, 7832($gp)
	sw   $t0, 7840($gp)
	sw   $t0, 7844($gp)
	sw   $t0, 7848($gp)
	sw   $t0, 7852($gp)
	sw   $t0, 7912($gp)
	sw   $t0, 7916($gp)
	sw   $t0, 7920($gp)
	sw   $t0, 7924($gp)
	sw   $t0, 7928($gp)
	sw   $t0, 7932($gp)
	sw   $t0, 8016($gp)
	sw   $t0, 8020($gp)
	sw   $t0, 8024($gp)
	sw   $t0, 8028($gp)
	sw   $t0, 8032($gp)
	sw   $t0, 8036($gp)
	sw   $t0, 8040($gp)
	sw   $t0, 8044($gp)
	sw   $t0, 8048($gp)
	sw   $t0, 8052($gp)
	sw   $t0, 8056($gp)
	sw   $t0, 8060($gp)
	sw   $t0, 8064($gp)
	sw   $t0, 8068($gp)
	sw   $t0, 8072($gp)
	sw   $t0, 8092($gp)
	sw   $t0, 8096($gp)
	sw   $t0, 8100($gp)
	sw   $t0, 8104($gp)
	sw   $t0, 8168($gp)
	sw   $t0, 8172($gp)
	sw   $t0, 8176($gp)
	sw   $t0, 8180($gp)
	sw   $t0, 8184($gp)
	sw   $t0, 8188($gp)
	sw   $t0, 8192($gp)
	sw   $t0, 8196($gp)
	sw   $t0, 8276($gp)
	sw   $t0, 8280($gp)
	sw   $t0, 8284($gp)
	sw   $t0, 8288($gp)
	sw   $t0, 8292($gp)
	sw   $t0, 8296($gp)
	sw   $t0, 8300($gp)
	sw   $t0, 8304($gp)
	sw   $t0, 8312($gp)
	sw   $t0, 8316($gp)
	sw   $t0, 8320($gp)
	sw   $t0, 8324($gp)
	sw   $t0, 8328($gp)
	sw   $t0, 8332($gp)
	sw   $t0, 8340($gp)
	sw   $t0, 8344($gp)
	sw   $t0, 8348($gp)
	sw   $t0, 8352($gp)
	sw   $t0, 8356($gp)
	sw   $t0, 8404($gp)
	sw   $t0, 8408($gp)
	sw   $t0, 8412($gp)
	sw   $t0, 8416($gp)
	sw   $t0, 8424($gp)
	sw   $t0, 8428($gp)
	sw   $t0, 8432($gp)
	sw   $t0, 8436($gp)
	sw   $t0, 8440($gp)
	sw   $t0, 8444($gp)
	sw   $t0, 8448($gp)
	sw   $t0, 8452($gp)
	sw   $t0, 8456($gp)
	sw   $t0, 8488($gp)
	sw   $t0, 8532($gp)
	sw   $t0, 8536($gp)
	sw   $t0, 8540($gp)
	sw   $t0, 8544($gp)
	sw   $t0, 8548($gp)
	sw   $t0, 8552($gp)
	sw   $t0, 8556($gp)
	sw   $t0, 8560($gp)
	sw   $t0, 8564($gp)
	sw   $t0, 8592($gp)
	sw   $t0, 8596($gp)
	sw   $t0, 8600($gp)
	sw   $t0, 8604($gp)
	sw   $t0, 8608($gp)
	sw   $t0, 8612($gp)
	sw   $t0, 8616($gp)
	sw   $t0, 8620($gp)
	sw   $t0, 8624($gp)
	sw   $t0, 8628($gp)
	sw   $t0, 8660($gp)
	sw   $t0, 8664($gp)
	sw   $t0, 8668($gp)
	sw   $t0, 8672($gp)
	sw   $t0, 8680($gp)
	sw   $t0, 8684($gp)
	sw   $t0, 8688($gp)
	sw   $t0, 8692($gp)
	sw   $t0, 8696($gp)
	sw   $t0, 8700($gp)
	sw   $t0, 8704($gp)
	sw   $t0, 8708($gp)
	sw   $t0, 8712($gp)
	sw   $t0, 8764($gp)
	sw   $t0, 8768($gp)
	sw   $t0, 8772($gp)
	sw   $t0, 8776($gp)
	sw   $t0, 8780($gp)
	sw   $t0, 8784($gp)
	sw   $t0, 8788($gp)
	sw   $t0, 8792($gp)
	sw   $t0, 8796($gp)
	sw   $t0, 8800($gp)
	sw   $t0, 8804($gp)
	sw   $t0, 8808($gp)
	sw   $t0, 8812($gp)
	sw   $t0, 8816($gp)
	sw   $t0, 8820($gp)
	sw   $t0, 8824($gp)
	sw   $t0, 8828($gp)
	sw   $t0, 8832($gp)
	sw   $t0, 8836($gp)
	sw   $t0, 8840($gp)
	sw   $t0, 8844($gp)
	sw   $t0, 8848($gp)
	sw   $t0, 8852($gp)
	sw   $t0, 8856($gp)
	sw   $t0, 8860($gp)
	sw   $t0, 8864($gp)
	sw   $t0, 8868($gp)
	sw   $t0, 8872($gp)
	sw   $t0, 8876($gp)
	sw   $t0, 8880($gp)
	sw   $t0, 8884($gp)
	sw   $t0, 8888($gp)
	sw   $t0, 8900($gp)
	sw   $t0, 8912($gp)
	sw   $t0, 8916($gp)
	sw   $t0, 8920($gp)
	sw   $t0, 8924($gp)
	sw   $t0, 8928($gp)
	sw   $t0, 8932($gp)
	sw   $t0, 8936($gp)
	sw   $t0, 8940($gp)
	sw   $t0, 8944($gp)
	sw   $t0, 8948($gp)
	sw   $t0, 8952($gp)
	sw   $t0, 8956($gp)
	sw   $t0, 8960($gp)
	sw   $t0, 8964($gp)
	sw   $t0, 8968($gp)
	sw   $t0, 8972($gp)
	sw   $t0, 8976($gp)
	sw   $t0, 8980($gp)
	sw   $t0, 9016($gp)
	sw   $t0, 9020($gp)
	sw   $t0, 9024($gp)
	sw   $t0, 9028($gp)
	sw   $t0, 9032($gp)
	sw   $t0, 9036($gp)
	sw   $t0, 9040($gp)
	sw   $t0, 9044($gp)
	sw   $t0, 9048($gp)
	sw   $t0, 9052($gp)
	sw   $t0, 9056($gp)
	sw   $t0, 9060($gp)
	sw   $t0, 9064($gp)
	sw   $t0, 9068($gp)
	sw   $t0, 9072($gp)
	sw   $t0, 9076($gp)
	sw   $t0, 9080($gp)
	sw   $t0, 9084($gp)
	sw   $t0, 9088($gp)
	sw   $t0, 9092($gp)
	sw   $t0, 9096($gp)
	sw   $t0, 9100($gp)
	sw   $t0, 9104($gp)
	sw   $t0, 9108($gp)
	sw   $t0, 9112($gp)
	sw   $t0, 9116($gp)
	sw   $t0, 9120($gp)
	sw   $t0, 9124($gp)
	sw   $t0, 9128($gp)
	sw   $t0, 9132($gp)
	sw   $t0, 9136($gp)
	sw   $t0, 9140($gp)
	sw   $t0, 9144($gp)
	sw   $t0, 9148($gp)
	sw   $t0, 9164($gp)
	sw   $t0, 9168($gp)
	sw   $t0, 9172($gp)
	sw   $t0, 9176($gp)
	sw   $t0, 9180($gp)
	sw   $t0, 9184($gp)
	sw   $t0, 9188($gp)
	sw   $t0, 9192($gp)
	sw   $t0, 9196($gp)
	sw   $t0, 9200($gp)
	sw   $t0, 9204($gp)
	sw   $t0, 9208($gp)
	sw   $t0, 9212($gp)
	sw   $t0, 9216($gp)
	sw   $t0, 9220($gp)
	sw   $t0, 9224($gp)
	sw   $t0, 9228($gp)
	sw   $t0, 9232($gp)
	sw   $t0, 9236($gp)
	sw   $t0, 9240($gp)
	sw   $t0, 9268($gp)
	sw   $t0, 9272($gp)
	sw   $t0, 9276($gp)
	sw   $t0, 9280($gp)
	sw   $t0, 9284($gp)
	sw   $t0, 9288($gp)
	sw   $t0, 9292($gp)
	sw   $t0, 9296($gp)
	sw   $t0, 9300($gp)
	sw   $t0, 9304($gp)
	sw   $t0, 9308($gp)
	sw   $t0, 9312($gp)
	sw   $t0, 9316($gp)
	sw   $t0, 9320($gp)
	sw   $t0, 9324($gp)
	sw   $t0, 9328($gp)
	sw   $t0, 9332($gp)
	sw   $t0, 9336($gp)
	sw   $t0, 9340($gp)
	sw   $t0, 9344($gp)
	sw   $t0, 9348($gp)
	sw   $t0, 9352($gp)
	sw   $t0, 9356($gp)
	sw   $t0, 9360($gp)
	sw   $t0, 9364($gp)
	sw   $t0, 9368($gp)
	sw   $t0, 9372($gp)
	sw   $t0, 9376($gp)
	sw   $t0, 9380($gp)
	sw   $t0, 9384($gp)
	sw   $t0, 9388($gp)
	sw   $t0, 9392($gp)
	sw   $t0, 9396($gp)
	sw   $t0, 9400($gp)
	sw   $t0, 9404($gp)
	sw   $t0, 9408($gp)
	sw   $t0, 9432($gp)
	sw   $t0, 9436($gp)
	sw   $t0, 9440($gp)
	sw   $t0, 9444($gp)
	sw   $t0, 9448($gp)
	sw   $t0, 9452($gp)
	sw   $t0, 9456($gp)
	sw   $t0, 9460($gp)
	sw   $t0, 9464($gp)
	sw   $t0, 9468($gp)
	sw   $t0, 9472($gp)
	sw   $t0, 9476($gp)
	sw   $t0, 9480($gp)
	sw   $t0, 9484($gp)
	sw   $t0, 9488($gp)
	sw   $t0, 9492($gp)
	sw   $t0, 9496($gp)
	sw   $t0, 9500($gp)
	sw   $t0, 9504($gp)
	sw   $t0, 9524($gp)
	sw   $t0, 9528($gp)
	sw   $t0, 9532($gp)
	sw   $t0, 9536($gp)
	sw   $t0, 9540($gp)
	sw   $t0, 9544($gp)
	sw   $t0, 9548($gp)
	sw   $t0, 9552($gp)
	sw   $t0, 9556($gp)
	sw   $t0, 9560($gp)
	sw   $t0, 9564($gp)
	sw   $t0, 9572($gp)
	sw   $t0, 9576($gp)
	sw   $t0, 9580($gp)
	sw   $t0, 9584($gp)
	sw   $t0, 9592($gp)
	sw   $t0, 9596($gp)
	sw   $t0, 9600($gp)
	sw   $t0, 9604($gp)
	sw   $t0, 9608($gp)
	sw   $t0, 9612($gp)
	sw   $t0, 9616($gp)
	sw   $t0, 9620($gp)
	sw   $t0, 9624($gp)
	sw   $t0, 9628($gp)
	sw   $t0, 9632($gp)
	sw   $t0, 9636($gp)
	sw   $t0, 9640($gp)
	sw   $t0, 9644($gp)
	sw   $t0, 9648($gp)
	sw   $t0, 9652($gp)
	sw   $t0, 9656($gp)
	sw   $t0, 9660($gp)
	sw   $t0, 9664($gp)
	sw   $t0, 9672($gp)
	sw   $t0, 9676($gp)
	sw   $t0, 9680($gp)
	sw   $t0, 9688($gp)
	sw   $t0, 9692($gp)
	sw   $t0, 9696($gp)
	sw   $t0, 9700($gp)
	sw   $t0, 9704($gp)
	sw   $t0, 9708($gp)
	sw   $t0, 9712($gp)
	sw   $t0, 9716($gp)
	sw   $t0, 9720($gp)
	sw   $t0, 9724($gp)
	sw   $t0, 9728($gp)
	sw   $t0, 9732($gp)
	sw   $t0, 9740($gp)
	sw   $t0, 9744($gp)
	sw   $t0, 9748($gp)
	sw   $t0, 9752($gp)
	sw   $t0, 9756($gp)
	sw   $t0, 9760($gp)
	sw   $t0, 9764($gp)
	sw   $t0, 9776($gp)
	sw   $t0, 9780($gp)
	sw   $t0, 9784($gp)
	sw   $t0, 9788($gp)
	sw   $t0, 9792($gp)
	sw   $t0, 9796($gp)
	sw   $t0, 9800($gp)
	sw   $t0, 9804($gp)
	sw   $t0, 9808($gp)
	sw   $t0, 9812($gp)
	sw   $t0, 9816($gp)
	sw   $t0, 9820($gp)
	sw   $t0, 9824($gp)
	sw   $t0, 9844($gp)
	sw   $t0, 9848($gp)
	sw   $t0, 9864($gp)
	sw   $t0, 9868($gp)
	sw   $t0, 9872($gp)
	sw   $t0, 9876($gp)
	sw   $t0, 9880($gp)
	sw   $t0, 9884($gp)
	sw   $t0, 9888($gp)
	sw   $t0, 9892($gp)
	sw   $t0, 9896($gp)
	sw   $t0, 9900($gp)
	sw   $t0, 9904($gp)
	sw   $t0, 9908($gp)
	sw   $t0, 9912($gp)
	sw   $t0, 9916($gp)
	sw   $t0, 9924($gp)
	sw   $t0, 9928($gp)
	sw   $t0, 9932($gp)
	sw   $t0, 9936($gp)
	sw   $t0, 9940($gp)
	sw   $t0, 9948($gp)
	sw   $t0, 9952($gp)
	sw   $t0, 9956($gp)
	sw   $t0, 9960($gp)
	sw   $t0, 9964($gp)
	sw   $t0, 9968($gp)
	sw   $t0, 9972($gp)
	sw   $t0, 9976($gp)
	sw   $t0, 9980($gp)
	sw   $t0, 9992($gp)
	sw   $t0, 9996($gp)
	sw   $t0, 10000($gp)
	sw   $t0, 10036($gp)
	sw   $t0, 10040($gp)
	sw   $t0, 10044($gp)
	sw   $t0, 10048($gp)
	sw   $t0, 10056($gp)
	sw   $t0, 10060($gp)
	sw   $t0, 10064($gp)
	sw   $t0, 10072($gp)
	sw   $t0, 10076($gp)
	sw   $t0, 10080($gp)
	sw   $t0, 10084($gp)
	sw   $t0, 10088($gp)
	sw   $t0, 10092($gp)
	sw   $t0, 10096($gp)
	sw   $t0, 10100($gp)
	sw   $t0, 10124($gp)
	sw   $t0, 10128($gp)
	sw   $t0, 10132($gp)
	sw   $t0, 10136($gp)
	sw   $t0, 10140($gp)
	sw   $t0, 10144($gp)
	sw   $t0, 10148($gp)
	sw   $t0, 10152($gp)
	sw   $t0, 10156($gp)
	sw   $t0, 10160($gp)
	sw   $t0, 10164($gp)
	sw   $t0, 10168($gp)
	sw   $t0, 10172($gp)
	sw   $t0, 10176($gp)
	sw   $t0, 10180($gp)
	sw   $t0, 10184($gp)
	sw   $t0, 10188($gp)
	sw   $t0, 10192($gp)
	sw   $t0, 10196($gp)
	sw   $t0, 10204($gp)
	sw   $t0, 10208($gp)
	sw   $t0, 10212($gp)
	sw   $t0, 10216($gp)
	sw   $t0, 10220($gp)
	sw   $t0, 10224($gp)
	sw   $t0, 10228($gp)
	sw   $t0, 10232($gp)
	sw   $t0, 10236($gp)
	sw   $t0, 10240($gp)
	sw   $t0, 10244($gp)
	sw   $t0, 10248($gp)
	sw   $t0, 10252($gp)
	sw   $t0, 10260($gp)
	sw   $t0, 10264($gp)
	sw   $t0, 10268($gp)
	sw   $t0, 10272($gp)
	sw   $t0, 10276($gp)
	sw   $t0, 10280($gp)
	sw   $t0, 10284($gp)
	sw   $t0, 10296($gp)
	sw   $t0, 10300($gp)
	sw   $t0, 10304($gp)
	sw   $t0, 10308($gp)
	sw   $t0, 10324($gp)
	sw   $t0, 10328($gp)
	sw   $t0, 10332($gp)
	sw   $t0, 10336($gp)
	sw   $t0, 10340($gp)
	sw   $t0, 10344($gp)
	sw   $t0, 10348($gp)
	sw   $t0, 10352($gp)
	sw   $t0, 10356($gp)
	sw   $t0, 10380($gp)
	sw   $t0, 10384($gp)
	sw   $t0, 10388($gp)
	sw   $t0, 10392($gp)
	sw   $t0, 10396($gp)
	sw   $t0, 10400($gp)
	sw   $t0, 10404($gp)
	sw   $t0, 10412($gp)
	sw   $t0, 10416($gp)
	sw   $t0, 10420($gp)
	sw   $t0, 10424($gp)
	sw   $t0, 10432($gp)
	sw   $t0, 10436($gp)
	sw   $t0, 10440($gp)
	sw   $t0, 10444($gp)
	sw   $t0, 10448($gp)
	sw   $t0, 10452($gp)
	sw   $t0, 10472($gp)
	sw   $t0, 10476($gp)
	sw   $t0, 10480($gp)
	sw   $t0, 10488($gp)
	sw   $t0, 10492($gp)
	sw   $t0, 10496($gp)
	sw   $t0, 10500($gp)
	sw   $t0, 10504($gp)
	sw   $t0, 10512($gp)
	sw   $t0, 10516($gp)
	sw   $t0, 10520($gp)
	sw   $t0, 10524($gp)
	sw   $t0, 10528($gp)
	sw   $t0, 10532($gp)
	sw   $t0, 10536($gp)
	sw   $t0, 10540($gp)
	sw   $t0, 10544($gp)
	sw   $t0, 10548($gp)
	sw   $t0, 10552($gp)
	sw   $t0, 10556($gp)
	sw   $t0, 10560($gp)
	sw   $t0, 10564($gp)
	sw   $t0, 10568($gp)
	sw   $t0, 10572($gp)
	sw   $t0, 10576($gp)
	sw   $t0, 10580($gp)
	sw   $t0, 10584($gp)
	sw   $t0, 10588($gp)
	sw   $t0, 10592($gp)
	sw   $t0, 10596($gp)
	sw   $t0, 10600($gp)
	sw   $t0, 10604($gp)
	sw   $t0, 10608($gp)
	sw   $t0, 10612($gp)
	sw   $t0, 10616($gp)
	sw   $t0, 10636($gp)
	sw   $t0, 10640($gp)
	sw   $t0, 10644($gp)
	sw   $t0, 10648($gp)
	sw   $t0, 10652($gp)
	sw   $t0, 10656($gp)
	sw   $t0, 10660($gp)
	sw   $t0, 10664($gp)
	sw   $t0, 10684($gp)
	sw   $t0, 10688($gp)
	sw   $t0, 10692($gp)
	sw   $t0, 10696($gp)
	sw   $t0, 10700($gp)
	sw   $t0, 10704($gp)
	sw   $t0, 10708($gp)
	sw   $t0, 10716($gp)
	sw   $t0, 10720($gp)
	sw   $t0, 10724($gp)
	sw   $t0, 10732($gp)
	sw   $t0, 10736($gp)
	sw   $t0, 10740($gp)
	sw   $t0, 10752($gp)
	sw   $t0, 10756($gp)
	sw   $t0, 10768($gp)
	sw   $t0, 10772($gp)
	sw   $t0, 10776($gp)
	sw   $t0, 10780($gp)
	sw   $t0, 10784($gp)
	sw   $t0, 10788($gp)
	sw   $t0, 10792($gp)
	sw   $t0, 10796($gp)
	sw   $t0, 10800($gp)
	sw   $t0, 10804($gp)
	sw   $t0, 10808($gp)
	sw   $t0, 10812($gp)
	sw   $t0, 10816($gp)
	sw   $t0, 10820($gp)
	sw   $t0, 10824($gp)
	sw   $t0, 10828($gp)
	sw   $t0, 10832($gp)
	sw   $t0, 10844($gp)
	sw   $t0, 10848($gp)
	sw   $t0, 10852($gp)
	sw   $t0, 10872($gp)
	sw   $t0, 10888($gp)
	sw   $t0, 10892($gp)
	sw   $t0, 10896($gp)
	sw   $t0, 10912($gp)
	sw   $t0, 10924($gp)
	sw   $t0, 10928($gp)
	sw   $t0, 10932($gp)
	sw   $t0, 10936($gp)
	sw   $t0, 10940($gp)
	sw   $t0, 10944($gp)
	sw   $t0, 10948($gp)
	sw   $t0, 10952($gp)
	sw   $t0, 10956($gp)
	sw   $t0, 10960($gp)
	sw   $t0, 10968($gp)
	sw   $t0, 10972($gp)
	sw   $t0, 10976($gp)
	sw   $t0, 10980($gp)
	sw   $t0, 10988($gp)
	sw   $t0, 10992($gp)
	sw   $t0, 10996($gp)
	sw   $t0, 11000($gp)
	sw   $t0, 11004($gp)
	sw   $t0, 11016($gp)
	sw   $t0, 11020($gp)
	sw   $t0, 11024($gp)
	sw   $t0, 11028($gp)
	sw   $t0, 11032($gp)
	sw   $t0, 11036($gp)
	sw   $t0, 11040($gp)
	sw   $t0, 11044($gp)
	sw   $t0, 11048($gp)
	sw   $t0, 11052($gp)
	sw   $t0, 11056($gp)
	sw   $t0, 11060($gp)
	sw   $t0, 11064($gp)
	sw   $t0, 11068($gp)
	sw   $t0, 11072($gp)
	sw   $t0, 11076($gp)
	sw   $t0, 11080($gp)
	sw   $t0, 11104($gp)
	sw   $t0, 11148($gp)
	sw   $t0, 11184($gp)
	sw   $t0, 11188($gp)
	sw   $t0, 11192($gp)
	sw   $t0, 11196($gp)
	sw   $t0, 11200($gp)
	sw   $t0, 11204($gp)
	sw   $t0, 11208($gp)
	sw   $t0, 11212($gp)
	sw   $t0, 11216($gp)
	sw   $t0, 11220($gp)
	sw   $t0, 11224($gp)
	sw   $t0, 11228($gp)
	sw   $t0, 11232($gp)
	sw   $t0, 11236($gp)
	sw   $t0, 11260($gp)
	sw   $t0, 11264($gp)
	sw   $t0, 11268($gp)
	sw   $t0, 11272($gp)
	sw   $t0, 11276($gp)
	sw   $t0, 11280($gp)
	sw   $t0, 11284($gp)
	sw   $t0, 11288($gp)
	sw   $t0, 11292($gp)
	sw   $t0, 11296($gp)
	sw   $t0, 11300($gp)
	sw   $t0, 11304($gp)
	sw   $t0, 11308($gp)
	sw   $t0, 11312($gp)
	sw   $t0, 11316($gp)
	sw   $t0, 11320($gp)
	sw   $t0, 11324($gp)
	sw   $t0, 11328($gp)
	sw   $t0, 11332($gp)
	sw   $t0, 11336($gp)
	sw   $t0, 11360($gp)
	sw   $t0, 11440($gp)
	sw   $t0, 11444($gp)
	sw   $t0, 11448($gp)
	sw   $t0, 11452($gp)
	sw   $t0, 11456($gp)
	sw   $t0, 11460($gp)
	sw   $t0, 11464($gp)
	sw   $t0, 11468($gp)
	sw   $t0, 11472($gp)
	sw   $t0, 11476($gp)
	sw   $t0, 11480($gp)
	sw   $t0, 11484($gp)
	sw   $t0, 11488($gp)
	sw   $t0, 11492($gp)
	sw   $t0, 11496($gp)
	sw   $t0, 11504($gp)
	sw   $t0, 11508($gp)
	sw   $t0, 11512($gp)
	sw   $t0, 11520($gp)
	sw   $t0, 11524($gp)
	sw   $t0, 11528($gp)
	sw   $t0, 11532($gp)
	sw   $t0, 11536($gp)
	sw   $t0, 11540($gp)
	sw   $t0, 11544($gp)
	sw   $t0, 11548($gp)
	sw   $t0, 11552($gp)
	sw   $t0, 11556($gp)
	sw   $t0, 11560($gp)
	sw   $t0, 11564($gp)
	sw   $t0, 11568($gp)
	sw   $t0, 11572($gp)
	sw   $t0, 11576($gp)
	sw   $t0, 11580($gp)
	sw   $t0, 11584($gp)
	sw   $t0, 11588($gp)
	sw   $t0, 11592($gp)
	sw   $t0, 11692($gp)
	sw   $t0, 11696($gp)
	sw   $t0, 11700($gp)
	sw   $t0, 11704($gp)
	sw   $t0, 11708($gp)
	sw   $t0, 11712($gp)
	sw   $t0, 11716($gp)
	sw   $t0, 11724($gp)
	sw   $t0, 11728($gp)
	sw   $t0, 11732($gp)
	sw   $t0, 11740($gp)
	sw   $t0, 11744($gp)
	sw   $t0, 11748($gp)
	sw   $t0, 11756($gp)
	sw   $t0, 11760($gp)
	sw   $t0, 11764($gp)
	sw   $t0, 11768($gp)
	sw   $t0, 11776($gp)
	sw   $t0, 11780($gp)
	sw   $t0, 11784($gp)
	sw   $t0, 11788($gp)
	sw   $t0, 11792($gp)
	sw   $t0, 11796($gp)
	sw   $t0, 11800($gp)
	sw   $t0, 11804($gp)
	sw   $t0, 11808($gp)
	sw   $t0, 11816($gp)
	sw   $t0, 11820($gp)
	sw   $t0, 11824($gp)
	sw   $t0, 11828($gp)
	sw   $t0, 11836($gp)
	sw   $t0, 11840($gp)
	sw   $t0, 11844($gp)
	sw   $t0, 11848($gp)
	sw   $t0, 11852($gp)
	sw   $t0, 11856($gp)
	sw   $t0, 11860($gp)
	sw   $t0, 11940($gp)
	sw   $t0, 11944($gp)
	sw   $t0, 11948($gp)
	sw   $t0, 11952($gp)
	sw   $t0, 11956($gp)
	sw   $t0, 11960($gp)
	sw   $t0, 11964($gp)
	sw   $t0, 11968($gp)
	sw   $t0, 11972($gp)
	sw   $t0, 11976($gp)
	sw   $t0, 11992($gp)
	sw   $t0, 11996($gp)
	sw   $t0, 12000($gp)
	sw   $t0, 12004($gp)
	sw   $t0, 12008($gp)
	sw   $t0, 12012($gp)
	sw   $t0, 12016($gp)
	sw   $t0, 12020($gp)
	sw   $t0, 12024($gp)
	sw   $t0, 12032($gp)
	sw   $t0, 12036($gp)
	sw   $t0, 12040($gp)
	sw   $t0, 12044($gp)
	sw   $t0, 12048($gp)
	sw   $t0, 12052($gp)
	sw   $t0, 12056($gp)
	sw   $t0, 12060($gp)
	sw   $t0, 12064($gp)
	sw   $t0, 12068($gp)
	sw   $t0, 12088($gp)
	sw   $t0, 12092($gp)
	sw   $t0, 12096($gp)
	sw   $t0, 12100($gp)
	sw   $t0, 12104($gp)
	sw   $t0, 12108($gp)
	sw   $t0, 12112($gp)
	sw   $t0, 12116($gp)
	sw   $t0, 12120($gp)
	sw   $t0, 12124($gp)
	sw   $t0, 12188($gp)
	sw   $t0, 12192($gp)
	sw   $t0, 12196($gp)
	sw   $t0, 12200($gp)
	sw   $t0, 12216($gp)
	sw   $t0, 12220($gp)
	sw   $t0, 12236($gp)
	sw   $t0, 12240($gp)
	sw   $t0, 12244($gp)
	sw   $t0, 12248($gp)
	sw   $t0, 12264($gp)
	sw   $t0, 12268($gp)
	sw   $t0, 12276($gp)
	sw   $t0, 12280($gp)
	sw   $t0, 12284($gp)
	sw   $t0, 12288($gp)
	sw   $t0, 12292($gp)
	sw   $t0, 12296($gp)
	sw   $t0, 12308($gp)
	sw   $t0, 12312($gp)
	sw   $t0, 12328($gp)
	sw   $t0, 12332($gp)
	sw   $t0, 12336($gp)
	sw   $t0, 12340($gp)
	sw   $t0, 12344($gp)
	sw   $t0, 12356($gp)
	sw   $t0, 12360($gp)
	sw   $t0, 12364($gp)
	sw   $t0, 12368($gp)
	sw   $t0, 12372($gp)
	sw   $t0, 12376($gp)
	sw   $t0, 12380($gp)
	sw   $t0, 12384($gp)
	sw   $t0, 12476($gp)
	sw   $t0, 12496($gp)
	sw   $t0, 12500($gp)
	sw   $t0, 12532($gp)
	sw   $t0, 12536($gp)
	sw   $t0, 12540($gp)
	sw   $t0, 12544($gp)
	sw   $t0, 12548($gp)
	sw   $t0, 12552($gp)
	sw   $t0, 12556($gp)
	sw   $t0, 12592($gp)
	sw   $t0, 12596($gp)
	sw   $t0, 12620($gp)
	sw   $t0, 12624($gp)
	sw   $t0, 12752($gp)
	sw   $t0, 12780($gp)
	sw   $t0, 12784($gp)
	sw   $t0, 12788($gp)
	sw   $t0, 12792($gp)
	sw   $t0, 12796($gp)
	sw   $t0, 12804($gp)
	sw   $t0, 12808($gp)
	sw   $t0, 12812($gp)
	sw   $t0, 12816($gp)
	sw   $t0, 12848($gp)
	sw   $t0, 12876($gp)
	sw   $t0, 13028($gp)
	sw   $t0, 13032($gp)
	sw   $t0, 13036($gp)
	sw   $t0, 13040($gp)
	sw   $t0, 13044($gp)
	sw   $t0, 13048($gp)
	sw   $t0, 13060($gp)
	sw   $t0, 13064($gp)
	sw   $t0, 13068($gp)
	sw   $t0, 13072($gp)
	sw   $t0, 13076($gp)
	sw   $t0, 13080($gp)
	sw   $t0, 13084($gp)
	sw   $t0, 13280($gp)
	sw   $t0, 13284($gp)
	sw   $t0, 13288($gp)
	sw   $t0, 13292($gp)
	sw   $t0, 13296($gp)
	sw   $t0, 13300($gp)
	sw   $t0, 13304($gp)
	sw   $t0, 13320($gp)
	sw   $t0, 13324($gp)
	sw   $t0, 13328($gp)
	sw   $t0, 13332($gp)
	sw   $t0, 13336($gp)
	sw   $t0, 13340($gp)
	sw   $t0, 13344($gp)
	sw   $t0, 13520($gp)
	sw   $t0, 13524($gp)
	sw   $t0, 13528($gp)
	sw   $t0, 13532($gp)
	sw   $t0, 13536($gp)
	sw   $t0, 13540($gp)
	sw   $t0, 13592($gp)
	sw   $t0, 13596($gp)
	sw   $t0, 13600($gp)
	sw   $t0, 13604($gp)
	sw   $t0, 13608($gp)
	sw   $t0, 13612($gp)
	sw   $t0, 13640($gp)
	sw   $t0, 13644($gp)
	sw   $t0, 13648($gp)
	sw   $t0, 13728($gp)
	sw   $t0, 13732($gp)
	sw   $t0, 13736($gp)
	sw   $t0, 13740($gp)
	sw   $t0, 13744($gp)
	sw   $t0, 13748($gp)
	sw   $t0, 13752($gp)
	sw   $t0, 13756($gp)
	sw   $t0, 13760($gp)
	sw   $t0, 13764($gp)
	sw   $t0, 13768($gp)
	sw   $t0, 13772($gp)
	sw   $t0, 13776($gp)
	sw   $t0, 13780($gp)
	sw   $t0, 13784($gp)
	sw   $t0, 13788($gp)
	sw   $t0, 13792($gp)
	sw   $t0, 13796($gp)
	sw   $t0, 13800($gp)
	sw   $t0, 13804($gp)
	sw   $t0, 13808($gp)
	sw   $t0, 13836($gp)
	sw   $t0, 13840($gp)
	sw   $t0, 13844($gp)
	sw   $t0, 13852($gp)
	sw   $t0, 13856($gp)
	sw   $t0, 13860($gp)
	sw   $t0, 13864($gp)
	sw   $t0, 13868($gp)
	sw   $t0, 13872($gp)
	sw   $t0, 13876($gp)
	sw   $t0, 13880($gp)
	sw   $t0, 13884($gp)
	sw   $t0, 13888($gp)
	sw   $t0, 13892($gp)
	sw   $t0, 13896($gp)
	sw   $t0, 13900($gp)
	sw   $t0, 13904($gp)
	sw   $t0, 13908($gp)
	sw   $t0, 13912($gp)
	sw   $t0, 13916($gp)
	sw   $t0, 13992($gp)
	sw   $t0, 13996($gp)
	sw   $t0, 14012($gp)
	sw   $t0, 14016($gp)
	sw   $t0, 14020($gp)
	sw   $t0, 14024($gp)
	sw   $t0, 14028($gp)
	sw   $t0, 14032($gp)
	sw   $t0, 14036($gp)
	sw   $t0, 14040($gp)
	sw   $t0, 14044($gp)
	sw   $t0, 14048($gp)
	sw   $t0, 14052($gp)
	sw   $t0, 14056($gp)
	sw   $t0, 14060($gp)
	sw   $t0, 14064($gp)
	sw   $t0, 14068($gp)
	sw   $t0, 14084($gp)
	sw   $t0, 14088($gp)
	sw   $t0, 14092($gp)
	sw   $t0, 14096($gp)
	sw   $t0, 14100($gp)
	sw   $t0, 14104($gp)
	sw   $t0, 14108($gp)
	sw   $t0, 14112($gp)
	sw   $t0, 14116($gp)
	sw   $t0, 14120($gp)
	sw   $t0, 14124($gp)
	sw   $t0, 14128($gp)
	sw   $t0, 14132($gp)
	sw   $t0, 14136($gp)
	sw   $t0, 14140($gp)
	sw   $t0, 14144($gp)
	sw   $t0, 14152($gp)
	sw   $t0, 14156($gp)
	sw   $t0, 14160($gp)
	sw   $t0, 14164($gp)
	sw   $t0, 14168($gp)
	sw   $t0, 14248($gp)
	sw   $t0, 14272($gp)
	sw   $t0, 14276($gp)
	sw   $t0, 14280($gp)
	sw   $t0, 14292($gp)
	sw   $t0, 14296($gp)
	sw   $t0, 14300($gp)
	sw   $t0, 14304($gp)
	sw   $t0, 14308($gp)
	sw   $t0, 14312($gp)
	sw   $t0, 14316($gp)
	sw   $t0, 14320($gp)
	sw   $t0, 14324($gp)
	sw   $t0, 14336($gp)
	sw   $t0, 14340($gp)
	sw   $t0, 14344($gp)
	sw   $t0, 14348($gp)
	sw   $t0, 14352($gp)
	sw   $t0, 14356($gp)
	sw   $t0, 14360($gp)
	sw   $t0, 14364($gp)
	sw   $t0, 14368($gp)
	sw   $t0, 14372($gp)
	sw   $t0, 14376($gp)
	sw   $t0, 14380($gp)
	sw   $t0, 14384($gp)
	sw   $t0, 14388($gp)
	sw   $t0, 14392($gp)
	sw   $t0, 14412($gp)
	sw   $t0, 14532($gp)
	sw   $t0, 14552($gp)
	sw   $t0, 14556($gp)
	sw   $t0, 14560($gp)
	sw   $t0, 14564($gp)
	sw   $t0, 14568($gp)
	sw   $t0, 14572($gp)
	sw   $t0, 14576($gp)
	sw   $t0, 14580($gp)
	sw   $t0, 14584($gp)
	sw   $t0, 14592($gp)
	sw   $t0, 14600($gp)
	sw   $t0, 14604($gp)
	sw   $t0, 14608($gp)
	sw   $t0, 14616($gp)
	sw   $t0, 14620($gp)
	sw   $t0, 14624($gp)
	sw   $t0, 14628($gp)
	sw   $t0, 14632($gp)
	sw   $t0, 14636($gp)
	sw   $t0, 14640($gp)
	sw   $t0, 14644($gp)
	sw   $t0, 14812($gp)
	sw   $t0, 14816($gp)
	sw   $t0, 14820($gp)
	sw   $t0, 14824($gp)
	sw   $t0, 14828($gp)
	sw   $t0, 14832($gp)
	sw   $t0, 14836($gp)
	sw   $t0, 14840($gp)
	sw   $t0, 14844($gp)
	sw   $t0, 14848($gp)
	sw   $t0, 14852($gp)
	sw   $t0, 14868($gp)
	sw   $t0, 14872($gp)
	sw   $t0, 14876($gp)
	sw   $t0, 14896($gp)
	sw   $t0, 14900($gp)
	sw   $t0, 15088($gp)
	sw   $t0, 15092($gp)
	sw   $t0, 15096($gp)
	sw   $t0, 15100($gp)
	sw   $t0, 15104($gp)
	sw   $t0, 15108($gp)
	sw   $t0, 15112($gp)
	sw   $t0, 15116($gp)
	sw   $t0, 15120($gp)
	sw   $t0, 15124($gp)
	sw   $t0, 15128($gp)
	sw   $t0, 15156($gp)
	sw   $t0, 15348($gp)
	sw   $t0, 15352($gp)
	sw   $t0, 15356($gp)
	sw   $t0, 15360($gp)
	sw   $t0, 15364($gp)
	sw   $t0, 15368($gp)
	sw   $t0, 15372($gp)
	sw   $t0, 15376($gp)
	sw   $t0, 15380($gp)
	sw   $t0, 15604($gp)
	sw   $t0, 15608($gp)
	sw   $t0, 15612($gp)
	sw   $t0, 15860($gp)
	sw   $t0, 15864($gp)
	sw   $t0, 15868($gp)
	sw   $t0, 16112($gp)
	sw   $t0, 16116($gp)
	sw   $t0, 16120($gp)
	sw   $t0, 16124($gp)
	sw   $t0, 16368($gp)
	sw   $t0, 16372($gp)
	sw   $t0, 16376($gp)
	sw   $t0, 16380($gp)

	# Dark Blue
	li   $t0, 0x00090921
	sw   $t0, 0($gp)
	sw   $t0, 4($gp)
	sw   $t0, 8($gp)
	sw   $t0, 12($gp)
	sw   $t0, 16($gp)
	sw   $t0, 20($gp)
	sw   $t0, 24($gp)
	sw   $t0, 28($gp)
	sw   $t0, 32($gp)
	sw   $t0, 36($gp)
	sw   $t0, 40($gp)
	sw   $t0, 44($gp)
	sw   $t0, 48($gp)
	sw   $t0, 52($gp)
	sw   $t0, 56($gp)
	sw   $t0, 60($gp)
	sw   $t0, 64($gp)
	sw   $t0, 68($gp)
	sw   $t0, 72($gp)
	sw   $t0, 76($gp)
	sw   $t0, 80($gp)
	sw   $t0, 84($gp)
	sw   $t0, 88($gp)
	sw   $t0, 92($gp)
	sw   $t0, 96($gp)
	sw   $t0, 100($gp)
	sw   $t0, 104($gp)
	sw   $t0, 108($gp)
	sw   $t0, 112($gp)
	sw   $t0, 116($gp)
	sw   $t0, 120($gp)
	sw   $t0, 124($gp)
	sw   $t0, 128($gp)
	sw   $t0, 132($gp)
	sw   $t0, 136($gp)
	sw   $t0, 140($gp)
	sw   $t0, 144($gp)
	sw   $t0, 148($gp)
	sw   $t0, 152($gp)
	sw   $t0, 156($gp)
	sw   $t0, 160($gp)
	sw   $t0, 164($gp)
	sw   $t0, 168($gp)
	sw   $t0, 172($gp)
	sw   $t0, 176($gp)
	sw   $t0, 180($gp)
	sw   $t0, 184($gp)
	sw   $t0, 188($gp)
	sw   $t0, 192($gp)
	sw   $t0, 196($gp)
	sw   $t0, 200($gp)
	sw   $t0, 204($gp)
	sw   $t0, 208($gp)
	sw   $t0, 212($gp)
	sw   $t0, 216($gp)
	sw   $t0, 220($gp)
	sw   $t0, 224($gp)
	sw   $t0, 228($gp)
	sw   $t0, 232($gp)
	sw   $t0, 236($gp)
	sw   $t0, 240($gp)
	sw   $t0, 244($gp)
	sw   $t0, 248($gp)
	sw   $t0, 252($gp)
	sw   $t0, 256($gp)
	sw   $t0, 260($gp)
	sw   $t0, 268($gp)
	sw   $t0, 272($gp)
	sw   $t0, 276($gp)
	sw   $t0, 280($gp)
	sw   $t0, 284($gp)
	sw   $t0, 292($gp)
	sw   $t0, 296($gp)
	sw   $t0, 300($gp)
	sw   $t0, 304($gp)
	sw   $t0, 308($gp)
	sw   $t0, 312($gp)
	sw   $t0, 316($gp)
	sw   $t0, 320($gp)
	sw   $t0, 324($gp)
	sw   $t0, 328($gp)
	sw   $t0, 332($gp)
	sw   $t0, 336($gp)
	sw   $t0, 340($gp)
	sw   $t0, 344($gp)
	sw   $t0, 348($gp)
	sw   $t0, 352($gp)
	sw   $t0, 356($gp)
	sw   $t0, 360($gp)
	sw   $t0, 364($gp)
	sw   $t0, 368($gp)
	sw   $t0, 372($gp)
	sw   $t0, 376($gp)
	sw   $t0, 380($gp)
	sw   $t0, 384($gp)
	sw   $t0, 388($gp)
	sw   $t0, 392($gp)
	sw   $t0, 396($gp)
	sw   $t0, 400($gp)
	sw   $t0, 404($gp)
	sw   $t0, 408($gp)
	sw   $t0, 412($gp)
	sw   $t0, 416($gp)
	sw   $t0, 420($gp)
	sw   $t0, 424($gp)
	sw   $t0, 428($gp)
	sw   $t0, 432($gp)
	sw   $t0, 436($gp)
	sw   $t0, 440($gp)
	sw   $t0, 444($gp)
	sw   $t0, 448($gp)
	sw   $t0, 452($gp)
	sw   $t0, 456($gp)
	sw   $t0, 460($gp)
	sw   $t0, 464($gp)
	sw   $t0, 468($gp)
	sw   $t0, 472($gp)
	sw   $t0, 476($gp)
	sw   $t0, 484($gp)
	sw   $t0, 488($gp)
	sw   $t0, 492($gp)
	sw   $t0, 496($gp)
	sw   $t0, 500($gp)
	sw   $t0, 504($gp)
	sw   $t0, 508($gp)
	sw   $t0, 512($gp)
	sw   $t0, 516($gp)
	sw   $t0, 520($gp)
	sw   $t0, 524($gp)
	sw   $t0, 528($gp)
	sw   $t0, 532($gp)
	sw   $t0, 536($gp)
	sw   $t0, 540($gp)
	sw   $t0, 544($gp)
	sw   $t0, 548($gp)
	sw   $t0, 552($gp)
	sw   $t0, 556($gp)
	sw   $t0, 560($gp)
	sw   $t0, 564($gp)
	sw   $t0, 568($gp)
	sw   $t0, 572($gp)
	sw   $t0, 576($gp)
	sw   $t0, 580($gp)
	sw   $t0, 584($gp)
	sw   $t0, 588($gp)
	sw   $t0, 592($gp)
	sw   $t0, 596($gp)
	sw   $t0, 600($gp)
	sw   $t0, 604($gp)
	sw   $t0, 608($gp)
	sw   $t0, 612($gp)
	sw   $t0, 616($gp)
	sw   $t0, 620($gp)
	sw   $t0, 624($gp)
	sw   $t0, 628($gp)
	sw   $t0, 632($gp)
	sw   $t0, 636($gp)
	sw   $t0, 640($gp)
	sw   $t0, 644($gp)
	sw   $t0, 648($gp)
	sw   $t0, 652($gp)
	sw   $t0, 656($gp)
	sw   $t0, 660($gp)
	sw   $t0, 664($gp)
	sw   $t0, 668($gp)
	sw   $t0, 672($gp)
	sw   $t0, 676($gp)
	sw   $t0, 680($gp)
	sw   $t0, 684($gp)
	sw   $t0, 688($gp)
	sw   $t0, 692($gp)
	sw   $t0, 696($gp)
	sw   $t0, 700($gp)
	sw   $t0, 704($gp)
	sw   $t0, 708($gp)
	sw   $t0, 712($gp)
	sw   $t0, 716($gp)
	sw   $t0, 720($gp)
	sw   $t0, 724($gp)
	sw   $t0, 728($gp)
	sw   $t0, 732($gp)
	sw   $t0, 736($gp)
	sw   $t0, 740($gp)
	sw   $t0, 744($gp)
	sw   $t0, 748($gp)
	sw   $t0, 752($gp)
	sw   $t0, 756($gp)
	sw   $t0, 760($gp)
	sw   $t0, 764($gp)
	sw   $t0, 768($gp)
	sw   $t0, 772($gp)
	sw   $t0, 776($gp)
	sw   $t0, 780($gp)
	sw   $t0, 784($gp)
	sw   $t0, 788($gp)
	sw   $t0, 792($gp)
	sw   $t0, 796($gp)
	sw   $t0, 800($gp)
	sw   $t0, 804($gp)
	sw   $t0, 808($gp)
	sw   $t0, 812($gp)
	sw   $t0, 816($gp)
	sw   $t0, 820($gp)
	sw   $t0, 824($gp)
	sw   $t0, 828($gp)
	sw   $t0, 832($gp)
	sw   $t0, 836($gp)
	sw   $t0, 840($gp)
	sw   $t0, 844($gp)
	sw   $t0, 848($gp)
	sw   $t0, 852($gp)
	sw   $t0, 856($gp)
	sw   $t0, 860($gp)
	sw   $t0, 864($gp)
	sw   $t0, 868($gp)
	sw   $t0, 872($gp)
	sw   $t0, 880($gp)
	sw   $t0, 884($gp)
	sw   $t0, 888($gp)
	sw   $t0, 892($gp)
	sw   $t0, 896($gp)
	sw   $t0, 900($gp)
	sw   $t0, 904($gp)
	sw   $t0, 908($gp)
	sw   $t0, 912($gp)
	sw   $t0, 916($gp)
	sw   $t0, 920($gp)
	sw   $t0, 924($gp)
	sw   $t0, 928($gp)
	sw   $t0, 932($gp)
	sw   $t0, 936($gp)
	sw   $t0, 944($gp)
	sw   $t0, 948($gp)
	sw   $t0, 952($gp)
	sw   $t0, 956($gp)
	sw   $t0, 960($gp)
	sw   $t0, 968($gp)
	sw   $t0, 972($gp)
	sw   $t0, 976($gp)
	sw   $t0, 980($gp)
	sw   $t0, 984($gp)
	sw   $t0, 988($gp)
	sw   $t0, 992($gp)
	sw   $t0, 996($gp)
	sw   $t0, 1000($gp)
	sw   $t0, 1004($gp)
	sw   $t0, 1008($gp)
	sw   $t0, 1012($gp)
	sw   $t0, 1016($gp)
	sw   $t0, 1020($gp)
	sw   $t0, 1024($gp)
	sw   $t0, 1028($gp)
	sw   $t0, 1032($gp)
	sw   $t0, 1036($gp)
	sw   $t0, 1040($gp)
	sw   $t0, 1044($gp)
	sw   $t0, 1048($gp)
	sw   $t0, 1052($gp)
	sw   $t0, 1056($gp)
	sw   $t0, 1060($gp)
	sw   $t0, 1064($gp)
	sw   $t0, 1068($gp)
	sw   $t0, 1072($gp)
	sw   $t0, 1076($gp)
	sw   $t0, 1080($gp)
	sw   $t0, 1084($gp)
	sw   $t0, 1088($gp)
	sw   $t0, 1092($gp)
	sw   $t0, 1096($gp)
	sw   $t0, 1100($gp)
	sw   $t0, 1104($gp)
	sw   $t0, 1112($gp)
	sw   $t0, 1116($gp)
	sw   $t0, 1120($gp)
	sw   $t0, 1124($gp)
	sw   $t0, 1128($gp)
	sw   $t0, 1132($gp)
	sw   $t0, 1136($gp)
	sw   $t0, 1140($gp)
	sw   $t0, 1144($gp)
	sw   $t0, 1148($gp)
	sw   $t0, 1152($gp)
	sw   $t0, 1156($gp)
	sw   $t0, 1160($gp)
	sw   $t0, 1164($gp)
	sw   $t0, 1168($gp)
	sw   $t0, 1172($gp)
	sw   $t0, 1176($gp)
	sw   $t0, 1180($gp)
	sw   $t0, 1184($gp)
	sw   $t0, 1188($gp)
	sw   $t0, 1192($gp)
	sw   $t0, 1196($gp)
	sw   $t0, 1200($gp)
	sw   $t0, 1204($gp)
	sw   $t0, 1208($gp)
	sw   $t0, 1212($gp)
	sw   $t0, 1216($gp)
	sw   $t0, 1220($gp)
	sw   $t0, 1224($gp)
	sw   $t0, 1228($gp)
	sw   $t0, 1232($gp)
	sw   $t0, 1236($gp)
	sw   $t0, 1240($gp)
	sw   $t0, 1244($gp)
	sw   $t0, 1248($gp)
	sw   $t0, 1252($gp)
	sw   $t0, 1256($gp)
	sw   $t0, 1260($gp)
	sw   $t0, 1264($gp)
	sw   $t0, 1268($gp)
	sw   $t0, 1272($gp)
	sw   $t0, 1276($gp)
	sw   $t0, 1280($gp)
	sw   $t0, 1284($gp)
	sw   $t0, 1288($gp)
	sw   $t0, 1292($gp)
	sw   $t0, 1296($gp)
	sw   $t0, 1300($gp)
	sw   $t0, 1304($gp)
	sw   $t0, 1308($gp)
	sw   $t0, 1312($gp)
	sw   $t0, 1316($gp)
	sw   $t0, 1320($gp)
	sw   $t0, 1324($gp)
	sw   $t0, 1328($gp)
	sw   $t0, 1332($gp)
	sw   $t0, 1336($gp)
	sw   $t0, 1340($gp)
	sw   $t0, 1344($gp)
	sw   $t0, 1348($gp)
	sw   $t0, 1352($gp)
	sw   $t0, 1356($gp)
	sw   $t0, 1360($gp)
	sw   $t0, 1364($gp)
	sw   $t0, 1368($gp)
	sw   $t0, 1376($gp)
	sw   $t0, 1380($gp)
	sw   $t0, 1384($gp)
	sw   $t0, 1388($gp)
	sw   $t0, 1392($gp)
	sw   $t0, 1396($gp)
	sw   $t0, 1400($gp)
	sw   $t0, 1404($gp)
	sw   $t0, 1408($gp)
	sw   $t0, 1412($gp)
	sw   $t0, 1416($gp)
	sw   $t0, 1420($gp)
	sw   $t0, 1424($gp)
	sw   $t0, 1428($gp)
	sw   $t0, 1432($gp)
	sw   $t0, 1436($gp)
	sw   $t0, 1440($gp)
	sw   $t0, 1444($gp)
	sw   $t0, 1448($gp)
	sw   $t0, 1452($gp)
	sw   $t0, 1456($gp)
	sw   $t0, 1460($gp)
	sw   $t0, 1464($gp)
	sw   $t0, 1468($gp)
	sw   $t0, 1472($gp)
	sw   $t0, 1476($gp)
	sw   $t0, 1480($gp)
	sw   $t0, 1484($gp)
	sw   $t0, 1488($gp)
	sw   $t0, 1492($gp)
	sw   $t0, 1496($gp)
	sw   $t0, 1500($gp)
	sw   $t0, 1504($gp)
	sw   $t0, 1508($gp)
	sw   $t0, 1512($gp)
	sw   $t0, 1516($gp)
	sw   $t0, 1524($gp)
	sw   $t0, 1528($gp)
	sw   $t0, 1532($gp)
	sw   $t0, 1536($gp)
	sw   $t0, 1540($gp)
	sw   $t0, 1544($gp)
	sw   $t0, 1548($gp)
	sw   $t0, 1552($gp)
	sw   $t0, 1556($gp)
	sw   $t0, 1560($gp)
	sw   $t0, 1564($gp)
	sw   $t0, 1568($gp)
	sw   $t0, 1572($gp)
	sw   $t0, 1576($gp)
	sw   $t0, 1580($gp)
	sw   $t0, 1584($gp)
	sw   $t0, 1588($gp)
	sw   $t0, 1592($gp)
	sw   $t0, 1596($gp)
	sw   $t0, 1600($gp)
	sw   $t0, 1604($gp)
	sw   $t0, 1608($gp)
	sw   $t0, 1612($gp)
	sw   $t0, 1620($gp)
	sw   $t0, 1624($gp)
	sw   $t0, 1628($gp)
	sw   $t0, 1632($gp)
	sw   $t0, 1636($gp)
	sw   $t0, 1640($gp)
	sw   $t0, 1644($gp)
	sw   $t0, 1648($gp)
	sw   $t0, 1652($gp)
	sw   $t0, 1656($gp)
	sw   $t0, 1660($gp)
	sw   $t0, 1664($gp)
	sw   $t0, 1668($gp)
	sw   $t0, 1676($gp)
	sw   $t0, 1680($gp)
	sw   $t0, 1684($gp)
	sw   $t0, 1688($gp)
	sw   $t0, 1692($gp)
	sw   $t0, 1696($gp)
	sw   $t0, 1700($gp)
	sw   $t0, 1704($gp)
	sw   $t0, 1708($gp)
	sw   $t0, 1712($gp)
	sw   $t0, 1716($gp)
	sw   $t0, 1720($gp)
	sw   $t0, 1724($gp)
	sw   $t0, 1728($gp)
	sw   $t0, 1732($gp)
	sw   $t0, 1736($gp)
	sw   $t0, 1740($gp)
	sw   $t0, 1744($gp)
	sw   $t0, 1748($gp)
	sw   $t0, 1752($gp)
	sw   $t0, 1756($gp)
	sw   $t0, 1760($gp)
	sw   $t0, 1764($gp)
	sw   $t0, 1768($gp)
	sw   $t0, 1772($gp)
	sw   $t0, 1776($gp)
	sw   $t0, 1780($gp)
	sw   $t0, 1784($gp)
	sw   $t0, 1788($gp)
	sw   $t0, 1792($gp)
	sw   $t0, 1796($gp)
	sw   $t0, 1800($gp)
	sw   $t0, 1804($gp)
	sw   $t0, 1808($gp)
	sw   $t0, 1812($gp)
	sw   $t0, 1816($gp)
	sw   $t0, 1820($gp)
	sw   $t0, 1824($gp)
	sw   $t0, 1832($gp)
	sw   $t0, 1836($gp)
	sw   $t0, 1840($gp)
	sw   $t0, 1844($gp)
	sw   $t0, 1848($gp)
	sw   $t0, 1852($gp)
	sw   $t0, 1856($gp)
	sw   $t0, 1860($gp)
	sw   $t0, 1864($gp)
	sw   $t0, 1868($gp)
	sw   $t0, 1872($gp)
	sw   $t0, 1876($gp)
	sw   $t0, 1880($gp)
	sw   $t0, 1884($gp)
	sw   $t0, 1888($gp)
	sw   $t0, 1892($gp)
	sw   $t0, 1896($gp)
	sw   $t0, 1900($gp)
	sw   $t0, 1904($gp)
	sw   $t0, 1908($gp)
	sw   $t0, 1912($gp)
	sw   $t0, 1916($gp)
	sw   $t0, 1920($gp)
	sw   $t0, 1924($gp)
	sw   $t0, 1928($gp)
	sw   $t0, 1932($gp)
	sw   $t0, 1936($gp)
	sw   $t0, 1940($gp)
	sw   $t0, 1944($gp)
	sw   $t0, 1948($gp)
	sw   $t0, 1952($gp)
	sw   $t0, 1956($gp)
	sw   $t0, 1960($gp)
	sw   $t0, 1964($gp)
	sw   $t0, 1968($gp)
	sw   $t0, 1972($gp)
	sw   $t0, 1976($gp)
	sw   $t0, 1980($gp)
	sw   $t0, 1984($gp)
	sw   $t0, 1988($gp)
	sw   $t0, 1992($gp)
	sw   $t0, 1996($gp)
	sw   $t0, 2000($gp)
	sw   $t0, 2004($gp)
	sw   $t0, 2008($gp)
	sw   $t0, 2012($gp)
	sw   $t0, 2016($gp)
	sw   $t0, 2020($gp)
	sw   $t0, 2024($gp)
	sw   $t0, 2028($gp)
	sw   $t0, 2032($gp)
	sw   $t0, 2036($gp)
	sw   $t0, 2040($gp)
	sw   $t0, 2044($gp)
	sw   $t0, 2048($gp)
	sw   $t0, 2052($gp)
	sw   $t0, 2056($gp)
	sw   $t0, 2060($gp)
	sw   $t0, 2064($gp)
	sw   $t0, 2068($gp)
	sw   $t0, 2072($gp)
	sw   $t0, 2076($gp)
	sw   $t0, 2080($gp)
	sw   $t0, 2084($gp)
	sw   $t0, 2088($gp)
	sw   $t0, 2092($gp)
	sw   $t0, 2096($gp)
	sw   $t0, 2100($gp)
	sw   $t0, 2104($gp)
	sw   $t0, 2108($gp)
	sw   $t0, 2112($gp)
	sw   $t0, 2116($gp)
	sw   $t0, 2120($gp)
	sw   $t0, 2124($gp)
	sw   $t0, 2128($gp)
	sw   $t0, 2132($gp)
	sw   $t0, 2136($gp)
	sw   $t0, 2140($gp)
	sw   $t0, 2144($gp)
	sw   $t0, 2148($gp)
	sw   $t0, 2152($gp)
	sw   $t0, 2156($gp)
	sw   $t0, 2160($gp)
	sw   $t0, 2164($gp)
	sw   $t0, 2168($gp)
	sw   $t0, 2172($gp)
	sw   $t0, 2176($gp)
	sw   $t0, 2180($gp)
	sw   $t0, 2184($gp)
	sw   $t0, 2188($gp)
	sw   $t0, 2192($gp)
	sw   $t0, 2196($gp)
	sw   $t0, 2200($gp)
	sw   $t0, 2204($gp)
	sw   $t0, 2208($gp)
	sw   $t0, 2212($gp)
	sw   $t0, 2216($gp)
	sw   $t0, 2220($gp)
	sw   $t0, 2224($gp)
	sw   $t0, 2228($gp)
	sw   $t0, 2232($gp)
	sw   $t0, 2236($gp)
	sw   $t0, 2240($gp)
	sw   $t0, 2244($gp)
	sw   $t0, 2248($gp)
	sw   $t0, 2252($gp)
	sw   $t0, 2256($gp)
	sw   $t0, 2260($gp)
	sw   $t0, 2264($gp)
	sw   $t0, 2268($gp)
	sw   $t0, 2272($gp)
	sw   $t0, 2276($gp)
	sw   $t0, 2280($gp)
	sw   $t0, 2284($gp)
	sw   $t0, 2288($gp)
	sw   $t0, 2292($gp)
	sw   $t0, 2296($gp)
	sw   $t0, 2300($gp)
	sw   $t0, 2304($gp)
	sw   $t0, 2308($gp)
	sw   $t0, 2312($gp)
	sw   $t0, 2316($gp)
	sw   $t0, 2320($gp)
	sw   $t0, 2324($gp)
	sw   $t0, 2328($gp)
	sw   $t0, 2332($gp)
	sw   $t0, 2336($gp)
	sw   $t0, 2340($gp)
	sw   $t0, 2344($gp)
	sw   $t0, 2348($gp)
	sw   $t0, 2352($gp)
	sw   $t0, 2356($gp)
	sw   $t0, 2360($gp)
	sw   $t0, 2364($gp)
	sw   $t0, 2368($gp)
	sw   $t0, 2372($gp)
	sw   $t0, 2376($gp)
	sw   $t0, 2380($gp)
	sw   $t0, 2384($gp)
	sw   $t0, 2388($gp)
	sw   $t0, 2392($gp)
	sw   $t0, 2396($gp)
	sw   $t0, 2400($gp)
	sw   $t0, 2404($gp)
	sw   $t0, 2408($gp)
	sw   $t0, 2412($gp)
	sw   $t0, 2416($gp)
	sw   $t0, 2420($gp)
	sw   $t0, 2424($gp)
	sw   $t0, 2428($gp)
	sw   $t0, 2432($gp)
	sw   $t0, 2436($gp)
	sw   $t0, 2440($gp)
	sw   $t0, 2444($gp)
	sw   $t0, 2448($gp)
	sw   $t0, 2452($gp)
	sw   $t0, 2456($gp)
	sw   $t0, 2460($gp)
	sw   $t0, 2464($gp)
	sw   $t0, 2468($gp)
	sw   $t0, 2472($gp)
	sw   $t0, 2476($gp)
	sw   $t0, 2480($gp)
	sw   $t0, 2484($gp)
	sw   $t0, 2488($gp)
	sw   $t0, 2492($gp)
	sw   $t0, 2496($gp)
	sw   $t0, 2500($gp)
	sw   $t0, 2504($gp)
	sw   $t0, 2508($gp)
	sw   $t0, 2512($gp)
	sw   $t0, 2516($gp)
	sw   $t0, 2520($gp)
	sw   $t0, 2524($gp)
	sw   $t0, 2528($gp)
	sw   $t0, 2532($gp)
	sw   $t0, 2536($gp)
	sw   $t0, 2540($gp)
	sw   $t0, 2544($gp)
	sw   $t0, 2548($gp)
	sw   $t0, 2552($gp)
	sw   $t0, 2556($gp)
	sw   $t0, 2560($gp)
	sw   $t0, 2564($gp)
	sw   $t0, 2568($gp)
	sw   $t0, 2572($gp)
	sw   $t0, 2576($gp)
	sw   $t0, 2584($gp)
	sw   $t0, 2588($gp)
	sw   $t0, 2592($gp)
	sw   $t0, 2596($gp)
	sw   $t0, 2600($gp)
	sw   $t0, 2604($gp)
	sw   $t0, 2608($gp)
	sw   $t0, 2612($gp)
	sw   $t0, 2616($gp)
	sw   $t0, 2620($gp)
	sw   $t0, 2624($gp)
	sw   $t0, 2628($gp)
	sw   $t0, 2632($gp)
	sw   $t0, 2636($gp)
	sw   $t0, 2640($gp)
	sw   $t0, 2644($gp)
	sw   $t0, 2648($gp)
	sw   $t0, 2652($gp)
	sw   $t0, 2656($gp)
	sw   $t0, 2660($gp)
	sw   $t0, 2664($gp)
	sw   $t0, 2668($gp)
	sw   $t0, 2672($gp)
	sw   $t0, 2676($gp)
	sw   $t0, 2680($gp)
	sw   $t0, 2684($gp)
	sw   $t0, 2688($gp)
	sw   $t0, 2692($gp)
	sw   $t0, 2696($gp)
	sw   $t0, 2700($gp)
	sw   $t0, 2704($gp)
	sw   $t0, 2708($gp)
	sw   $t0, 2712($gp)
	sw   $t0, 2716($gp)
	sw   $t0, 2720($gp)
	sw   $t0, 2724($gp)
	sw   $t0, 2728($gp)
	sw   $t0, 2736($gp)
	sw   $t0, 2740($gp)
	sw   $t0, 2744($gp)
	sw   $t0, 2748($gp)
	sw   $t0, 2752($gp)
	sw   $t0, 2756($gp)
	sw   $t0, 2760($gp)
	sw   $t0, 2764($gp)
	sw   $t0, 2768($gp)
	sw   $t0, 2772($gp)
	sw   $t0, 2776($gp)
	sw   $t0, 2780($gp)
	sw   $t0, 2784($gp)
	sw   $t0, 2788($gp)
	sw   $t0, 2792($gp)
	sw   $t0, 2796($gp)
	sw   $t0, 2800($gp)
	sw   $t0, 2804($gp)
	sw   $t0, 2808($gp)
	sw   $t0, 2812($gp)
	sw   $t0, 2816($gp)
	sw   $t0, 2820($gp)
	sw   $t0, 2824($gp)
	sw   $t0, 2828($gp)
	sw   $t0, 2832($gp)
	sw   $t0, 2836($gp)
	sw   $t0, 2840($gp)
	sw   $t0, 2844($gp)
	sw   $t0, 2848($gp)
	sw   $t0, 2852($gp)
	sw   $t0, 2856($gp)
	sw   $t0, 2860($gp)
	sw   $t0, 2864($gp)
	sw   $t0, 2868($gp)
	sw   $t0, 2872($gp)
	sw   $t0, 2876($gp)
	sw   $t0, 2880($gp)
	sw   $t0, 2884($gp)
	sw   $t0, 2888($gp)
	sw   $t0, 2892($gp)
	sw   $t0, 2896($gp)
	sw   $t0, 2900($gp)
	sw   $t0, 2904($gp)
	sw   $t0, 2908($gp)
	sw   $t0, 2912($gp)
	sw   $t0, 2916($gp)
	sw   $t0, 2920($gp)
	sw   $t0, 2924($gp)
	sw   $t0, 2932($gp)
	sw   $t0, 2936($gp)
	sw   $t0, 2940($gp)
	sw   $t0, 2944($gp)
	sw   $t0, 2948($gp)
	sw   $t0, 2952($gp)
	sw   $t0, 2956($gp)
	sw   $t0, 2960($gp)
	sw   $t0, 2964($gp)
	sw   $t0, 2968($gp)
	sw   $t0, 2972($gp)
	sw   $t0, 2976($gp)
	sw   $t0, 2980($gp)
	sw   $t0, 2984($gp)
	sw   $t0, 2988($gp)
	sw   $t0, 2992($gp)
	sw   $t0, 2996($gp)
	sw   $t0, 3000($gp)
	sw   $t0, 3004($gp)
	sw   $t0, 3008($gp)
	sw   $t0, 3012($gp)
	sw   $t0, 3016($gp)
	sw   $t0, 3020($gp)
	sw   $t0, 3024($gp)
	sw   $t0, 3028($gp)
	sw   $t0, 3032($gp)
	sw   $t0, 3036($gp)
	sw   $t0, 3040($gp)
	sw   $t0, 3044($gp)
	sw   $t0, 3048($gp)
	sw   $t0, 3052($gp)
	sw   $t0, 3056($gp)
	sw   $t0, 3060($gp)
	sw   $t0, 3064($gp)
	sw   $t0, 3068($gp)
	sw   $t0, 3072($gp)
	sw   $t0, 3076($gp)
	sw   $t0, 3080($gp)
	sw   $t0, 3084($gp)
	sw   $t0, 3088($gp)
	sw   $t0, 3092($gp)
	sw   $t0, 3096($gp)
	sw   $t0, 3100($gp)
	sw   $t0, 3104($gp)
	sw   $t0, 3108($gp)
	sw   $t0, 3112($gp)
	sw   $t0, 3116($gp)
	sw   $t0, 3120($gp)
	sw   $t0, 3124($gp)
	sw   $t0, 3128($gp)
	sw   $t0, 3132($gp)
	sw   $t0, 3136($gp)
	sw   $t0, 3140($gp)
	sw   $t0, 3144($gp)
	sw   $t0, 3148($gp)
	sw   $t0, 3152($gp)
	sw   $t0, 3160($gp)
	sw   $t0, 3164($gp)
	sw   $t0, 3168($gp)
	sw   $t0, 3172($gp)
	sw   $t0, 3176($gp)
	sw   $t0, 3180($gp)
	sw   $t0, 3184($gp)
	sw   $t0, 3188($gp)
	sw   $t0, 3192($gp)
	sw   $t0, 3196($gp)
	sw   $t0, 3200($gp)
	sw   $t0, 3204($gp)
	sw   $t0, 3208($gp)
	sw   $t0, 3212($gp)
	sw   $t0, 3216($gp)
	sw   $t0, 3220($gp)
	sw   $t0, 3224($gp)
	sw   $t0, 3232($gp)
	sw   $t0, 3236($gp)
	sw   $t0, 3240($gp)
	sw   $t0, 3244($gp)
	sw   $t0, 3248($gp)
	sw   $t0, 3252($gp)
	sw   $t0, 3256($gp)
	sw   $t0, 3260($gp)
	sw   $t0, 3264($gp)
	sw   $t0, 3268($gp)
	sw   $t0, 3272($gp)
	sw   $t0, 3276($gp)
	sw   $t0, 3280($gp)
	sw   $t0, 3284($gp)
	sw   $t0, 3288($gp)
	sw   $t0, 3292($gp)
	sw   $t0, 3296($gp)
	sw   $t0, 3300($gp)
	sw   $t0, 3304($gp)
	sw   $t0, 3308($gp)
	sw   $t0, 3312($gp)
	sw   $t0, 3316($gp)
	sw   $t0, 3320($gp)
	sw   $t0, 3324($gp)
	sw   $t0, 3328($gp)
	sw   $t0, 3332($gp)
	sw   $t0, 3336($gp)
	sw   $t0, 3340($gp)
	sw   $t0, 3344($gp)
	sw   $t0, 3348($gp)
	sw   $t0, 3352($gp)
	sw   $t0, 3356($gp)
	sw   $t0, 3360($gp)
	sw   $t0, 3364($gp)
	sw   $t0, 3368($gp)
	sw   $t0, 3372($gp)
	sw   $t0, 3376($gp)
	sw   $t0, 3380($gp)
	sw   $t0, 3384($gp)
	sw   $t0, 3388($gp)
	sw   $t0, 3392($gp)
	sw   $t0, 3396($gp)
	sw   $t0, 3400($gp)
	sw   $t0, 3404($gp)
	sw   $t0, 3408($gp)
	sw   $t0, 3412($gp)
	sw   $t0, 3416($gp)
	sw   $t0, 3420($gp)
	sw   $t0, 3424($gp)
	sw   $t0, 3428($gp)
	sw   $t0, 3432($gp)
	sw   $t0, 3436($gp)
	sw   $t0, 3440($gp)
	sw   $t0, 3444($gp)
	sw   $t0, 3448($gp)
	sw   $t0, 3452($gp)
	sw   $t0, 3456($gp)
	sw   $t0, 3460($gp)
	sw   $t0, 3464($gp)
	sw   $t0, 3468($gp)
	sw   $t0, 3472($gp)
	sw   $t0, 3476($gp)
	sw   $t0, 3480($gp)
	sw   $t0, 3484($gp)
	sw   $t0, 3488($gp)
	sw   $t0, 3492($gp)
	sw   $t0, 3496($gp)
	sw   $t0, 3500($gp)
	sw   $t0, 3504($gp)
	sw   $t0, 3508($gp)
	sw   $t0, 3512($gp)
	sw   $t0, 3516($gp)
	sw   $t0, 3520($gp)
	sw   $t0, 3524($gp)
	sw   $t0, 3528($gp)
	sw   $t0, 3532($gp)
	sw   $t0, 3536($gp)
	sw   $t0, 3544($gp)
	sw   $t0, 3548($gp)
	sw   $t0, 3552($gp)
	sw   $t0, 3556($gp)
	sw   $t0, 3560($gp)
	sw   $t0, 3564($gp)
	sw   $t0, 3568($gp)
	sw   $t0, 3572($gp)
	sw   $t0, 3576($gp)
	sw   $t0, 3580($gp)
	sw   $t0, 3584($gp)
	sw   $t0, 3588($gp)
	sw   $t0, 3592($gp)
	sw   $t0, 3596($gp)
	sw   $t0, 3600($gp)
	sw   $t0, 3604($gp)
	sw   $t0, 3608($gp)
	sw   $t0, 3612($gp)
	sw   $t0, 3616($gp)
	sw   $t0, 3620($gp)
	sw   $t0, 3624($gp)
	sw   $t0, 3628($gp)
	sw   $t0, 3632($gp)
	sw   $t0, 3636($gp)
	sw   $t0, 3640($gp)
	sw   $t0, 3644($gp)
	sw   $t0, 3648($gp)
	sw   $t0, 3652($gp)
	sw   $t0, 3656($gp)
	sw   $t0, 3660($gp)
	sw   $t0, 3664($gp)
	sw   $t0, 3668($gp)
	sw   $t0, 3672($gp)
	sw   $t0, 3676($gp)
	sw   $t0, 3680($gp)
	sw   $t0, 3684($gp)
	sw   $t0, 3688($gp)
	sw   $t0, 3692($gp)
	sw   $t0, 3696($gp)
	sw   $t0, 3700($gp)
	sw   $t0, 3704($gp)
	sw   $t0, 3708($gp)
	sw   $t0, 3712($gp)
	sw   $t0, 3716($gp)
	sw   $t0, 3720($gp)
	sw   $t0, 3724($gp)
	sw   $t0, 3728($gp)
	sw   $t0, 3732($gp)
	sw   $t0, 3736($gp)
	sw   $t0, 3740($gp)
	sw   $t0, 3744($gp)
	sw   $t0, 3748($gp)
	sw   $t0, 3752($gp)
	sw   $t0, 3756($gp)
	sw   $t0, 3760($gp)
	sw   $t0, 3764($gp)
	sw   $t0, 3768($gp)
	sw   $t0, 3772($gp)
	sw   $t0, 3776($gp)
	sw   $t0, 3780($gp)
	sw   $t0, 3784($gp)
	sw   $t0, 3788($gp)
	sw   $t0, 3792($gp)
	sw   $t0, 3796($gp)
	sw   $t0, 3800($gp)
	sw   $t0, 3804($gp)
	sw   $t0, 3808($gp)
	sw   $t0, 3812($gp)
	sw   $t0, 3816($gp)
	sw   $t0, 3820($gp)
	sw   $t0, 3824($gp)
	sw   $t0, 3828($gp)
	sw   $t0, 3832($gp)
	sw   $t0, 3836($gp)
	sw   $t0, 3840($gp)
	sw   $t0, 3844($gp)
	sw   $t0, 3848($gp)
	sw   $t0, 3852($gp)
	sw   $t0, 3856($gp)
	sw   $t0, 3860($gp)
	sw   $t0, 3864($gp)
	sw   $t0, 3868($gp)
	sw   $t0, 3872($gp)
	sw   $t0, 3876($gp)
	sw   $t0, 3880($gp)
	sw   $t0, 3888($gp)
	sw   $t0, 3892($gp)
	sw   $t0, 3896($gp)
	sw   $t0, 3900($gp)
	sw   $t0, 3904($gp)
	sw   $t0, 3908($gp)
	sw   $t0, 3912($gp)
	sw   $t0, 3916($gp)
	sw   $t0, 3920($gp)
	sw   $t0, 3924($gp)
	sw   $t0, 3928($gp)
	sw   $t0, 3932($gp)
	sw   $t0, 3936($gp)
	sw   $t0, 3940($gp)
	sw   $t0, 3944($gp)
	sw   $t0, 3948($gp)
	sw   $t0, 3952($gp)
	sw   $t0, 3956($gp)
	sw   $t0, 3960($gp)
	sw   $t0, 3964($gp)
	sw   $t0, 3968($gp)
	sw   $t0, 3972($gp)
	sw   $t0, 3976($gp)
	sw   $t0, 3980($gp)
	sw   $t0, 3984($gp)
	sw   $t0, 3988($gp)
	sw   $t0, 3992($gp)
	sw   $t0, 3996($gp)
	sw   $t0, 4000($gp)
	sw   $t0, 4004($gp)
	sw   $t0, 4008($gp)
	sw   $t0, 4012($gp)
	sw   $t0, 4016($gp)
	sw   $t0, 4020($gp)
	sw   $t0, 4024($gp)
	sw   $t0, 4028($gp)
	sw   $t0, 4032($gp)
	sw   $t0, 4036($gp)
	sw   $t0, 4040($gp)
	sw   $t0, 4044($gp)
	sw   $t0, 4048($gp)
	sw   $t0, 4052($gp)
	sw   $t0, 4056($gp)
	sw   $t0, 4060($gp)
	sw   $t0, 4064($gp)
	sw   $t0, 4068($gp)
	sw   $t0, 4072($gp)
	sw   $t0, 4076($gp)
	sw   $t0, 4080($gp)
	sw   $t0, 4084($gp)
	sw   $t0, 4088($gp)
	sw   $t0, 4092($gp)
	sw   $t0, 4096($gp)
	sw   $t0, 4100($gp)
	sw   $t0, 4104($gp)
	sw   $t0, 4108($gp)
	sw   $t0, 4112($gp)
	sw   $t0, 4116($gp)
	sw   $t0, 4120($gp)
	sw   $t0, 4124($gp)
	sw   $t0, 4128($gp)
	sw   $t0, 4132($gp)
	sw   $t0, 4136($gp)
	sw   $t0, 4140($gp)
	sw   $t0, 4144($gp)
	sw   $t0, 4148($gp)
	sw   $t0, 4152($gp)
	sw   $t0, 4156($gp)
	sw   $t0, 4160($gp)
	sw   $t0, 4164($gp)
	sw   $t0, 4168($gp)
	sw   $t0, 4172($gp)
	sw   $t0, 4176($gp)
	sw   $t0, 4180($gp)
	sw   $t0, 4184($gp)
	sw   $t0, 4188($gp)
	sw   $t0, 4192($gp)
	sw   $t0, 4196($gp)
	sw   $t0, 4200($gp)
	sw   $t0, 4204($gp)
	sw   $t0, 4208($gp)
	sw   $t0, 4212($gp)
	sw   $t0, 4216($gp)
	sw   $t0, 4220($gp)
	sw   $t0, 4224($gp)
	sw   $t0, 4228($gp)
	sw   $t0, 4232($gp)
	sw   $t0, 4236($gp)
	sw   $t0, 4240($gp)
	sw   $t0, 4244($gp)
	sw   $t0, 4248($gp)
	sw   $t0, 4252($gp)
	sw   $t0, 4256($gp)
	sw   $t0, 4260($gp)
	sw   $t0, 4264($gp)
	sw   $t0, 4268($gp)
	sw   $t0, 4272($gp)
	sw   $t0, 4276($gp)
	sw   $t0, 4280($gp)
	sw   $t0, 4284($gp)
	sw   $t0, 4288($gp)
	sw   $t0, 4292($gp)
	sw   $t0, 4296($gp)
	sw   $t0, 4300($gp)
	sw   $t0, 4304($gp)
	sw   $t0, 4308($gp)
	sw   $t0, 4312($gp)
	sw   $t0, 4316($gp)
	sw   $t0, 4320($gp)
	sw   $t0, 4324($gp)
	sw   $t0, 4328($gp)
	sw   $t0, 4332($gp)
	sw   $t0, 4336($gp)
	sw   $t0, 4340($gp)
	sw   $t0, 4344($gp)
	sw   $t0, 4348($gp)
	sw   $t0, 4352($gp)
	sw   $t0, 4356($gp)
	sw   $t0, 4360($gp)
	sw   $t0, 4364($gp)
	sw   $t0, 4368($gp)
	sw   $t0, 4372($gp)
	sw   $t0, 4376($gp)
	sw   $t0, 4380($gp)
	sw   $t0, 4384($gp)
	sw   $t0, 4388($gp)
	sw   $t0, 4392($gp)
	sw   $t0, 4396($gp)
	sw   $t0, 4400($gp)
	sw   $t0, 4404($gp)
	sw   $t0, 4408($gp)
	sw   $t0, 4412($gp)
	sw   $t0, 4416($gp)
	sw   $t0, 4420($gp)
	sw   $t0, 4424($gp)
	sw   $t0, 4428($gp)
	sw   $t0, 4432($gp)
	sw   $t0, 4436($gp)
	sw   $t0, 4440($gp)
	sw   $t0, 4448($gp)
	sw   $t0, 4452($gp)
	sw   $t0, 4456($gp)
	sw   $t0, 4460($gp)
	sw   $t0, 4464($gp)
	sw   $t0, 4468($gp)
	sw   $t0, 4472($gp)
	sw   $t0, 4476($gp)
	sw   $t0, 4480($gp)
	sw   $t0, 4488($gp)
	sw   $t0, 4492($gp)
	sw   $t0, 4496($gp)
	sw   $t0, 4500($gp)
	sw   $t0, 4504($gp)
	sw   $t0, 4508($gp)
	sw   $t0, 4512($gp)
	sw   $t0, 4516($gp)
	sw   $t0, 4520($gp)
	sw   $t0, 4524($gp)
	sw   $t0, 4528($gp)
	sw   $t0, 4532($gp)
	sw   $t0, 4536($gp)
	sw   $t0, 4540($gp)
	sw   $t0, 4544($gp)
	sw   $t0, 4548($gp)
	sw   $t0, 4552($gp)
	sw   $t0, 4556($gp)
	sw   $t0, 4560($gp)
	sw   $t0, 4564($gp)
	sw   $t0, 4568($gp)
	sw   $t0, 4572($gp)
	sw   $t0, 4576($gp)
	sw   $t0, 4580($gp)
	sw   $t0, 4584($gp)
	sw   $t0, 4588($gp)
	sw   $t0, 4592($gp)
	sw   $t0, 4596($gp)
	sw   $t0, 4600($gp)
	sw   $t0, 4604($gp)
	sw   $t0, 4608($gp)
	sw   $t0, 4616($gp)
	sw   $t0, 4620($gp)
	sw   $t0, 4624($gp)
	sw   $t0, 4628($gp)
	sw   $t0, 4632($gp)
	sw   $t0, 4636($gp)
	sw   $t0, 4640($gp)
	sw   $t0, 4644($gp)
	sw   $t0, 4648($gp)
	sw   $t0, 4652($gp)
	sw   $t0, 4656($gp)
	sw   $t0, 4660($gp)
	sw   $t0, 4664($gp)
	sw   $t0, 4668($gp)
	sw   $t0, 4672($gp)
	sw   $t0, 4676($gp)
	sw   $t0, 4680($gp)
	sw   $t0, 4684($gp)
	sw   $t0, 4688($gp)
	sw   $t0, 4692($gp)
	sw   $t0, 4696($gp)
	sw   $t0, 4700($gp)
	sw   $t0, 4704($gp)
	sw   $t0, 4708($gp)
	sw   $t0, 4712($gp)
	sw   $t0, 4716($gp)
	sw   $t0, 4720($gp)
	sw   $t0, 4724($gp)
	sw   $t0, 4728($gp)
	sw   $t0, 4732($gp)
	sw   $t0, 4736($gp)
	sw   $t0, 4740($gp)
	sw   $t0, 4744($gp)
	sw   $t0, 4748($gp)
	sw   $t0, 4752($gp)
	sw   $t0, 4756($gp)
	sw   $t0, 4760($gp)
	sw   $t0, 4764($gp)
	sw   $t0, 4768($gp)
	sw   $t0, 4772($gp)
	sw   $t0, 4776($gp)
	sw   $t0, 4780($gp)
	sw   $t0, 4784($gp)
	sw   $t0, 4788($gp)
	sw   $t0, 4792($gp)
	sw   $t0, 4796($gp)
	sw   $t0, 4800($gp)
	sw   $t0, 4804($gp)
	sw   $t0, 4808($gp)
	sw   $t0, 4812($gp)
	sw   $t0, 4816($gp)
	sw   $t0, 4820($gp)
	sw   $t0, 4824($gp)
	sw   $t0, 4828($gp)
	sw   $t0, 4832($gp)
	sw   $t0, 4836($gp)
	sw   $t0, 4840($gp)
	sw   $t0, 4844($gp)
	sw   $t0, 4848($gp)
	sw   $t0, 4852($gp)
	sw   $t0, 4856($gp)
	sw   $t0, 4860($gp)
	sw   $t0, 4864($gp)
	sw   $t0, 4868($gp)
	sw   $t0, 4872($gp)
	sw   $t0, 4876($gp)
	sw   $t0, 4880($gp)
	sw   $t0, 4884($gp)
	sw   $t0, 4888($gp)
	sw   $t0, 4892($gp)
	sw   $t0, 4896($gp)
	sw   $t0, 4900($gp)
	sw   $t0, 4904($gp)
	sw   $t0, 4908($gp)
	sw   $t0, 4912($gp)
	sw   $t0, 4916($gp)
	sw   $t0, 4920($gp)
	sw   $t0, 4928($gp)
	sw   $t0, 4932($gp)
	sw   $t0, 4936($gp)
	sw   $t0, 4940($gp)
	sw   $t0, 4944($gp)
	sw   $t0, 4948($gp)
	sw   $t0, 4952($gp)
	sw   $t0, 4956($gp)
	sw   $t0, 4960($gp)
	sw   $t0, 4964($gp)
	sw   $t0, 4968($gp)
	sw   $t0, 4972($gp)
	sw   $t0, 4976($gp)
	sw   $t0, 4980($gp)
	sw   $t0, 4984($gp)
	sw   $t0, 4988($gp)
	sw   $t0, 4992($gp)
	sw   $t0, 4996($gp)
	sw   $t0, 5000($gp)
	sw   $t0, 5004($gp)
	sw   $t0, 5008($gp)
	sw   $t0, 5012($gp)
	sw   $t0, 5016($gp)
	sw   $t0, 5020($gp)
	sw   $t0, 5024($gp)
	sw   $t0, 5028($gp)
	sw   $t0, 5032($gp)
	sw   $t0, 5036($gp)
	sw   $t0, 5040($gp)
	sw   $t0, 5044($gp)
	sw   $t0, 5048($gp)
	sw   $t0, 5052($gp)
	sw   $t0, 5056($gp)
	sw   $t0, 5060($gp)
	sw   $t0, 5064($gp)
	sw   $t0, 5068($gp)
	sw   $t0, 5072($gp)
	sw   $t0, 5076($gp)
	sw   $t0, 5080($gp)
	sw   $t0, 5084($gp)
	sw   $t0, 5088($gp)
	sw   $t0, 5092($gp)
	sw   $t0, 5096($gp)
	sw   $t0, 5100($gp)
	sw   $t0, 5104($gp)
	sw   $t0, 5108($gp)
	sw   $t0, 5112($gp)
	sw   $t0, 5116($gp)
	sw   $t0, 5120($gp)
	sw   $t0, 5124($gp)
	sw   $t0, 5128($gp)
	sw   $t0, 5132($gp)
	sw   $t0, 5136($gp)
	sw   $t0, 5140($gp)
	sw   $t0, 5144($gp)
	sw   $t0, 5148($gp)
	sw   $t0, 5152($gp)
	sw   $t0, 5156($gp)
	sw   $t0, 5160($gp)
	sw   $t0, 5164($gp)
	sw   $t0, 5168($gp)
	sw   $t0, 5172($gp)
	sw   $t0, 5176($gp)
	sw   $t0, 5180($gp)
	sw   $t0, 5184($gp)
	sw   $t0, 5188($gp)
	sw   $t0, 5192($gp)
	sw   $t0, 5196($gp)
	sw   $t0, 5200($gp)
	sw   $t0, 5204($gp)
	sw   $t0, 5208($gp)
	sw   $t0, 5212($gp)
	sw   $t0, 5216($gp)
	sw   $t0, 5220($gp)
	sw   $t0, 5224($gp)
	sw   $t0, 5228($gp)
	sw   $t0, 5232($gp)
	sw   $t0, 5236($gp)
	sw   $t0, 5240($gp)
	sw   $t0, 5244($gp)
	sw   $t0, 5248($gp)
	sw   $t0, 5252($gp)
	sw   $t0, 5256($gp)
	sw   $t0, 5260($gp)
	sw   $t0, 5264($gp)
	sw   $t0, 5268($gp)
	sw   $t0, 5272($gp)
	sw   $t0, 5276($gp)
	sw   $t0, 5280($gp)
	sw   $t0, 5284($gp)
	sw   $t0, 5288($gp)
	sw   $t0, 5292($gp)
	sw   $t0, 5296($gp)
	sw   $t0, 5300($gp)
	sw   $t0, 5304($gp)
	sw   $t0, 5308($gp)
	sw   $t0, 5312($gp)
	sw   $t0, 5316($gp)
	sw   $t0, 5320($gp)
	sw   $t0, 5324($gp)
	sw   $t0, 5328($gp)
	sw   $t0, 5332($gp)
	sw   $t0, 5336($gp)
	sw   $t0, 5340($gp)
	sw   $t0, 5344($gp)
	sw   $t0, 5348($gp)
	sw   $t0, 5352($gp)
	sw   $t0, 5356($gp)
	sw   $t0, 5364($gp)
	sw   $t0, 5368($gp)
	sw   $t0, 5372($gp)
	sw   $t0, 5376($gp)
	sw   $t0, 5380($gp)
	sw   $t0, 5384($gp)
	sw   $t0, 5388($gp)
	sw   $t0, 5392($gp)
	sw   $t0, 5396($gp)
	sw   $t0, 5400($gp)
	sw   $t0, 5404($gp)
	sw   $t0, 5408($gp)
	sw   $t0, 5412($gp)
	sw   $t0, 5416($gp)
	sw   $t0, 5420($gp)
	sw   $t0, 5424($gp)
	sw   $t0, 5428($gp)
	sw   $t0, 5432($gp)
	sw   $t0, 5436($gp)
	sw   $t0, 5440($gp)
	sw   $t0, 5444($gp)
	sw   $t0, 5448($gp)
	sw   $t0, 5452($gp)
	sw   $t0, 5456($gp)
	sw   $t0, 5460($gp)
	sw   $t0, 5464($gp)
	sw   $t0, 5468($gp)
	sw   $t0, 5472($gp)
	sw   $t0, 5476($gp)
	sw   $t0, 5480($gp)
	sw   $t0, 5484($gp)
	sw   $t0, 5488($gp)
	sw   $t0, 5492($gp)
	sw   $t0, 5496($gp)
	sw   $t0, 5500($gp)
	sw   $t0, 5504($gp)
	sw   $t0, 5508($gp)
	sw   $t0, 5512($gp)
	sw   $t0, 5516($gp)
	sw   $t0, 5520($gp)
	sw   $t0, 5528($gp)
	sw   $t0, 5532($gp)
	sw   $t0, 5536($gp)
	sw   $t0, 5540($gp)
	sw   $t0, 5548($gp)
	sw   $t0, 5552($gp)
	sw   $t0, 5556($gp)
	sw   $t0, 5560($gp)
	sw   $t0, 5564($gp)
	sw   $t0, 5568($gp)
	sw   $t0, 5572($gp)
	sw   $t0, 5576($gp)
	sw   $t0, 5580($gp)
	sw   $t0, 5584($gp)
	sw   $t0, 5588($gp)
	sw   $t0, 5592($gp)
	sw   $t0, 5596($gp)
	sw   $t0, 5600($gp)
	sw   $t0, 5604($gp)
	sw   $t0, 5608($gp)
	sw   $t0, 5612($gp)
	sw   $t0, 5616($gp)
	sw   $t0, 5620($gp)
	sw   $t0, 5624($gp)
	sw   $t0, 5628($gp)
	sw   $t0, 5632($gp)
	sw   $t0, 5636($gp)
	sw   $t0, 5640($gp)
	sw   $t0, 5644($gp)
	sw   $t0, 5648($gp)
	sw   $t0, 5652($gp)
	sw   $t0, 5656($gp)
	sw   $t0, 5660($gp)
	sw   $t0, 5664($gp)
	sw   $t0, 5668($gp)
	sw   $t0, 5672($gp)
	sw   $t0, 5676($gp)
	sw   $t0, 5680($gp)
	sw   $t0, 5684($gp)
	sw   $t0, 5688($gp)
	sw   $t0, 5692($gp)
	sw   $t0, 5696($gp)
	sw   $t0, 5700($gp)
	sw   $t0, 5704($gp)
	sw   $t0, 5708($gp)
	sw   $t0, 5712($gp)
	sw   $t0, 5716($gp)
	sw   $t0, 5720($gp)
	sw   $t0, 5724($gp)
	sw   $t0, 5728($gp)
	sw   $t0, 5736($gp)
	sw   $t0, 5740($gp)
	sw   $t0, 5744($gp)
	sw   $t0, 5748($gp)
	sw   $t0, 5752($gp)
	sw   $t0, 5756($gp)
	sw   $t0, 5760($gp)
	sw   $t0, 5764($gp)
	sw   $t0, 5768($gp)
	sw   $t0, 5772($gp)
	sw   $t0, 5776($gp)
	sw   $t0, 5780($gp)
	sw   $t0, 5784($gp)
	sw   $t0, 5788($gp)
	sw   $t0, 5792($gp)
	sw   $t0, 5796($gp)
	sw   $t0, 5800($gp)
	sw   $t0, 5804($gp)
	sw   $t0, 5808($gp)
	sw   $t0, 5812($gp)
	sw   $t0, 5816($gp)
	sw   $t0, 5820($gp)
	sw   $t0, 5824($gp)
	sw   $t0, 5828($gp)
	sw   $t0, 5832($gp)
	sw   $t0, 5836($gp)
	sw   $t0, 5840($gp)
	sw   $t0, 5844($gp)
	sw   $t0, 5848($gp)
	sw   $t0, 5852($gp)
	sw   $t0, 5856($gp)
	sw   $t0, 5860($gp)
	sw   $t0, 5864($gp)
	sw   $t0, 5868($gp)
	sw   $t0, 5872($gp)
	sw   $t0, 5876($gp)
	sw   $t0, 5880($gp)
	sw   $t0, 5884($gp)
	sw   $t0, 5888($gp)
	sw   $t0, 5892($gp)
	sw   $t0, 5896($gp)
	sw   $t0, 5900($gp)
	sw   $t0, 5904($gp)
	sw   $t0, 5908($gp)
	sw   $t0, 5912($gp)
	sw   $t0, 5916($gp)
	sw   $t0, 5920($gp)
	sw   $t0, 5924($gp)
	sw   $t0, 5928($gp)
	sw   $t0, 5932($gp)
	sw   $t0, 5936($gp)
	sw   $t0, 5940($gp)
	sw   $t0, 5944($gp)
	sw   $t0, 5948($gp)
	sw   $t0, 5952($gp)
	sw   $t0, 5956($gp)
	sw   $t0, 5960($gp)
	sw   $t0, 5968($gp)
	sw   $t0, 5972($gp)
	sw   $t0, 5976($gp)
	sw   $t0, 5980($gp)
	sw   $t0, 5984($gp)
	sw   $t0, 5988($gp)
	sw   $t0, 5992($gp)
	sw   $t0, 5996($gp)
	sw   $t0, 6000($gp)
	sw   $t0, 6004($gp)
	sw   $t0, 6008($gp)
	sw   $t0, 6020($gp)
	sw   $t0, 6024($gp)
	sw   $t0, 6028($gp)
	sw   $t0, 6032($gp)
	sw   $t0, 6036($gp)
	sw   $t0, 6040($gp)
	sw   $t0, 6044($gp)
	sw   $t0, 6048($gp)
	sw   $t0, 6052($gp)
	sw   $t0, 6056($gp)
	sw   $t0, 6060($gp)
	sw   $t0, 6064($gp)
	sw   $t0, 6068($gp)
	sw   $t0, 6072($gp)
	sw   $t0, 6076($gp)
	sw   $t0, 6080($gp)
	sw   $t0, 6084($gp)
	sw   $t0, 6088($gp)
	sw   $t0, 6092($gp)
	sw   $t0, 6096($gp)
	sw   $t0, 6100($gp)
	sw   $t0, 6104($gp)
	sw   $t0, 6108($gp)
	sw   $t0, 6112($gp)
	sw   $t0, 6116($gp)
	sw   $t0, 6120($gp)
	sw   $t0, 6124($gp)
	sw   $t0, 6128($gp)
	sw   $t0, 6132($gp)
	sw   $t0, 6136($gp)
	sw   $t0, 6140($gp)
	sw   $t0, 6144($gp)
	sw   $t0, 6148($gp)
	sw   $t0, 6152($gp)
	sw   $t0, 6156($gp)
	sw   $t0, 6160($gp)
	sw   $t0, 6168($gp)
	sw   $t0, 6172($gp)
	sw   $t0, 6176($gp)
	sw   $t0, 6180($gp)
	sw   $t0, 6184($gp)
	sw   $t0, 6188($gp)
	sw   $t0, 6192($gp)
	sw   $t0, 6196($gp)
	sw   $t0, 6200($gp)
	sw   $t0, 6204($gp)
	sw   $t0, 6208($gp)
	sw   $t0, 6212($gp)
	sw   $t0, 6216($gp)
	sw   $t0, 6220($gp)
	sw   $t0, 6224($gp)
	sw   $t0, 6228($gp)
	sw   $t0, 6232($gp)
	sw   $t0, 6236($gp)
	sw   $t0, 6240($gp)
	sw   $t0, 6244($gp)
	sw   $t0, 6248($gp)
	sw   $t0, 6252($gp)
	sw   $t0, 6256($gp)
	sw   $t0, 6280($gp)
	sw   $t0, 6284($gp)
	sw   $t0, 6288($gp)
	sw   $t0, 6292($gp)
	sw   $t0, 6296($gp)
	sw   $t0, 6300($gp)
	sw   $t0, 6304($gp)
	sw   $t0, 6308($gp)
	sw   $t0, 6312($gp)
	sw   $t0, 6316($gp)
	sw   $t0, 6320($gp)
	sw   $t0, 6324($gp)
	sw   $t0, 6328($gp)
	sw   $t0, 6332($gp)
	sw   $t0, 6336($gp)
	sw   $t0, 6340($gp)
	sw   $t0, 6344($gp)
	sw   $t0, 6352($gp)
	sw   $t0, 6356($gp)
	sw   $t0, 6360($gp)
	sw   $t0, 6364($gp)
	sw   $t0, 6368($gp)
	sw   $t0, 6372($gp)
	sw   $t0, 6376($gp)
	sw   $t0, 6380($gp)
	sw   $t0, 6384($gp)
	sw   $t0, 6388($gp)
	sw   $t0, 6392($gp)
	sw   $t0, 6396($gp)
	sw   $t0, 6400($gp)
	sw   $t0, 6404($gp)
	sw   $t0, 6408($gp)
	sw   $t0, 6412($gp)
	sw   $t0, 6416($gp)
	sw   $t0, 6420($gp)
	sw   $t0, 6424($gp)
	sw   $t0, 6428($gp)
	sw   $t0, 6432($gp)
	sw   $t0, 6436($gp)
	sw   $t0, 6440($gp)
	sw   $t0, 6444($gp)
	sw   $t0, 6448($gp)
	sw   $t0, 6452($gp)
	sw   $t0, 6456($gp)
	sw   $t0, 6460($gp)
	sw   $t0, 6468($gp)
	sw   $t0, 6472($gp)
	sw   $t0, 6476($gp)
	sw   $t0, 6480($gp)
	sw   $t0, 6484($gp)
	sw   $t0, 6488($gp)
	sw   $t0, 6492($gp)
	sw   $t0, 6496($gp)
	sw   $t0, 6500($gp)
	sw   $t0, 6504($gp)
	sw   $t0, 6508($gp)
	sw   $t0, 6540($gp)
	sw   $t0, 6544($gp)
	sw   $t0, 6548($gp)
	sw   $t0, 6552($gp)
	sw   $t0, 6556($gp)
	sw   $t0, 6560($gp)
	sw   $t0, 6564($gp)
	sw   $t0, 6568($gp)
	sw   $t0, 6572($gp)
	sw   $t0, 6576($gp)
	sw   $t0, 6580($gp)
	sw   $t0, 6584($gp)
	sw   $t0, 6588($gp)
	sw   $t0, 6592($gp)
	sw   $t0, 6596($gp)
	sw   $t0, 6600($gp)
	sw   $t0, 6604($gp)
	sw   $t0, 6608($gp)
	sw   $t0, 6612($gp)
	sw   $t0, 6616($gp)
	sw   $t0, 6620($gp)
	sw   $t0, 6624($gp)
	sw   $t0, 6628($gp)
	sw   $t0, 6632($gp)
	sw   $t0, 6640($gp)
	sw   $t0, 6644($gp)
	sw   $t0, 6648($gp)
	sw   $t0, 6652($gp)
	sw   $t0, 6656($gp)
	sw   $t0, 6660($gp)
	sw   $t0, 6664($gp)
	sw   $t0, 6668($gp)
	sw   $t0, 6672($gp)
	sw   $t0, 6676($gp)
	sw   $t0, 6680($gp)
	sw   $t0, 6684($gp)
	sw   $t0, 6688($gp)
	sw   $t0, 6692($gp)
	sw   $t0, 6696($gp)
	sw   $t0, 6700($gp)
	sw   $t0, 6704($gp)
	sw   $t0, 6708($gp)
	sw   $t0, 6712($gp)
	sw   $t0, 6716($gp)
	sw   $t0, 6720($gp)
	sw   $t0, 6724($gp)
	sw   $t0, 6728($gp)
	sw   $t0, 6732($gp)
	sw   $t0, 6736($gp)
	sw   $t0, 6740($gp)
	sw   $t0, 6744($gp)
	sw   $t0, 6748($gp)
	sw   $t0, 6752($gp)
	sw   $t0, 6756($gp)
	sw   $t0, 6760($gp)
	sw   $t0, 6764($gp)
	sw   $t0, 6796($gp)
	sw   $t0, 6800($gp)
	sw   $t0, 6804($gp)
	sw   $t0, 6808($gp)
	sw   $t0, 6812($gp)
	sw   $t0, 6816($gp)
	sw   $t0, 6820($gp)
	sw   $t0, 6824($gp)
	sw   $t0, 6828($gp)
	sw   $t0, 6832($gp)
	sw   $t0, 6836($gp)
	sw   $t0, 6840($gp)
	sw   $t0, 6844($gp)
	sw   $t0, 6848($gp)
	sw   $t0, 6852($gp)
	sw   $t0, 6856($gp)
	sw   $t0, 6860($gp)
	sw   $t0, 6864($gp)
	sw   $t0, 6868($gp)
	sw   $t0, 6872($gp)
	sw   $t0, 6876($gp)
	sw   $t0, 6880($gp)
	sw   $t0, 6884($gp)
	sw   $t0, 6888($gp)
	sw   $t0, 6892($gp)
	sw   $t0, 6896($gp)
	sw   $t0, 6900($gp)
	sw   $t0, 6904($gp)
	sw   $t0, 6908($gp)
	sw   $t0, 6912($gp)
	sw   $t0, 6916($gp)
	sw   $t0, 6920($gp)
	sw   $t0, 6924($gp)
	sw   $t0, 6928($gp)
	sw   $t0, 6932($gp)
	sw   $t0, 6936($gp)
	sw   $t0, 6940($gp)
	sw   $t0, 6944($gp)
	sw   $t0, 6948($gp)
	sw   $t0, 6952($gp)
	sw   $t0, 6956($gp)
	sw   $t0, 6960($gp)
	sw   $t0, 6964($gp)
	sw   $t0, 6968($gp)
	sw   $t0, 6972($gp)
	sw   $t0, 6976($gp)
	sw   $t0, 6980($gp)
	sw   $t0, 6984($gp)
	sw   $t0, 6988($gp)
	sw   $t0, 6992($gp)
	sw   $t0, 6996($gp)
	sw   $t0, 7000($gp)
	sw   $t0, 7004($gp)
	sw   $t0, 7020($gp)
	sw   $t0, 7064($gp)
	sw   $t0, 7068($gp)
	sw   $t0, 7072($gp)
	sw   $t0, 7084($gp)
	sw   $t0, 7088($gp)
	sw   $t0, 7092($gp)
	sw   $t0, 7096($gp)
	sw   $t0, 7100($gp)
	sw   $t0, 7104($gp)
	sw   $t0, 7108($gp)
	sw   $t0, 7112($gp)
	sw   $t0, 7116($gp)
	sw   $t0, 7120($gp)
	sw   $t0, 7124($gp)
	sw   $t0, 7128($gp)
	sw   $t0, 7132($gp)
	sw   $t0, 7136($gp)
	sw   $t0, 7140($gp)
	sw   $t0, 7144($gp)
	sw   $t0, 7148($gp)
	sw   $t0, 7152($gp)
	sw   $t0, 7156($gp)
	sw   $t0, 7160($gp)
	sw   $t0, 7164($gp)
	sw   $t0, 7168($gp)
	sw   $t0, 7172($gp)
	sw   $t0, 7176($gp)
	sw   $t0, 7180($gp)
	sw   $t0, 7184($gp)
	sw   $t0, 7188($gp)
	sw   $t0, 7192($gp)
	sw   $t0, 7196($gp)
	sw   $t0, 7200($gp)
	sw   $t0, 7204($gp)
	sw   $t0, 7208($gp)
	sw   $t0, 7212($gp)
	sw   $t0, 7216($gp)
	sw   $t0, 7220($gp)
	sw   $t0, 7224($gp)
	sw   $t0, 7228($gp)
	sw   $t0, 7232($gp)
	sw   $t0, 7236($gp)
	sw   $t0, 7240($gp)
	sw   $t0, 7244($gp)
	sw   $t0, 7248($gp)
	sw   $t0, 7252($gp)
	sw   $t0, 7344($gp)
	sw   $t0, 7348($gp)
	sw   $t0, 7352($gp)
	sw   $t0, 7356($gp)
	sw   $t0, 7360($gp)
	sw   $t0, 7364($gp)
	sw   $t0, 7368($gp)
	sw   $t0, 7372($gp)
	sw   $t0, 7376($gp)
	sw   $t0, 7380($gp)
	sw   $t0, 7384($gp)
	sw   $t0, 7388($gp)
	sw   $t0, 7392($gp)
	sw   $t0, 7396($gp)
	sw   $t0, 7400($gp)
	sw   $t0, 7404($gp)
	sw   $t0, 7408($gp)
	sw   $t0, 7424($gp)
	sw   $t0, 7428($gp)
	sw   $t0, 7432($gp)
	sw   $t0, 7436($gp)
	sw   $t0, 7440($gp)
	sw   $t0, 7444($gp)
	sw   $t0, 7448($gp)
	sw   $t0, 7452($gp)
	sw   $t0, 7456($gp)
	sw   $t0, 7460($gp)
	sw   $t0, 7464($gp)
	sw   $t0, 7468($gp)
	sw   $t0, 7472($gp)
	sw   $t0, 7476($gp)
	sw   $t0, 7480($gp)
	sw   $t0, 7484($gp)
	sw   $t0, 7488($gp)
	sw   $t0, 7492($gp)
	sw   $t0, 7496($gp)
	sw   $t0, 7500($gp)
	sw   $t0, 7504($gp)
	sw   $t0, 7508($gp)
	sw   $t0, 7600($gp)
	sw   $t0, 7604($gp)
	sw   $t0, 7608($gp)
	sw   $t0, 7612($gp)
	sw   $t0, 7616($gp)
	sw   $t0, 7620($gp)
	sw   $t0, 7624($gp)
	sw   $t0, 7628($gp)
	sw   $t0, 7632($gp)
	sw   $t0, 7636($gp)
	sw   $t0, 7640($gp)
	sw   $t0, 7644($gp)
	sw   $t0, 7648($gp)
	sw   $t0, 7652($gp)
	sw   $t0, 7656($gp)
	sw   $t0, 7680($gp)
	sw   $t0, 7688($gp)
	sw   $t0, 7692($gp)
	sw   $t0, 7696($gp)
	sw   $t0, 7704($gp)
	sw   $t0, 7708($gp)
	sw   $t0, 7712($gp)
	sw   $t0, 7716($gp)
	sw   $t0, 7720($gp)
	sw   $t0, 7724($gp)
	sw   $t0, 7728($gp)
	sw   $t0, 7732($gp)
	sw   $t0, 7736($gp)
	sw   $t0, 7740($gp)
	sw   $t0, 7744($gp)
	sw   $t0, 7748($gp)
	sw   $t0, 7752($gp)
	sw   $t0, 7756($gp)
	sw   $t0, 7760($gp)
	sw   $t0, 7856($gp)
	sw   $t0, 7860($gp)
	sw   $t0, 7864($gp)
	sw   $t0, 7868($gp)
	sw   $t0, 7872($gp)
	sw   $t0, 7876($gp)
	sw   $t0, 7880($gp)
	sw   $t0, 7884($gp)
	sw   $t0, 7888($gp)
	sw   $t0, 7892($gp)
	sw   $t0, 7896($gp)
	sw   $t0, 7900($gp)
	sw   $t0, 7904($gp)
	sw   $t0, 7908($gp)
	sw   $t0, 7936($gp)
	sw   $t0, 7940($gp)
	sw   $t0, 7944($gp)
	sw   $t0, 7948($gp)
	sw   $t0, 7952($gp)
	sw   $t0, 7956($gp)
	sw   $t0, 7960($gp)
	sw   $t0, 7964($gp)
	sw   $t0, 7968($gp)
	sw   $t0, 7972($gp)
	sw   $t0, 7976($gp)
	sw   $t0, 7980($gp)
	sw   $t0, 7984($gp)
	sw   $t0, 7988($gp)
	sw   $t0, 7992($gp)
	sw   $t0, 7996($gp)
	sw   $t0, 8000($gp)
	sw   $t0, 8004($gp)
	sw   $t0, 8008($gp)
	sw   $t0, 8012($gp)
	sw   $t0, 8108($gp)
	sw   $t0, 8112($gp)
	sw   $t0, 8116($gp)
	sw   $t0, 8120($gp)
	sw   $t0, 8124($gp)
	sw   $t0, 8128($gp)
	sw   $t0, 8132($gp)
	sw   $t0, 8136($gp)
	sw   $t0, 8140($gp)
	sw   $t0, 8144($gp)
	sw   $t0, 8148($gp)
	sw   $t0, 8152($gp)
	sw   $t0, 8156($gp)
	sw   $t0, 8160($gp)
	sw   $t0, 8164($gp)
	sw   $t0, 8200($gp)
	sw   $t0, 8204($gp)
	sw   $t0, 8208($gp)
	sw   $t0, 8212($gp)
	sw   $t0, 8216($gp)
	sw   $t0, 8220($gp)
	sw   $t0, 8224($gp)
	sw   $t0, 8228($gp)
	sw   $t0, 8232($gp)
	sw   $t0, 8236($gp)
	sw   $t0, 8240($gp)
	sw   $t0, 8244($gp)
	sw   $t0, 8248($gp)
	sw   $t0, 8252($gp)
	sw   $t0, 8256($gp)
	sw   $t0, 8260($gp)
	sw   $t0, 8264($gp)
	sw   $t0, 8268($gp)
	sw   $t0, 8272($gp)
	sw   $t0, 8360($gp)
	sw   $t0, 8364($gp)
	sw   $t0, 8368($gp)
	sw   $t0, 8372($gp)
	sw   $t0, 8376($gp)
	sw   $t0, 8380($gp)
	sw   $t0, 8384($gp)
	sw   $t0, 8388($gp)
	sw   $t0, 8392($gp)
	sw   $t0, 8396($gp)
	sw   $t0, 8400($gp)
	sw   $t0, 8420($gp)
	sw   $t0, 8460($gp)
	sw   $t0, 8464($gp)
	sw   $t0, 8468($gp)
	sw   $t0, 8472($gp)
	sw   $t0, 8476($gp)
	sw   $t0, 8480($gp)
	sw   $t0, 8484($gp)
	sw   $t0, 8492($gp)
	sw   $t0, 8496($gp)
	sw   $t0, 8500($gp)
	sw   $t0, 8504($gp)
	sw   $t0, 8508($gp)
	sw   $t0, 8512($gp)
	sw   $t0, 8516($gp)
	sw   $t0, 8520($gp)
	sw   $t0, 8524($gp)
	sw   $t0, 8528($gp)
	sw   $t0, 8632($gp)
	sw   $t0, 8636($gp)
	sw   $t0, 8640($gp)
	sw   $t0, 8644($gp)
	sw   $t0, 8648($gp)
	sw   $t0, 8652($gp)
	sw   $t0, 8656($gp)
	sw   $t0, 8676($gp)
	sw   $t0, 8716($gp)
	sw   $t0, 8720($gp)
	sw   $t0, 8724($gp)
	sw   $t0, 8728($gp)
	sw   $t0, 8732($gp)
	sw   $t0, 8736($gp)
	sw   $t0, 8740($gp)
	sw   $t0, 8744($gp)
	sw   $t0, 8748($gp)
	sw   $t0, 8752($gp)
	sw   $t0, 8756($gp)
	sw   $t0, 8760($gp)
	sw   $t0, 8892($gp)
	sw   $t0, 8896($gp)
	sw   $t0, 8904($gp)
	sw   $t0, 8908($gp)
	sw   $t0, 8984($gp)
	sw   $t0, 8988($gp)
	sw   $t0, 8992($gp)
	sw   $t0, 8996($gp)
	sw   $t0, 9000($gp)
	sw   $t0, 9004($gp)
	sw   $t0, 9008($gp)
	sw   $t0, 9012($gp)
	sw   $t0, 9152($gp)
	sw   $t0, 9156($gp)
	sw   $t0, 9160($gp)
	sw   $t0, 9244($gp)
	sw   $t0, 9248($gp)
	sw   $t0, 9252($gp)
	sw   $t0, 9256($gp)
	sw   $t0, 9260($gp)
	sw   $t0, 9264($gp)
	sw   $t0, 9412($gp)
	sw   $t0, 9416($gp)
	sw   $t0, 9420($gp)
	sw   $t0, 9424($gp)
	sw   $t0, 9428($gp)
	sw   $t0, 9508($gp)
	sw   $t0, 9512($gp)
	sw   $t0, 9516($gp)
	sw   $t0, 9520($gp)
	sw   $t0, 9668($gp)
	sw   $t0, 9684($gp)
	sw   $t0, 9768($gp)
	sw   $t0, 9772($gp)
	sw   $t0, 9920($gp)
	sw   $t0, 9944($gp)
	sw   $t0, 10004($gp)
	sw   $t0, 10008($gp)
	sw   $t0, 10012($gp)
	sw   $t0, 10016($gp)
	sw   $t0, 10020($gp)
	sw   $t0, 10024($gp)
	sw   $t0, 10028($gp)
	sw   $t0, 10032($gp)
	sw   $t0, 10200($gp)
	sw   $t0, 10256($gp)
	sw   $t0, 10288($gp)
	sw   $t0, 10292($gp)
	sw   $t0, 10456($gp)
	sw   $t0, 10460($gp)
	sw   $t0, 10464($gp)
	sw   $t0, 10468($gp)
	sw   $t0, 10508($gp)
	sw   $t0, 10712($gp)
	sw   $t0, 10728($gp)
	sw   $t0, 10760($gp)
	sw   $t0, 10764($gp)
	sw   $t0, 10964($gp)
	sw   $t0, 10984($gp)
	sw   $t0, 11008($gp)
	sw   $t0, 11012($gp)
	sw   $t0, 11240($gp)
	sw   $t0, 11244($gp)
	sw   $t0, 11248($gp)
	sw   $t0, 11252($gp)
	sw   $t0, 11256($gp)
	sw   $t0, 11500($gp)
	sw   $t0, 11516($gp)
	sw   $t0, 11752($gp)
	sw   $t0, 11772($gp)
	sw   $t0, 12028($gp)
	sw   $t0, 12800($gp)
	sw   $t0, 13052($gp)
	sw   $t0, 13056($gp)
	sw   $t0, 13308($gp)
	sw   $t0, 13312($gp)
	sw   $t0, 13316($gp)
	sw   $t0, 13544($gp)
	sw   $t0, 13548($gp)
	sw   $t0, 13552($gp)
	sw   $t0, 13556($gp)
	sw   $t0, 13560($gp)
	sw   $t0, 13564($gp)
	sw   $t0, 13568($gp)
	sw   $t0, 13572($gp)
	sw   $t0, 13576($gp)
	sw   $t0, 13580($gp)
	sw   $t0, 13584($gp)
	sw   $t0, 13588($gp)
	sw   $t0, 13812($gp)
	sw   $t0, 13816($gp)
	sw   $t0, 13820($gp)
	sw   $t0, 13824($gp)
	sw   $t0, 13828($gp)
	sw   $t0, 13832($gp)
	sw   $t0, 13848($gp)
	sw   $t0, 14072($gp)
	sw   $t0, 14076($gp)
	sw   $t0, 14080($gp)
	sw   $t0, 14328($gp)
	sw   $t0, 14332($gp)
	sw   $t0, 14588($gp)

	jr   $ra
